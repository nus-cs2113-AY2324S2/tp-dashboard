[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"# FitNUS","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"## Project Introduction","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"FitNUS is a CLI application that aims to help combat diabetes and the overconsumption of calories, sugar, and","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"carbohydrates. Promote healthy lifestyle.","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"Users are able to track the meals and drinks they have in a day.","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"## Table of Contents","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"[1) Features List](#1-features-list)","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"* [1.1 Information for users](#11-information-for-users)","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"   * [1.1.1 Viewing all commands:** `help`](#111-viewing-all-commands-help-)","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"* [1.2 For user to add data](#12-for-user-to-add-data)","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"   * [1.2.1 Add a meal eaten: `ate`](#121-add-a-meal-eaten-ate)","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"   * [1.2.2 Add a drink: `drink`](#122-add-a-drink-drink)","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"   * [1.2.3 Add water: `water`](#123-add-water-water)","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"* [1.3 For data retrieval](#13-for-data-retrieval)","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"   * [1.3.1 Find the information about a certain meal: `infoMeal`](#131-find-the-information-about-a-certain-meal-infomeal)","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"   * [1.3.2 Find the information about a certain drink: `infoDrink`](#132-find-the-information-about-a-certain-drink-infodrink)","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"   * [1.3.3 View daily calories consumed: `calories`](#133-view-daily-calories-consumed-calories)","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"   * [1.3.4 View daily carbohydrates consumed: `carbs`](#134-view-daily-carbohydrates-consumed-carbs)","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"   * [1.3.5 View daily proteins consumed: `protein`](#135-view-daily-proteins-consumed-protein)","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"   * [1.3.6 View daily fat consumed: `fat`](#136-view-daily-fat-consumed-fat)","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"   * [1.3.7 View daily sugar consumed: `sugar`](#137-view-daily-sugar-consumed-sugar)","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"   * [1.3.8 View daily fiber consumed: `fiber`](#138-view-daily-fiber-consumed-fiber)","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"   * [1.3.9 View daily water consumption: `viewWater`](#139-view-daily-water-consumption-viewwater)","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"* [1.4 For listing arrays](#14-for-listing-arrays)","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"   * [1.4.1 List meal intake: `listMeals`](#141-list-meal-intake-listmeals)","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"   * [1.4.2 List drink intake: `listDrinks`](#142-list-drink-intake-listdrinks)","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"   * [1.4.3 List entire food intake for the day: `listEverything`](#143-list-entire-food-intake-for-the-day-listeverything)","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"* [1.5 For editing existing data](#15-for-editing-existing-data)","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"   * [1.5.1 Edit an existing meal after inserted: `editMeal`](#151-edit-an-existing-meal-after-inserted-editmeal)","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"   * [1.5.2 Edit an existing drink after inserted: `editDrink`](#152-edit-an-existing-drink-after-inserted-editdrink)","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"   * [1.5.3 Edit water intake after inserted: `editWater`](#153-edit-water-intake-after-inserted-editwater)","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"* [1.6 For deleting data](#16-for-deleting-data)","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"   * [1.6.1 Delete certain meal entry: `deleteMeal`](#161-delete-certain-meal-entry-deletemeal)","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"   * [1.6.2 Delete certain drink entry: `deleteDrink`](#162-delete-certain-drink-entry-deletedrink)","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"* [1.7 For clearing data](#17-for-clearing-data-)","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"   * [1.7.1 Clear all entries: `clear`](#171-clear-all-entries-clear)","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"* [1.8: Exit program](#18-exit-program)","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"   * [1.8.1 Exit the app: `exit`](#181-exit-the-app-exit)","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"## 1) Features List","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"### 1.1 Information for users","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"### 1.1.1 Viewing all commands:** `help`","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"Shows a list of all possible command inputs.  ","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"**Format**: help  ","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"**Sample Input**: help  ","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"**Expected Output**:  ","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"here\u0027s all the valid commands i recognise:","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"- Add a meal eaten: ate m/MEAL s/SERVING_SIZE","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"- Add a drink: drink d/DRINK s/SERVING_SIZE","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"- Add water: water s/SERVING_SIZE","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"- Find the information about a certain meal: infoMeal MEAL","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"- Find the information about a certain drink: infoDrink DRINK","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"- View daily calories consumed: calories","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"- View daily carbohydrates consumed: carbs","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"- View daily proteins consumed: protein","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"- View daily fat consumed: fat","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"- View daily sugar consumed: sugar","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"- View daily fiber consumed: fiber","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"- View daily water consumption: viewWater","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"- List meal intake: listMeals","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"- List drink intake: listDrinks","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"- List entire food intake for the day: listEverything","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"- Edit an existing meal after inserted: editMeal INDEX s/NEW_SERVING_SIZE","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"- Edit an existing drink after inserted: editDrink INDEX s/NEW_SERVING_SIZE","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"- Delete certain meal entry: deleteMeal INDEX","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"- Delete certain drink entry: deleteDrink INDEX","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"- Clear all entries: clear","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"- Exit the app: exit","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"### 1.2 For user to add data","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"### 1.2.1 Add a meal eaten: `ate`","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"Adds a meal to the list of meals  ","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"claribelho"},"content":"**Format**: ate m/MEAL s/SERVING_SIZE  ","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"**Sample Input**: ate m/Chicken Rice s/1  ","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"**Expected Output**: Added 1 serving of Chicken Rice","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"claribelho"},"content":"### 1.2.2 Add a drink: `drink`","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"Adds a drink to the list of drinks  ","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"claribelho"},"content":"**Format**: drink d/DRINK s/SERVING_SIZE  ","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"claribelho"},"content":"**Sample Input**: drink d/Lemon Tea s/100  ","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"claribelho"},"content":"**Expected Output**: Added 100ml of Lemon Tea","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"claribelho"},"content":"### 1.2.3 Add water: `water`","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"Adds water (in ml) to the daily water intake count  ","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"claribelho"},"content":"**Format**: water s/SERVING_SIZE  ","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"claribelho"},"content":"**Sample Input**: water s/200  ","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"claribelho"},"content":"**Expected Output**: Added 200ml of water","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"claribelho"},"content":"## 1.3 For data retrieval","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"claribelho"},"content":"### 1.3.1 Find the information about a certain meal: `infoMeal`","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"claribelho"},"content":"For the specified meal, display its nutritional content to the user  ","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"claribelho"},"content":"**Format**: infoMeal MEAL  ","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"claribelho"},"content":"**Sample Input**: infoMeal chicken rice  ","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"claribelho"},"content":"**Expected Output**:  ","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"claribelho"},"content":"Meal: chicken rice (per serving)  ","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"claribelho"},"content":"Calories: 400  ","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"claribelho"},"content":"Carbs: 50  ","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"claribelho"},"content":"Protein: 30  ","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"claribelho"},"content":"Fat: 20  ","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"claribelho"},"content":"Fiber: 10  ","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"claribelho"},"content":"Sugar: 5","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"claribelho"},"content":"### 1.3.2 Find the information about a certain drink: `infoDrink`","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"claribelho"},"content":"For the inputed drink, display its nutritional content to the user  ","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"claribelho"},"content":"**Format**: infoDrink DRINK  ","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"claribelho"},"content":"**Sample input**: infoDrink sprite  ","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"claribelho"},"content":"**Expected output**:    ","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"claribelho"},"content":"SPRITE (473 ml)  ","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"claribelho"},"content":"Calories: 194 kcal  ","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"claribelho"},"content":"Carbs: 50g  ","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"claribelho"},"content":"Protein: 0.2g  ","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"claribelho"},"content":"Fat: 0.1g","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"claribelho"},"content":"### 1.3.3 View daily calories consumed: `calories`","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"claribelho"},"content":"Display current total calorie intake for the day   ","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"claribelho"},"content":"**Format**: calories    ","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"claribelho"},"content":"**Expected output**: Total calories: 100 cal","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"claribelho"},"content":"### 1.3.4 View daily carbohydrates consumed: `carbs`","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"claribelho"},"content":"Display current total carbohydrates intake for the day  ","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"claribelho"},"content":"**Format**: carbs  ","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"claribelho"},"content":"**Expected output**: Total Carbohydrates: 150 grams","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"claribelho"},"content":"### 1.3.5 View daily proteins consumed: `protein`","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"claribelho"},"content":"Display current total protein intake for the day  ","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"claribelho"},"content":"**Format**: protein  ","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"claribelho"},"content":"**Expected output**: Total proteins: 100 grams","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"claribelho"},"content":"### 1.3.6 View daily fat consumed: `fat`","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"claribelho"},"content":"Display current total fat intake for the day  ","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"claribelho"},"content":"**Format**: fat  ","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"claribelho"},"content":"**Expected output**: Total fat: 50 grams","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"claribelho"},"content":"### 1.3.7 View daily sugar consumed: `sugar`","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"claribelho"},"content":"Display current total sugar intake for the day  ","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"claribelho"},"content":"**Format**: sugar  ","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"claribelho"},"content":"**Expected output**: Total sugar: 20 grams","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"claribelho"},"content":"### 1.3.8 View daily fiber consumed: `fiber`","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"claribelho"},"content":"Display current total fiber intake (g) for the day  ","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"claribelho"},"content":"**Format**: viewFiber  ","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"claribelho"},"content":"**Expected output**: Total fiber: 20 grams","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"claribelho"},"content":"### 1.3.9 View daily water consumption: `viewWater`","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"claribelho"},"content":"Display current total water intake (in ml) for the day  ","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"claribelho"},"content":"**Format**: viewWater  ","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"claribelho"},"content":"**Expected output**: Total water intake: 0 ml","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"claribelho"},"content":"## 1.4 For listing arrays","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"claribelho"},"content":"### 1.4.1 List meal intake: `listMeals`","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"claribelho"},"content":"List all the meals user inputted today  ","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"claribelho"},"content":"**Format**: listMeals   ","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"claribelho"},"content":"**Expected output**:   ","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"claribelho"},"content":"here\u0027s what you have eaten today  ","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"claribelho"},"content":"1.pizza (serving size: 1)","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"claribelho"},"content":"### 1.4.2 List drink intake: `listDrinks`","lastModifiedDate":"2024-03-19"},{"lineNumber":162,"author":{"gitId":"claribelho"},"content":"List all the drinks user inputted today  ","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"claribelho"},"content":"**Format**: listDrinks  ","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"claribelho"},"content":"**Expected output**:  ","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"claribelho"},"content":"here\u0027s what you have drank today  ","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"claribelho"},"content":"1.sprite (serving size: 1)  ","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"claribelho"},"content":"Total water intake: 0 ml","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"claribelho"},"content":"### 1.4.3 List entire food intake for the day: `listEverything`","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"claribelho"},"content":"List all the drinks and meals inputted today  ","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"claribelho"},"content":"**Format**: listEverything  ","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"claribelho"},"content":"**Expected output**:  ","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"claribelho"},"content":"here\u0027s what you have consumed today  ","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"claribelho"},"content":"1.pizza (serving size: 1)  ","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"claribelho"},"content":"2.sprite (serving size: 1)  ","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"claribelho"},"content":"Total water intake: 0 ml","lastModifiedDate":"2024-03-19"},{"lineNumber":177,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":178,"author":{"gitId":"claribelho"},"content":"## 1.5 For editing existing data","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"claribelho"},"content":"### 1.5.1 Edit an existing meal after inserted: `editMeal`","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"claribelho"},"content":"For a meal that was inputted in the day, edit its serving size  ","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"claribelho"},"content":"**Format**: editMealServingSize INDEX s/NEW_SERVING_SIZE  ","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"claribelho"},"content":"**Sample input**: editMeal 2 s/2  ","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"claribelho"},"content":"**Expected output**: Pizza has been edited to 2 servings","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"claribelho"},"content":"### 1.5.2 Edit an existing drink after inserted: `editDrink`","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"claribelho"},"content":"For a drink that was inputted in the day, edit its serving size  ","lastModifiedDate":"2024-03-19"},{"lineNumber":187,"author":{"gitId":"claribelho"},"content":"**Format**: editDrinkServingSize INDEX s/NEW_SERVING_SIZE  ","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"claribelho"},"content":"**Sample input**: editDrink 1 s/200  ","lastModifiedDate":"2024-03-19"},{"lineNumber":189,"author":{"gitId":"claribelho"},"content":"**Expected output**: Sprite has been edited to 200 ml","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":191,"author":{"gitId":"claribelho"},"content":"### 1.5.3 Edit water intake after inserted: `editWater`","lastModifiedDate":"2024-03-19"},{"lineNumber":192,"author":{"gitId":"claribelho"},"content":"Edit serving size of total water intake  ","lastModifiedDate":"2024-03-19"},{"lineNumber":193,"author":{"gitId":"claribelho"},"content":"**Format**: editWaterIntake s/TOTAL_WATER_INTAKE  ","lastModifiedDate":"2024-03-19"},{"lineNumber":194,"author":{"gitId":"claribelho"},"content":"**Sample input**: editWaterIntake 200  ","lastModifiedDate":"2024-03-19"},{"lineNumber":195,"author":{"gitId":"claribelho"},"content":"**Expected output**: Total water has been edited to 200 ml","lastModifiedDate":"2024-03-19"},{"lineNumber":196,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"claribelho"},"content":"## 1.6 For deleting data","lastModifiedDate":"2024-03-19"},{"lineNumber":198,"author":{"gitId":"claribelho"},"content":"### 1.6.1 Delete certain meal entry: `deleteMeal`","lastModifiedDate":"2024-03-19"},{"lineNumber":199,"author":{"gitId":"claribelho"},"content":"For a meal that was inputted in the day, delete its input based on its index in the meal list","lastModifiedDate":"2024-03-19"},{"lineNumber":200,"author":{"gitId":"claribelho"},"content":"**Format**: deleteMeal INDEX","lastModifiedDate":"2024-03-19"},{"lineNumber":201,"author":{"gitId":"claribelho"},"content":"**Sample Input**: deleteMeal 1","lastModifiedDate":"2024-03-19"},{"lineNumber":202,"author":{"gitId":"claribelho"},"content":"**Expected output**: Removed Chicken Rice From Meals","lastModifiedDate":"2024-03-19"},{"lineNumber":203,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":204,"author":{"gitId":"claribelho"},"content":"### 1.6.2 Delete certain drink entry: `deleteDrink`","lastModifiedDate":"2024-03-19"},{"lineNumber":205,"author":{"gitId":"claribelho"},"content":"For a drink that was inputted in the day, delete its input based on its index in the drink list  ","lastModifiedDate":"2024-03-19"},{"lineNumber":206,"author":{"gitId":"claribelho"},"content":"**Format**: deleteDrink INDEX  ","lastModifiedDate":"2024-03-19"},{"lineNumber":207,"author":{"gitId":"claribelho"},"content":"**Sample input**: deleteDrink 1  ","lastModifiedDate":"2024-03-19"},{"lineNumber":208,"author":{"gitId":"claribelho"},"content":"**Expected output:**  Removed Iced Lemon Tea From Drinks","lastModifiedDate":"2024-03-19"},{"lineNumber":209,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":210,"author":{"gitId":"claribelho"},"content":"## 1.7 For clearing data","lastModifiedDate":"2024-03-19"},{"lineNumber":211,"author":{"gitId":"claribelho"},"content":"### 1.7.1 Clear all entries: `clear`","lastModifiedDate":"2024-03-19"},{"lineNumber":212,"author":{"gitId":"claribelho"},"content":"Clear all entries in mealList and drinkList  ","lastModifiedDate":"2024-03-19"},{"lineNumber":213,"author":{"gitId":"claribelho"},"content":"**Format**: clear  ","lastModifiedDate":"2024-03-19"},{"lineNumber":214,"author":{"gitId":"claribelho"},"content":"**Expected output**: All entries have been deleted","lastModifiedDate":"2024-03-19"},{"lineNumber":215,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":216,"author":{"gitId":"claribelho"},"content":"## 1.8: Exit program","lastModifiedDate":"2024-03-19"},{"lineNumber":217,"author":{"gitId":"claribelho"},"content":"### 1.8.1 Exit the app: `exit`","lastModifiedDate":"2024-03-19"},{"lineNumber":218,"author":{"gitId":"claribelho"},"content":"**Format**: exit  ","lastModifiedDate":"2024-03-19"},{"lineNumber":219,"author":{"gitId":"claribelho"},"content":"**Expected output**: Bye. Hope to see you again soon!","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"claribelho":219}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"    mainClass.set(\"seedu.fitnus.FitNus\")","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"    archiveBaseName.set(\"fitnus\")","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"claribelho":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |         Name          |               Github Profile                | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"BryanCastorius"},"content":"--------|:---------------------:|:-------------------------------------------:|:---------:","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"edwardhumi"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |    Edward Humianto    |   [Github](https://github.com/edwardhumi)   | [Portfolio](docs/team/edwardhumi.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"jasonlienardi"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |    Jason Lienardi     | [Github](https://github.com/jasonlienardi)  | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"-- |      Claribel Ho      |  [Github] (https://github.com/claribelho)   | [Portfolio] (docs/team/claribelho.md)","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Bryan Castorius Halim | [Github](https://github.com/BryanCastorius) | [Portfolio](docs/team/bryancastorius.md)","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"edwardhumi":1,"jasonlienardi":1,"BryanCastorius":2,"-":3,"claribelho":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"jasonlienardi"},"content":"### Tracking Exercise Feature","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"jasonlienardi"},"content":"- Create a CSV which stores data regarding how many calories are burnt per hour for each exercise type (eg. swimming, running, cycling).","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"jasonlienardi"},"content":"- Implement a \u0027track exercise\u0027 function which will be parsed with the format:","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"jasonlienardi"},"content":"  track exercise t/{type of exercise} d/{duration of exercise}","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"jasonlienardi"},"content":"- Parse the command","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"jasonlienardi"},"content":"- Using a hashmap, access the data regarding the amount of calories burnt per hour for the given exercise and calculate the total calories burnt for the given duration.","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"jasonlienardi"},"content":"- Store the total calories burnt through exercise in the User class","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"edwardhumi"},"content":"### CSV Storage","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"edwardhumi"},"content":"- Create three CSV files for storing meal nutrients, drink nutrients, and exercise calories information.","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"edwardhumi"},"content":"- For each line in the CSV, parse the string with \",\" as the delimiter, with the first element being the name and the others being the nutrient/calories information ","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"edwardhumi"},"content":"- Save each description name and nutrient/calories information in the corresponding hashmap (meal, drink, and exercise) to be used by other functions. ","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"edwardhumi"},"content":"### Saved Meal, Drink, Exercises Storage","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"edwardhumi"},"content":"- Each meal object in the meal list corresponds to a string with a format of `meal_name,serving_size,date`","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"edwardhumi"},"content":"- Each drink object in the drink list corresponds to a string with a format of `drink_name,volume,date`","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"edwardhumi"},"content":"- Each exercise object in the exercise list corresponds to a string with a format of `exercise_name,duration,intensity,date`","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"edwardhumi"},"content":"- To store, convert all objects (meal, drink, exercise) in the list into its corresponding string, then write the appended strings into a .txt file","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"edwardhumi"},"content":"- To retrieve, parse each string using \",\" as its delimiter and convert it into its corresponding objects, then add all the entries to the object list (mealList, drinkList, exerciseList)","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"jasonlienardi"},"content":"- Have a need to manage their dietary intake and exercise routines effectively.","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"jasonlienardi"},"content":"- Prefer desktop applications over other types of platforms.","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"jasonlienardi"},"content":"- Can type quickly and prefer typing over mouse interactions.","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"jasonlienardi"},"content":"- Are reasonably comfortable using command-line interface (CLI) applications.","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"jasonlienardi"},"content":"The fitness app aims to help users manage their dietary habits and exercise routines more efficiently compared to traditional GUI-driven apps. ","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"BryanCastorius"},"content":"By offering a streamlined interface optimized for keyboard input and CLI interactions, users can track their meals, drinks, and exercises swiftly, allowing them to focus more on their fitness and nutritional goals and less on navigating through complex user interfaces.","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"jasonlienardi"},"content":"| Priority | As a ... | I want to ...          | So that I can ...                                      |","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"jasonlienardi"},"content":"|----------|----------|------------------------|--------------------------------------------------------|","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"jasonlienardi"},"content":"| ***      |new user| see usage instructions | refer to them when I forget how to use the application |","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"jasonlienardi"},"content":"| ***      |user| add a meal | track my daily calorie intake                          |","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"BryanCastorius"},"content":"1. Should work on any mainstream OS (Linux, Windows, MacOS) as long as it has Java 11 or above installed.","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"jasonlienardi"},"content":"2. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"jasonlienardi"},"content":"* *meal* - Any food consumed.","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"jasonlienardi"},"content":"* *drink* - Any beverage consumed.","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"jasonlienardi"},"content":"* *exercise* - Any physical activity performed.","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"jasonlienardi"},"content":"* *calories* - Measure of energy derived from food.","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"jasonlienardi"},"content":"* *carbohydrates* - Macronutrient providing energy.","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"jasonlienardi"},"content":"* *proteins* - Macronutrient essential for growth and repair.","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"jasonlienardi"},"content":"* *fat* - Macronutrient important for energy storage and insulation.","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"jasonlienardi"},"content":"* *sugar* - Simple carbohydrate often added to food for sweetness.","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"jasonlienardi"},"content":"* *fiber* - Indigestible plant material aiding digestion.","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"jasonlienardi"},"content":"* *water* - Essential liquid for hydration and bodily functions.","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"BryanCastorius"},"content":"Given below are instructions to test the app on your own device.","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"BryanCastorius"},"content":"### Launch and Shutdown","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"BryanCastorius"},"content":"1. Initial Launch","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"BryanCastorius"},"content":"   1. Create an empty folder, download the jar file, and place the file inside the folder.","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"BryanCastorius"},"content":"   2. Open the terminal and navigate to the folder you just created.","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"BryanCastorius"},"content":"   3. Type `java -jar [name of the jar]`, e.g.`(java -jar FitNUS.jar)` on the CLI.","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"BryanCastorius"},"content":"2. Window Preference","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"BryanCastorius"},"content":"   1. Resize the window to an optimum size. Ideally full screen, as some text might not be displayed correctly.","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"BryanCastorius"},"content":"3. App Features and Commands","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"BryanCastorius"},"content":"4. Save and Shutdown","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"BryanCastorius"},"content":"   1. Type `exit` to shut down the FitNUS app.","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"BryanCastorius"},"content":"   2. Upon exiting, all entries inputted will be updated to the database locally.","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"edwardhumi":12,"jasonlienardi":28,"BryanCastorius":14,"-":28}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"edwardhumi"},"content":"# FitNUS","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"## Project Introduction","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"FitNUS is a CLI application that aims to help combat diabetes and the overconsumption of calories, sugar, and ","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"carbohydrates. Promote healthy lifestyle.","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"Users are able to track the meals and drinks they have in a day.","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"## Table of Contents","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"[1) Features List](#1-features-list)","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"  * [1.1 Information for users](#11-information-for-users)","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"    * [1.1.1 Viewing all commands:** `help`](#111-viewing-all-commands-help-)","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"  * [1.2 For user to add data](#12-for-user-to-add-data)","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"    * [1.2.1 Add a meal eaten: `ate`](#121-add-a-meal-eaten-ate)","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"    * [1.2.2 Add a drink: `drink`](#122-add-a-drink-drink)","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"    * [1.2.3 Add water: `water`](#123-add-water-water)","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"  * [1.3 For data retrieval](#13-for-data-retrieval)","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"    * [1.3.1 Find the information about a certain meal: `infoMeal`](#131-find-the-information-about-a-certain-meal-infomeal)","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"    * [1.3.2 Find the information about a certain drink: `infoDrink`](#132-find-the-information-about-a-certain-drink-infodrink)","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"    * [1.3.3 View daily calories consumed: `calories`](#133-view-daily-calories-consumed-calories)","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"    * [1.3.4 View daily carbohydrates consumed: `carbs`](#134-view-daily-carbohydrates-consumed-carbs)","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"    * [1.3.5 View daily proteins consumed: `protein`](#135-view-daily-proteins-consumed-protein)","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"    * [1.3.6 View daily fat consumed: `fat`](#136-view-daily-fat-consumed-fat)","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"    * [1.3.7 View daily sugar consumed: `sugar`](#137-view-daily-sugar-consumed-sugar)","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"    * [1.3.8 View daily fiber consumed: `fiber`](#138-view-daily-fiber-consumed-fiber)","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"    * [1.3.9 View daily water consumption: `viewWater`](#139-view-daily-water-consumption-viewwater)","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"  * [1.4 For listing arrays](#14-for-listing-arrays)","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"    * [1.4.1 List meal intake: `listMeals`](#141-list-meal-intake-listmeals)","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"    * [1.4.2 List drink intake: `listDrinks`](#142-list-drink-intake-listdrinks)","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"    * [1.4.3 List entire food intake for the day: `listEverything`](#143-list-entire-food-intake-for-the-day-listeverything)","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"  * [1.5 For editing existing data](#15-for-editing-existing-data)","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"    * [1.5.1 Edit an existing meal after inserted: `editMeal`](#151-edit-an-existing-meal-after-inserted-editmeal)","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"    * [1.5.2 Edit an existing drink after inserted: `editDrink`](#152-edit-an-existing-drink-after-inserted-editdrink)","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"    * [1.5.3 Edit water intake after inserted: `editWater`](#153-edit-water-intake-after-inserted-editwater)","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"  * [1.6 For deleting data](#16-for-deleting-data)","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"    * [1.6.1 Delete certain meal entry: `deleteMeal`](#161-delete-certain-meal-entry-deletemeal)","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"    * [1.6.2 Delete certain drink entry: `deleteDrink`](#162-delete-certain-drink-entry-deletedrink)","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"  * [1.7 For clearing data](#17-for-clearing-data-)","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"    * [1.7.1 Clear all entries: `clear`](#171-clear-all-entries-clear)","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"  * [1.8: Exit program](#18-exit-program)","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"    * [1.8.1 Exit the app: `exit`](#181-exit-the-app-exit)","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"## 1) Features List","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"### 1.1 Information for users","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"### 1.1.1 Viewing all commands:** `help`  ","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"Shows a list of all possible command inputs.  ","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"**Format**: help  ","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"**Sample Input**: help  ","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"**Expected Output**:  ","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"here\u0027s all the valid commands i recognise:","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"- Add a meal eaten: ate m/MEAL s/SERVING_SIZE","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"- Add a drink: drink d/DRINK s/SERVING_SIZE","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"- Add water: water s/SERVING_SIZE","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"- Find the information about a certain meal: infoMeal MEAL","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"- Find the information about a certain drink: infoDrink DRINK","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"- View daily calories consumed: calories","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"- View daily carbohydrates consumed: carbs","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"- View daily proteins consumed: protein","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"- View daily fat consumed: fat","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"- View daily sugar consumed: sugar","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"- View daily fiber consumed: fiber","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"- View daily water consumption: viewWater","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"- List meal intake: listMeals","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"- List drink intake: listDrinks","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"- List entire food intake for the day: listEverything","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"- Edit an existing meal after inserted: editMeal INDEX s/NEW_SERVING_SIZE","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"- Edit an existing drink after inserted: editDrink INDEX s/NEW_SERVING_SIZE","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"- Delete certain meal entry: deleteMeal INDEX","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"- Delete certain drink entry: deleteDrink INDEX","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"- Clear all entries: clear","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"- Exit the app: exit","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"### 1.2 For user to add data","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"### 1.2.1 Add a meal eaten: `ate`","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"Adds a meal to the list of meals  ","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"claribelho"},"content":"**Format**: ate m/MEAL s/SERVING_SIZE  ","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"**Sample Input**: ate m/Chicken Rice s/1  ","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"**Expected Output**: Added 1 serving of Chicken Rice  ","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"claribelho"},"content":"### 1.2.2 Add a drink: `drink`","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"Adds a drink to the list of drinks  ","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"claribelho"},"content":"**Format**: drink d/DRINK s/SERVING_SIZE  ","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"claribelho"},"content":"**Sample Input**: drink d/Lemon Tea s/100  ","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"claribelho"},"content":"**Expected Output**: Added 100ml of Lemon Tea  ","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"claribelho"},"content":"### 1.2.3 Add water: `water`","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"Adds water (in ml) to the daily water intake count  ","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"claribelho"},"content":"**Format**: water s/SERVING_SIZE  ","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"claribelho"},"content":"**Sample Input**: water s/200  ","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"claribelho"},"content":"**Expected Output**: Added 200ml of water  ","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"claribelho"},"content":"## 1.3 For data retrieval","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"claribelho"},"content":"### 1.3.1 Find the information about a certain meal: `infoMeal`","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"claribelho"},"content":"For the specified meal, display its nutritional content to the user  ","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"claribelho"},"content":"**Format**: infoMeal MEAL  ","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"claribelho"},"content":"**Sample Input**: infoMeal chicken rice  ","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"claribelho"},"content":"**Expected Output**:  ","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"claribelho"},"content":"Meal: chicken rice (per serving)  ","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"claribelho"},"content":"Calories: 400  ","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"claribelho"},"content":"Carbs: 50  ","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"claribelho"},"content":"Protein: 30  ","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"claribelho"},"content":"Fat: 20  ","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"claribelho"},"content":"Fiber: 10  ","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"claribelho"},"content":"Sugar: 5  ","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"claribelho"},"content":"### 1.3.2 Find the information about a certain drink: `infoDrink`","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"claribelho"},"content":"For the inputed drink, display its nutritional content to the user  ","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"claribelho"},"content":"**Format**: infoDrink DRINK  ","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"claribelho"},"content":"**Sample input**: infoDrink sprite  ","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"claribelho"},"content":"**Expected output**:    ","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"claribelho"},"content":"SPRITE (473 ml)  ","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"claribelho"},"content":"Calories: 194 kcal  ","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"claribelho"},"content":"Carbs: 50g  ","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"claribelho"},"content":"Protein: 0.2g  ","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"claribelho"},"content":"Fat: 0.1g  ","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"claribelho"},"content":"### 1.3.3 View daily calories consumed: `calories`","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"claribelho"},"content":"Display current total calorie intake for the day   ","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"claribelho"},"content":"**Format**: calories    ","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"claribelho"},"content":"**Expected output**: Total calories: 100 cal  ","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"claribelho"},"content":"### 1.3.4 View daily carbohydrates consumed: `carbs`","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"claribelho"},"content":"Display current total carbohydrates intake for the day  ","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"claribelho"},"content":"**Format**: carbs  ","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"claribelho"},"content":"**Expected output**: Total Carbohydrates: 150 grams","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"claribelho"},"content":"### 1.3.5 View daily proteins consumed: `protein`","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"claribelho"},"content":"Display current total protein intake for the day  ","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"claribelho"},"content":"**Format**: protein  ","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"claribelho"},"content":"**Expected output**: Total proteins: 100 grams","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"claribelho"},"content":"### 1.3.6 View daily fat consumed: `fat`","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"claribelho"},"content":"Display current total fat intake for the day  ","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"claribelho"},"content":"**Format**: fat  ","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"claribelho"},"content":"**Expected output**: Total fat: 50 grams","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"claribelho"},"content":"### 1.3.7 View daily sugar consumed: `sugar`","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"claribelho"},"content":"Display current total sugar intake for the day  ","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"claribelho"},"content":"**Format**: sugar  ","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"claribelho"},"content":"**Expected output**: Total sugar: 20 grams","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"claribelho"},"content":"### 1.3.8 View daily fiber consumed: `fiber`","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"claribelho"},"content":"Display current total fiber intake (g) for the day  ","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"claribelho"},"content":"**Format**: viewFiber  ","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"claribelho"},"content":"**Expected output**: Total fiber: 20 grams","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"claribelho"},"content":"### 1.3.9 View daily water consumption: `viewWater`","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"claribelho"},"content":"Display current total water intake (in ml) for the day  ","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"claribelho"},"content":"**Format**: viewWater  ","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"claribelho"},"content":"**Expected output**: Total water intake: 0 ml","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"claribelho"},"content":"## 1.4 For listing arrays","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"claribelho"},"content":"### 1.4.1 List meal intake: `listMeals`","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"claribelho"},"content":"List all the meals user inputted today  ","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"claribelho"},"content":"**Format**: listMeals   ","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"claribelho"},"content":"**Expected output**:   ","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"claribelho"},"content":"here\u0027s what you have eaten today  ","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"claribelho"},"content":"1.pizza (serving size: 1)","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"claribelho"},"content":"### 1.4.2 List drink intake: `listDrinks`","lastModifiedDate":"2024-03-19"},{"lineNumber":162,"author":{"gitId":"claribelho"},"content":"List all the drinks user inputted today  ","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"claribelho"},"content":"**Format**: listDrinks  ","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"claribelho"},"content":"**Expected output**:  ","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"claribelho"},"content":"here\u0027s what you have drank today  ","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"claribelho"},"content":"1.sprite (serving size: 1)  ","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"claribelho"},"content":"Total water intake: 0 ml  ","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"claribelho"},"content":"### 1.4.3 List entire food intake for the day: `listEverything`","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"claribelho"},"content":"List all the drinks and meals inputted today  ","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"claribelho"},"content":"**Format**: listEverything  ","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"claribelho"},"content":"**Expected output**:  ","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"claribelho"},"content":"here\u0027s what you have consumed today  ","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"claribelho"},"content":"1.pizza (serving size: 1)  ","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"claribelho"},"content":"2.sprite (serving size: 1)  ","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"claribelho"},"content":"Total water intake: 0 ml","lastModifiedDate":"2024-03-19"},{"lineNumber":177,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":178,"author":{"gitId":"claribelho"},"content":"## 1.5 For editing existing data","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"claribelho"},"content":"### 1.5.1 Edit an existing meal after inserted: `editMeal`","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"claribelho"},"content":"For a meal that was inputted in the day, edit its serving size  ","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"claribelho"},"content":"**Format**: editMealServingSize INDEX s/NEW_SERVING_SIZE  ","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"claribelho"},"content":"**Sample input**: editMeal 2 s/2  ","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"claribelho"},"content":"**Expected output**: Pizza has been edited to 2 servings  ","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"claribelho"},"content":"### 1.5.2 Edit an existing drink after inserted: `editDrink`","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"claribelho"},"content":"For a drink that was inputted in the day, edit its serving size  ","lastModifiedDate":"2024-03-19"},{"lineNumber":187,"author":{"gitId":"claribelho"},"content":"**Format**: editDrinkServingSize INDEX s/NEW_SERVING_SIZE  ","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"claribelho"},"content":"**Sample input**: editDrink 1 s/200  ","lastModifiedDate":"2024-03-19"},{"lineNumber":189,"author":{"gitId":"claribelho"},"content":"**Expected output**: Sprite has been edited to 200 ml  ","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":191,"author":{"gitId":"claribelho"},"content":"### 1.5.3 Edit water intake after inserted: `editWater`","lastModifiedDate":"2024-03-19"},{"lineNumber":192,"author":{"gitId":"claribelho"},"content":"Edit serving size of total water intake  ","lastModifiedDate":"2024-03-19"},{"lineNumber":193,"author":{"gitId":"claribelho"},"content":"**Format**: editWaterIntake s/TOTAL_WATER_INTAKE  ","lastModifiedDate":"2024-03-19"},{"lineNumber":194,"author":{"gitId":"claribelho"},"content":"**Sample input**: editWaterIntake 200  ","lastModifiedDate":"2024-03-19"},{"lineNumber":195,"author":{"gitId":"claribelho"},"content":"**Expected output**: Total water has been edited to 200 ml  ","lastModifiedDate":"2024-03-19"},{"lineNumber":196,"author":{"gitId":"claribelho"},"content":" ","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"claribelho"},"content":"## 1.6 For deleting data","lastModifiedDate":"2024-03-19"},{"lineNumber":198,"author":{"gitId":"claribelho"},"content":"### 1.6.1 Delete certain meal entry: `deleteMeal`","lastModifiedDate":"2024-03-19"},{"lineNumber":199,"author":{"gitId":"claribelho"},"content":"For a meal that was inputted in the day, delete its input based on its index in the meal list","lastModifiedDate":"2024-03-19"},{"lineNumber":200,"author":{"gitId":"claribelho"},"content":"**Format**: deleteMeal INDEX","lastModifiedDate":"2024-03-19"},{"lineNumber":201,"author":{"gitId":"claribelho"},"content":"**Sample Input**: deleteMeal 1","lastModifiedDate":"2024-03-19"},{"lineNumber":202,"author":{"gitId":"claribelho"},"content":"**Expected output**: Removed Chicken Rice From Meals","lastModifiedDate":"2024-03-19"},{"lineNumber":203,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":204,"author":{"gitId":"claribelho"},"content":"### 1.6.2 Delete certain drink entry: `deleteDrink`","lastModifiedDate":"2024-03-19"},{"lineNumber":205,"author":{"gitId":"claribelho"},"content":"For a drink that was inputted in the day, delete its input based on its index in the drink list  ","lastModifiedDate":"2024-03-19"},{"lineNumber":206,"author":{"gitId":"claribelho"},"content":"**Format**: deleteDrink INDEX  ","lastModifiedDate":"2024-03-19"},{"lineNumber":207,"author":{"gitId":"claribelho"},"content":"**Sample input**: deleteDrink 1  ","lastModifiedDate":"2024-03-19"},{"lineNumber":208,"author":{"gitId":"claribelho"},"content":"**Expected output:**  Removed Iced Lemon Tea From Drinks  ","lastModifiedDate":"2024-03-19"},{"lineNumber":209,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":210,"author":{"gitId":"claribelho"},"content":"## 1.7 For clearing data ","lastModifiedDate":"2024-03-19"},{"lineNumber":211,"author":{"gitId":"claribelho"},"content":"### 1.7.1 Clear all entries: `clear`","lastModifiedDate":"2024-03-19"},{"lineNumber":212,"author":{"gitId":"claribelho"},"content":"Clear all entries in mealList and drinkList  ","lastModifiedDate":"2024-03-19"},{"lineNumber":213,"author":{"gitId":"claribelho"},"content":"**Format**: clear  ","lastModifiedDate":"2024-03-19"},{"lineNumber":214,"author":{"gitId":"claribelho"},"content":"**Expected output**: All entries have been deleted  ","lastModifiedDate":"2024-03-19"},{"lineNumber":215,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":216,"author":{"gitId":"claribelho"},"content":"## 1.8: Exit program","lastModifiedDate":"2024-03-19"},{"lineNumber":217,"author":{"gitId":"claribelho"},"content":"### 1.8.1 Exit the app: `exit`","lastModifiedDate":"2024-03-19"},{"lineNumber":218,"author":{"gitId":"claribelho"},"content":"**Format**: exit  ","lastModifiedDate":"2024-03-19"},{"lineNumber":219,"author":{"gitId":"claribelho"},"content":"**Expected output**: Bye. Hope to see you again soon!","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"edwardhumi":1,"-":4,"claribelho":214}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"# User Guide: FitNUS","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"## Project Introduction","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"FitNUS is a CLI application that aims to help combat diabetes and the overconsumption of calories, sugar, and","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"BryanCastorius"},"content":"carbohydrates. Our vision is to promote healthy lifestyle amongst NUS students.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":"Users are able to track the meals, drinks, and exercises they have in a day and even past records. ","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"## Setup ","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"jasonlienardi"},"content":"To use the app please follow the setup procedures below:","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"jasonlienardi"},"content":"1. Download the JAR file and \u0027db\u0027 folder. ","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"jasonlienardi"},"content":"2. Place them into an empty folder. ","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"jasonlienardi"},"content":"3. Navigate to the folder you just created.","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"jasonlienardi"},"content":"4. Run the JAR file.","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"## Table of Contents","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"edwardhumi"},"content":"* [User Guide: FitNUS](#user-guide-fitnus)","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"edwardhumi"},"content":"  * [Project Introduction](#project-introduction)","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"edwardhumi"},"content":"  * [Table of Contents](#table-of-contents)","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"edwardhumi"},"content":"  * [1) Features List](#1-features-list)","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"    * [1.1 Information for users](#11-information-for-users)","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"jasonlienardi"},"content":"    * [1.1.1 Viewing all commands: `help`](#111-viewing-all-commands-help)","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"jasonlienardi"},"content":"    * [1.1.2 Viewing all pre-defined meals: `allMeals`](#112-viewing-all-pre-defined-meals-allmeals)","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"jasonlienardi"},"content":"    * [1.1.3 Viewing all pre-defined drinks: `allDrinks`](#113-viewing-all-pre-defined-drinks-alldrinks)","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"jasonlienardi"},"content":"    * [1.1.4 Viewing all pre-defined exercises: `allExercises`](#114-viewing-all-pre-defined-exercises-allexercises)","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"    * [1.2 For user to add data](#12-for-user-to-add-data)","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"BryanCastorius"},"content":"    * [1.2.1 Add a meal eaten: `eat`](#121-add-a-meal-eaten-eat)","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"    * [1.2.2 Add a drink: `drink`](#122-add-a-drink-drink)","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"BryanCastorius"},"content":"    * [1.2.2.1 Add water: `drink d/water`](#1221-add-water-drink-dwater)","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"edwardhumi"},"content":"    * [1.2.3 Add exercise: `exercise`](#123-add-exercise-exercise)","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"jasonlienardi"},"content":"    * [1.2.4 Add new meal to available meals: `newMeal`](#124-add-new-meal-to-available-meals-newmeal)","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"jasonlienardi"},"content":"    * [1.2.4 Add new meal to available meals: `newDrink`](#124-add-new-meal-to-available-meals-newdrink)","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"  * [1.3 For data retrieval](#13-for-data-retrieval)","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"    * [1.3.1 Find the information about a certain meal: `infoMeal`](#131-find-the-information-about-a-certain-meal-infomeal)","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"    * [1.3.2 Find the information about a certain drink: `infoDrink`](#132-find-the-information-about-a-certain-drink-infodrink)","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"edwardhumi"},"content":"    * [1.3.3 Find the information about a certain exercise: `infoExercise`](#133-find-the-information-about-a-certain-exercise-infoexercise)","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"edwardhumi"},"content":"    * [1.3.4 View daily calories consumed: `calories`](#134-view-daily-calories-consumed-calories)","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"edwardhumi"},"content":"    * [1.3.5 View daily carbohydrates consumed: `carbs`](#135-view-daily-carbohydrates-consumed-carbs)","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"edwardhumi"},"content":"    * [1.3.6 View daily proteins consumed: `protein`](#136-view-daily-proteins-consumed-protein)","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"edwardhumi"},"content":"    * [1.3.7 View daily fat consumed: `fat`](#137-view-daily-fat-consumed-fat)","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"edwardhumi"},"content":"    * [1.3.8 View daily sugar consumed: `sugar`](#138-view-daily-sugar-consumed-sugar)","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"edwardhumi"},"content":"    * [1.3.9 View daily fiber consumed: `fiber`](#139-view-daily-fiber-consumed-fiber)","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"edwardhumi"},"content":"    * [1.3.10 View daily water consumption: `viewWater`](#1310-view-daily-water-consumption-viewwater)","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"edwardhumi"},"content":"    * [1.3.11 View daily calories consumed: `caloriesBurnt`](#1311-view-daily-calories-consumed-caloriesburnt)","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"BryanCastorius"},"content":"    * [1.3.12 View daily calories and water intake recommendation: `recommend`](#1312-view-daily-calories-and-water-intake-recommendation-recommend)","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"  * [1.4 For listing arrays](#14-for-listing-arrays)","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"edwardhumi"},"content":"    * [1.4.1 List today\u0027s meal intake: `listMeals`](#141-list-todays-meal-intake-listmeals)","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"edwardhumi"},"content":"    * [1.4.2 List today\u0027s drink intake: `listDrinks`](#142-list-todays-drink-intake-listdrinks)","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"edwardhumi"},"content":"    * [1.4.3 List today\u0027s exercises done: `listExercises`](#143-list-todays-exercises-done-listexercises)","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"edwardhumi"},"content":"    * [1.4.4 List everything inputted today: `listEverything`](#144-list-everything-inputted-today-listeverything)","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"BryanCastorius"},"content":"    * [1.4.5 List entire app\u0027s lifecycle meals intake: `listMealsAll`](#145-list-entire-apps-lifecycle-meals-intake-listmealsall)","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"BryanCastorius"},"content":"    * [1.4.6 List entire app\u0027s lifecycle drinks intake: `listDrinksAll`](#146-list-entire-apps-lifecycle-drinks-intake-listdrinksall)","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"BryanCastorius"},"content":"    * [1.4.7 List entire app\u0027s lifecycle exercises done: `listExercisesAll`](#147-list-entire-apps-lifecycle-exercises-done-listexercisesall)","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"BryanCastorius"},"content":"    * [1.4.8 List everything inputted for the entire app\u0027s lifecycle: `listEverythingAll`](#148-list-everything-inputted-for-the-entire-apps-lifecycle-listeverythingall)","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"edwardhumi"},"content":"    * [1.4.9 List meal intake for a certain date: `listMeals d/[DATE]`](#149-list-meal-intake-for-a-certain-date-listmeals-ddate)","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"edwardhumi"},"content":"    * [1.4.10 List drink intake for a certain date: `listDrinks d/[DATE]`](#1410-list-drink-intake-for-a-certain-date-listdrinks-ddate)","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"edwardhumi"},"content":"    * [1.4.11 List exercise done for a certain date: `listExercises d/[DATE]`](#1411-list-exercise-done-for-a-certain-date-listexercises-ddate)","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"edwardhumi"},"content":"    * [1.4.12 List entire food intake and exercise done for a certain date: `listEverything d/[DATE]`](#1412-list-entire-food-intake-and-exercise-done-for-a-certain-date-listeverything-ddate)","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"  * [1.5 For editing existing data](#15-for-editing-existing-data)","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"    * [1.5.1 Edit an existing meal after inserted: `editMeal`](#151-edit-an-existing-meal-after-inserted-editmeal)","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"    * [1.5.2 Edit an existing drink after inserted: `editDrink`](#152-edit-an-existing-drink-after-inserted-editdrink)","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"    * [1.5.3 Edit water intake after inserted: `editWater`](#153-edit-water-intake-after-inserted-editwater)","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"  * [1.6 For deleting data](#16-for-deleting-data)","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"    * [1.6.1 Delete certain meal entry: `deleteMeal`](#161-delete-certain-meal-entry-deletemeal)","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"    * [1.6.2 Delete certain drink entry: `deleteDrink`](#162-delete-certain-drink-entry-deletedrink)","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"edwardhumi"},"content":"  * [1.7 For clearing data](#17-for-clearing-data)","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"    * [1.7.1 Clear all entries: `clear`](#171-clear-all-entries-clear)","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"  * [1.8: Exit program](#18-exit-program)","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"    * [1.8.1 Exit the app: `exit`](#181-exit-the-app-exit)","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"## 1) Features List","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"### 1.1 Information for users","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"### 1.1.1 Viewing all commands: `help`","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"Shows a list of all possible command inputs.  ","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `help`   ","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"claribelho"},"content":"**Expected Output**:","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"here\u0027s all the valid commands i recognise:","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"edwardhumi"},"content":"- Add a meal eaten: eat m/MEAL s/SERVING_SIZE","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"jasonlienardi"},"content":"- Add a drink: drink d/DRINK s/VOLUME(ML)","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"jasonlienardi"},"content":"- Track an exercise: exercise e/EXERCISE d/DURATION(MINUTES) i/INTENSITY(HIGH, MEDIUM, LOW)","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"jasonlienardi"},"content":"- Add a new meal to available meals: newMeal MEAL_NAME,CALORIES,CARBS,PROTEIN,FAT,FIBER,SUGAR","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"jasonlienardi"},"content":"- Add a new drink to available drinks: newDrink DRINK_NAME,CALORIES,CARBS,SUGAR,PROTEIN,FAT","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"claribelho"},"content":"- View all meals that you can input: allMeals","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"claribelho"},"content":"- View all drinks that you can input: allDrinks","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"claribelho"},"content":"- View all exercises that you can input: allExercises","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"- Find the information about a certain meal: infoMeal MEAL","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"claribelho"},"content":"- Find the information about a certain drink: infoDrink DRINK","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"jasonlienardi"},"content":"- Find the information about a certain exercise: infoExercise EXERCISE","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"claribelho"},"content":"- View daily calories consumed: calories","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"claribelho"},"content":"- View daily carbohydrates consumed: carbs","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"claribelho"},"content":"- View daily proteins consumed: protein","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"claribelho"},"content":"- View daily fat consumed: fat","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"claribelho"},"content":"- View daily sugar consumed: sugar","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"claribelho"},"content":"- View daily fiber consumed: fiber","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"claribelho"},"content":"- View daily water consumption: viewWater","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"jasonlienardi"},"content":"- View daily calories burnt: caloriesBurnt","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"jasonlienardi"},"content":"- List today\u0027s meal intake: listMeals","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"jasonlienardi"},"content":"- List today\u0027s drink intake: listDrinks","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"jasonlienardi"},"content":"- List today\u0027s exercises done: listExercises","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"jasonlienardi"},"content":"- List today\u0027s entire food intake and exercises: listEverything","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"jasonlienardi"},"content":"- List all meal intake: listMealsAll","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"jasonlienardi"},"content":"- List all drink intake: listDrinksAll","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"jasonlienardi"},"content":"- List all exercises done: listExercisesAll","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"claribelho"},"content":"- List all food intake and exercises: listEverythingAll","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"jasonlienardi"},"content":"- List meal intake for certain date: listMeals d/dd-MM-yyyy","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"jasonlienardi"},"content":"- List drink intake for certain date: listDrinks d/dd-MM-yyyy","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"jasonlienardi"},"content":"- List exercises done for certain date: listExercises d/dd-MM-yyyy","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"jasonlienardi"},"content":"- List entire food intake and exercises for certain date: listEverything d/dd-MM-yyyy","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"claribelho"},"content":"- Edit an existing meal after inserted: editMeal INDEX s/NEW_SERVING_SIZE","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"claribelho"},"content":"- Edit an existing drink after inserted: editDrink INDEX s/NEW_SERVING_SIZE","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"jasonlienardi"},"content":"- Edit total water intake after inserted: editWater s/TOTAL_WATER_INTAKE","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"claribelho"},"content":"- Delete certain meal entry: deleteMeal INDEX","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"claribelho"},"content":"- Delete certain drink entry: deleteDrink INDEX","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"jasonlienardi"},"content":"- Delete certain exercise entry: deleteExercise INDEX","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"claribelho"},"content":"- Clear all entries: clear","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"claribelho"},"content":"- Exit the app: exit","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"claribelho"},"content":"### 1.1.2 Viewing all pre-defined meals: `allMeals`","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"claribelho"},"content":"Shows a list of all pre-defined meals. These meals will have their nutritional content defined per serving size and can","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"claribelho"},"content":"be inputted immediately.  ","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `allMeals`   ","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"BryanCastorius"},"content":"**Expected Output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"BryanCastorius"},"content":"Available meals: ","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"BryanCastorius"},"content":"- char kway teow","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"BryanCastorius"},"content":"- ban mian","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"BryanCastorius"},"content":"- tau huay","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"BryanCastorius"},"content":"- nasi goreng","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"BryanCastorius"},"content":"- soup kambeng","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"BryanCastorius"},"content":"- nasi lemak","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"BryanCastorius"},"content":"- pepper lunch","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"BryanCastorius"},"content":"- char siew rice","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"BryanCastorius"},"content":"- pork satay with satay sauce","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"BryanCastorius"},"content":"- roti prata","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"BryanCastorius"},"content":"- mee goreng","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"BryanCastorius"},"content":"- chendol","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"BryanCastorius"},"content":"- wanton mee","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"BryanCastorius"},"content":"- oyster omlette","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"BryanCastorius"},"content":"- pizza","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"BryanCastorius"},"content":"- ice kachang","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"BryanCastorius"},"content":"- chicken rice","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"BryanCastorius"},"content":"- fried rice","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"BryanCastorius"},"content":"- kaya toast","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"BryanCastorius"},"content":"- mala","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"BryanCastorius"},"content":"- laksa","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"BryanCastorius"},"content":"- hokkien prawn mee","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"BryanCastorius"},"content":"- durian","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"BryanCastorius"},"content":"You may also input a meal that isn\u0027t here.","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"claribelho"},"content":"### 1.1.3 Viewing all pre-defined drinks: `allDrinks`","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"claribelho"},"content":"Shows a list of all pre-defined drinks. These drinks will have their nutritional content defined per 100ml","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"claribelho"},"content":"and can be inputted immediately.  ","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"claribelho"},"content":"**Format**: allDrinks","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"BryanCastorius"},"content":"**Expected Output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"BryanCastorius"},"content":"Available drinks: ","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"BryanCastorius"},"content":"- milo dinosaur","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"BryanCastorius"},"content":"- chrysanthemun juice","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"BryanCastorius"},"content":"- honey lemon tea","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"BryanCastorius"},"content":"- soursop juice","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"BryanCastorius"},"content":"- lemon tea","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"BryanCastorius"},"content":"- kopi c","lastModifiedDate":"2024-04-02"},{"lineNumber":167,"author":{"gitId":"BryanCastorius"},"content":"- kalamansi juice","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"BryanCastorius"},"content":"- kopi o","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"BryanCastorius"},"content":"- milo","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"BryanCastorius"},"content":"- plum juice","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"BryanCastorius"},"content":"- water","lastModifiedDate":"2024-04-02"},{"lineNumber":172,"author":{"gitId":"BryanCastorius"},"content":"- 100 plus","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"BryanCastorius"},"content":"- milk coffee","lastModifiedDate":"2024-04-02"},{"lineNumber":174,"author":{"gitId":"BryanCastorius"},"content":"- teh c bing","lastModifiedDate":"2024-04-02"},{"lineNumber":175,"author":{"gitId":"BryanCastorius"},"content":"- kopi","lastModifiedDate":"2024-04-02"},{"lineNumber":176,"author":{"gitId":"BryanCastorius"},"content":"- guava juice","lastModifiedDate":"2024-04-02"},{"lineNumber":177,"author":{"gitId":"BryanCastorius"},"content":"- tiger beer","lastModifiedDate":"2024-04-02"},{"lineNumber":178,"author":{"gitId":"BryanCastorius"},"content":"- teh tarik","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"BryanCastorius"},"content":"- sugarcane juice","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"BryanCastorius"},"content":"- teh","lastModifiedDate":"2024-04-02"},{"lineNumber":181,"author":{"gitId":"BryanCastorius"},"content":"- sprite","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"BryanCastorius"},"content":"- iced lemon tea","lastModifiedDate":"2024-04-02"},{"lineNumber":183,"author":{"gitId":"BryanCastorius"},"content":"- bandung","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":185,"author":{"gitId":"BryanCastorius"},"content":"You may also input a drink that isn\u0027t here.","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"jasonlienardi"},"content":"### 1.1.4 Viewing all pre-defined exercises: `allExercises`","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"claribelho"},"content":"Shows a list of all pre-defined exercises. These exercises will have the number of calories burnt for a","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"claribelho"},"content":"high/medium/low intensity workout defined per minute and can be inputted immediately.  ","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"claribelho"},"content":"**Format**: allExercises","lastModifiedDate":"2024-04-02"},{"lineNumber":192,"author":{"gitId":"BryanCastorius"},"content":"**Expected Output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"BryanCastorius"},"content":"Available exercises: ","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"BryanCastorius"},"content":"- soccer","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"BryanCastorius"},"content":"- rugby","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"BryanCastorius"},"content":"- yoga","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"BryanCastorius"},"content":"- badminton","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"BryanCastorius"},"content":"- hiking","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"BryanCastorius"},"content":"- cycling","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"BryanCastorius"},"content":"- tennis","lastModifiedDate":"2024-04-02"},{"lineNumber":202,"author":{"gitId":"BryanCastorius"},"content":"- running","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"BryanCastorius"},"content":"- weightlifting","lastModifiedDate":"2024-04-02"},{"lineNumber":204,"author":{"gitId":"BryanCastorius"},"content":"- swimming","lastModifiedDate":"2024-04-02"},{"lineNumber":205,"author":{"gitId":"BryanCastorius"},"content":"- basketball","lastModifiedDate":"2024-04-02"},{"lineNumber":206,"author":{"gitId":"BryanCastorius"},"content":"- rowing","lastModifiedDate":"2024-04-02"},{"lineNumber":207,"author":{"gitId":"BryanCastorius"},"content":"- boxing","lastModifiedDate":"2024-04-02"},{"lineNumber":208,"author":{"gitId":"BryanCastorius"},"content":"- volleyball","lastModifiedDate":"2024-04-02"},{"lineNumber":209,"author":{"gitId":"BryanCastorius"},"content":"- skipping","lastModifiedDate":"2024-04-02"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":211,"author":{"gitId":"BryanCastorius"},"content":"You may also input an exercise that isn\u0027t here.","lastModifiedDate":"2024-04-02"},{"lineNumber":212,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":214,"author":{"gitId":"claribelho"},"content":"### 1.2 For user to add data","lastModifiedDate":"2024-03-19"},{"lineNumber":215,"author":{"gitId":"edwardhumi"},"content":"### 1.2.1 Add a meal eaten: `eat`","lastModifiedDate":"2024-03-31"},{"lineNumber":216,"author":{"gitId":"claribelho"},"content":"Adds a meal to the list of meals  ","lastModifiedDate":"2024-03-19"},{"lineNumber":217,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `eat m/MEAL s/SERVING_SIZE`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":218,"author":{"gitId":"BryanCastorius"},"content":"**Sample Input**: `eat m/Chicken Rice s/1`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":219,"author":{"gitId":"jasonlienardi"},"content":"**Expected Output**: ","lastModifiedDate":"2024-04-01"},{"lineNumber":220,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":221,"author":{"gitId":"edwardhumi"},"content":"Added 1 serving of chicken rice","lastModifiedDate":"2024-04-02"},{"lineNumber":222,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":224,"author":{"gitId":"claribelho"},"content":"### 1.2.2 Add a drink: `drink`","lastModifiedDate":"2024-03-19"},{"lineNumber":225,"author":{"gitId":"claribelho"},"content":"Adds a drink to the list of drinks  ","lastModifiedDate":"2024-03-19"},{"lineNumber":226,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `drink d/DRINK s/SERVING_SIZE`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":227,"author":{"gitId":"edwardhumi"},"content":"**Sample Input**: `drink d/Iced Lemon Tea s/200`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":228,"author":{"gitId":"jasonlienardi"},"content":"**Expected Output**: ","lastModifiedDate":"2024-04-01"},{"lineNumber":229,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":230,"author":{"gitId":"edwardhumi"},"content":"Added 200 ml of iced lemon tea","lastModifiedDate":"2024-04-02"},{"lineNumber":231,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":233,"author":{"gitId":"BryanCastorius"},"content":"### 1.2.2.1 Add water: `drink d/water`","lastModifiedDate":"2024-04-02"},{"lineNumber":234,"author":{"gitId":"BryanCastorius"},"content":"Adds water to the list of water  ","lastModifiedDate":"2024-04-02"},{"lineNumber":235,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `drink d/water s/SERVING_SIZE`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":236,"author":{"gitId":"BryanCastorius"},"content":"**Sample Input**: `drink d/water s/100`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":237,"author":{"gitId":"BryanCastorius"},"content":"**Expected Output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":238,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":239,"author":{"gitId":"BryanCastorius"},"content":"Added 100ml of water","lastModifiedDate":"2024-04-02"},{"lineNumber":240,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":242,"author":{"gitId":"jasonlienardi"},"content":"### 1.2.3 Add exercise: `exercise`","lastModifiedDate":"2024-04-01"},{"lineNumber":243,"author":{"gitId":"jasonlienardi"},"content":"Adds exercise to the list of exercises done  ","lastModifiedDate":"2024-04-01"},{"lineNumber":244,"author":{"gitId":"edwardhumi"},"content":"**Format**: `exercise e/EXERCISE d/DURATION(MINUTES) i/INTENSITY(HIGH, MEDIUM, LOW)`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":245,"author":{"gitId":"BryanCastorius"},"content":"**Sample Input**: `exercise e/swimming d/30 i/HIGH`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":246,"author":{"gitId":"jasonlienardi"},"content":"**Expected Output**:","lastModifiedDate":"2024-04-01"},{"lineNumber":247,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":248,"author":{"gitId":"jasonlienardi"},"content":"Tracked 30 minutes of swimming","lastModifiedDate":"2024-04-01"},{"lineNumber":249,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":251,"author":{"gitId":"jasonlienardi"},"content":"### 1.2.4 Add new meal to available meals: `newMeal`","lastModifiedDate":"2024-04-02"},{"lineNumber":252,"author":{"gitId":"jasonlienardi"},"content":"Adds a new meal to available meals  ","lastModifiedDate":"2024-04-02"},{"lineNumber":253,"author":{"gitId":"jasonlienardi"},"content":"**Format**: `newMeal MEAL_NAME,CALORIES,CARBS,PROTEIN,FAT,FIBER,SUGAR`","lastModifiedDate":"2024-04-02"},{"lineNumber":254,"author":{"gitId":"jasonlienardi"},"content":"**Sample Input**: `newMeal mie,607,75,25,23,2,10`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":255,"author":{"gitId":"jasonlienardi"},"content":"**Expected Output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":256,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":257,"author":{"gitId":"jasonlienardi"},"content":"Added mie to available meals","lastModifiedDate":"2024-04-02"},{"lineNumber":258,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":260,"author":{"gitId":"jasonlienardi"},"content":"### 1.2.4 Add new meal to available meals: `newDrink`","lastModifiedDate":"2024-04-02"},{"lineNumber":261,"author":{"gitId":"jasonlienardi"},"content":"Adds a new drink to available drinks  ","lastModifiedDate":"2024-04-02"},{"lineNumber":262,"author":{"gitId":"jasonlienardi"},"content":"**Format**: `newDrink DRINK_NAME,CALORIES,CARBS,SUGAR,PROTEIN,FAT`","lastModifiedDate":"2024-04-02"},{"lineNumber":263,"author":{"gitId":"jasonlienardi"},"content":"**Sample Input**: `newDrink coke,153,32,1,2,1`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":264,"author":{"gitId":"jasonlienardi"},"content":"**Expected Output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":265,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":266,"author":{"gitId":"jasonlienardi"},"content":"Added coke to available drinks","lastModifiedDate":"2024-04-02"},{"lineNumber":267,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":268,"author":{"gitId":"jasonlienardi"},"content":" ","lastModifiedDate":"2024-04-02"},{"lineNumber":269,"author":{"gitId":"claribelho"},"content":"## 1.3 For data retrieval","lastModifiedDate":"2024-03-19"},{"lineNumber":270,"author":{"gitId":"claribelho"},"content":"### 1.3.1 Find the information about a certain meal: `infoMeal`","lastModifiedDate":"2024-03-19"},{"lineNumber":271,"author":{"gitId":"claribelho"},"content":"For the specified meal, display its nutritional content to the user  ","lastModifiedDate":"2024-03-19"},{"lineNumber":272,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `infoMeal MEAL`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":273,"author":{"gitId":"BryanCastorius"},"content":"**Sample Input**: `infoMeal chicken rice`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":274,"author":{"gitId":"claribelho"},"content":"**Expected Output**:  ","lastModifiedDate":"2024-03-19"},{"lineNumber":275,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":276,"author":{"gitId":"jasonlienardi"},"content":"Meal: chicken rice (per serving)`","lastModifiedDate":"2024-04-01"},{"lineNumber":277,"author":{"gitId":"jasonlienardi"},"content":"Calories: 607","lastModifiedDate":"2024-04-01"},{"lineNumber":278,"author":{"gitId":"jasonlienardi"},"content":"Carbs: 75","lastModifiedDate":"2024-04-01"},{"lineNumber":279,"author":{"gitId":"jasonlienardi"},"content":"Protein: 25","lastModifiedDate":"2024-04-01"},{"lineNumber":280,"author":{"gitId":"jasonlienardi"},"content":"Fat: 23","lastModifiedDate":"2024-04-01"},{"lineNumber":281,"author":{"gitId":"jasonlienardi"},"content":"Fiber: 2","lastModifiedDate":"2024-04-01"},{"lineNumber":282,"author":{"gitId":"jasonlienardi"},"content":"Sugar: 10","lastModifiedDate":"2024-04-01"},{"lineNumber":283,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":285,"author":{"gitId":"claribelho"},"content":"### 1.3.2 Find the information about a certain drink: `infoDrink`","lastModifiedDate":"2024-03-19"},{"lineNumber":286,"author":{"gitId":"BryanCastorius"},"content":"For the inputted drink, display its nutritional content to the user  ","lastModifiedDate":"2024-04-02"},{"lineNumber":287,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `infoDrink DRINK`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":288,"author":{"gitId":"edwardhumi"},"content":"**Sample input**: `infoDrink milo`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":289,"author":{"gitId":"claribelho"},"content":"**Expected output**:    ","lastModifiedDate":"2024-03-19"},{"lineNumber":290,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":291,"author":{"gitId":"edwardhumi"},"content":"Drink: milo (100 ml)","lastModifiedDate":"2024-04-02"},{"lineNumber":292,"author":{"gitId":"edwardhumi"},"content":"Calories: 124","lastModifiedDate":"2024-04-02"},{"lineNumber":293,"author":{"gitId":"edwardhumi"},"content":"Carbs: 20","lastModifiedDate":"2024-04-02"},{"lineNumber":294,"author":{"gitId":"edwardhumi"},"content":"Sugar: 3","lastModifiedDate":"2024-04-02"},{"lineNumber":295,"author":{"gitId":"edwardhumi"},"content":"Protein: 3","lastModifiedDate":"2024-04-02"},{"lineNumber":296,"author":{"gitId":"edwardhumi"},"content":"Fat: 1","lastModifiedDate":"2024-04-02"},{"lineNumber":297,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":299,"author":{"gitId":"jasonlienardi"},"content":"### 1.3.3 Find the information about a certain exercise: `infoExercise`","lastModifiedDate":"2024-04-01"},{"lineNumber":300,"author":{"gitId":"BryanCastorius"},"content":"For the inputted exercise, display its calories burnt per minute for different intensities to the user   ","lastModifiedDate":"2024-04-02"},{"lineNumber":301,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `infoExercise EXERCISE`   ","lastModifiedDate":"2024-04-02"},{"lineNumber":302,"author":{"gitId":"BryanCastorius"},"content":"**Sample input**: `infoExercise swimming`   ","lastModifiedDate":"2024-04-02"},{"lineNumber":303,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**:    ","lastModifiedDate":"2024-04-01"},{"lineNumber":304,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":305,"author":{"gitId":"jasonlienardi"},"content":"Exercise: swimming","lastModifiedDate":"2024-04-01"},{"lineNumber":306,"author":{"gitId":"jasonlienardi"},"content":"~ Calories burnt for a 1 minute workout of ~","lastModifiedDate":"2024-04-01"},{"lineNumber":307,"author":{"gitId":"jasonlienardi"},"content":"HIGH intensity: 12","lastModifiedDate":"2024-04-01"},{"lineNumber":308,"author":{"gitId":"jasonlienardi"},"content":"MEDIUM intensity: 8","lastModifiedDate":"2024-04-01"},{"lineNumber":309,"author":{"gitId":"jasonlienardi"},"content":"LOW intensity: 5","lastModifiedDate":"2024-04-01"},{"lineNumber":310,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":312,"author":{"gitId":"jasonlienardi"},"content":"### 1.3.4 View daily calories consumed: `calories`","lastModifiedDate":"2024-04-01"},{"lineNumber":313,"author":{"gitId":"claribelho"},"content":"Display current total calorie intake for the day   ","lastModifiedDate":"2024-03-19"},{"lineNumber":314,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `calories`    ","lastModifiedDate":"2024-04-02"},{"lineNumber":315,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**: ","lastModifiedDate":"2024-04-01"},{"lineNumber":316,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":317,"author":{"gitId":"edwardhumi"},"content":"Total Calories: 100","lastModifiedDate":"2024-04-02"},{"lineNumber":318,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":320,"author":{"gitId":"jasonlienardi"},"content":"### 1.3.5 View daily carbohydrates consumed: `carbs`","lastModifiedDate":"2024-04-01"},{"lineNumber":321,"author":{"gitId":"claribelho"},"content":"Display current total carbohydrates intake for the day  ","lastModifiedDate":"2024-03-19"},{"lineNumber":322,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `carbs`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":323,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**: ","lastModifiedDate":"2024-04-01"},{"lineNumber":324,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":325,"author":{"gitId":"jasonlienardi"},"content":"Total Carbohydrates: 150 grams","lastModifiedDate":"2024-04-01"},{"lineNumber":326,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":327,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":328,"author":{"gitId":"jasonlienardi"},"content":"### 1.3.6 View daily proteins consumed: `protein`","lastModifiedDate":"2024-04-01"},{"lineNumber":329,"author":{"gitId":"claribelho"},"content":"Display current total protein intake for the day  ","lastModifiedDate":"2024-03-19"},{"lineNumber":330,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `protein`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":331,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**: ","lastModifiedDate":"2024-04-01"},{"lineNumber":332,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":333,"author":{"gitId":"edwardhumi"},"content":"Total Proteins: 100 grams","lastModifiedDate":"2024-04-02"},{"lineNumber":334,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":335,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":336,"author":{"gitId":"jasonlienardi"},"content":"### 1.3.7 View daily fat consumed: `fat`","lastModifiedDate":"2024-04-01"},{"lineNumber":337,"author":{"gitId":"claribelho"},"content":"Display current total fat intake for the day  ","lastModifiedDate":"2024-03-19"},{"lineNumber":338,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `fat`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":339,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**: ","lastModifiedDate":"2024-04-01"},{"lineNumber":340,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":341,"author":{"gitId":"edwardhumi"},"content":"Total Fat: 50 grams","lastModifiedDate":"2024-04-02"},{"lineNumber":342,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":343,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":344,"author":{"gitId":"jasonlienardi"},"content":"### 1.3.8 View daily sugar consumed: `sugar`","lastModifiedDate":"2024-04-01"},{"lineNumber":345,"author":{"gitId":"claribelho"},"content":"Display current total sugar intake for the day  ","lastModifiedDate":"2024-03-19"},{"lineNumber":346,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `sugar`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":347,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**: ","lastModifiedDate":"2024-04-01"},{"lineNumber":348,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":349,"author":{"gitId":"edwardhumi"},"content":"Total Sugar: 20 grams","lastModifiedDate":"2024-04-02"},{"lineNumber":350,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":351,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":352,"author":{"gitId":"jasonlienardi"},"content":"### 1.3.9 View daily fiber consumed: `fiber`","lastModifiedDate":"2024-04-01"},{"lineNumber":353,"author":{"gitId":"claribelho"},"content":"Display current total fiber intake (g) for the day  ","lastModifiedDate":"2024-03-19"},{"lineNumber":354,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `fiber`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":355,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**: ","lastModifiedDate":"2024-04-01"},{"lineNumber":356,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":357,"author":{"gitId":"edwardhumi"},"content":"Total Fiber: 20 grams","lastModifiedDate":"2024-04-02"},{"lineNumber":358,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":359,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":360,"author":{"gitId":"jasonlienardi"},"content":"### 1.3.10 View daily water consumption: `viewWater`","lastModifiedDate":"2024-04-01"},{"lineNumber":361,"author":{"gitId":"claribelho"},"content":"Display current total water intake (in ml) for the day  ","lastModifiedDate":"2024-03-19"},{"lineNumber":362,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `viewWater`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":363,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**: ","lastModifiedDate":"2024-04-01"},{"lineNumber":364,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":365,"author":{"gitId":"edwardhumi"},"content":"Total water intake today: 0 ml","lastModifiedDate":"2024-04-02"},{"lineNumber":366,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":367,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":368,"author":{"gitId":"jasonlienardi"},"content":"### 1.3.11 View daily calories consumed: `caloriesBurnt`","lastModifiedDate":"2024-04-01"},{"lineNumber":369,"author":{"gitId":"jasonlienardi"},"content":"Display current total calorie burnt for the day   ","lastModifiedDate":"2024-04-01"},{"lineNumber":370,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `caloriesBurnt`    ","lastModifiedDate":"2024-04-02"},{"lineNumber":371,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**: ","lastModifiedDate":"2024-04-01"},{"lineNumber":372,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":373,"author":{"gitId":"jasonlienardi"},"content":"Total calories burnt: 70","lastModifiedDate":"2024-04-01"},{"lineNumber":374,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":375,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":376,"author":{"gitId":"BryanCastorius"},"content":"### 1.3.12 View daily calories and water intake recommendation: `recommend`","lastModifiedDate":"2024-04-02"},{"lineNumber":377,"author":{"gitId":"BryanCastorius"},"content":"Display today\u0027s recommended water and calories intake  ","lastModifiedDate":"2024-04-02"},{"lineNumber":378,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `recommend`    ","lastModifiedDate":"2024-04-02"},{"lineNumber":379,"author":{"gitId":"BryanCastorius"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":380,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":381,"author":{"gitId":"BryanCastorius"},"content":"Great! You are on track with the water intake!","lastModifiedDate":"2024-04-02"},{"lineNumber":382,"author":{"gitId":"BryanCastorius"},"content":"  ~~","lastModifiedDate":"2024-04-02"},{"lineNumber":383,"author":{"gitId":"BryanCastorius"},"content":"Recommend eating more food. Please eat 500 more calories","lastModifiedDate":"2024-04-02"},{"lineNumber":384,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":385,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":386,"author":{"gitId":"claribelho"},"content":"## 1.4 For listing arrays","lastModifiedDate":"2024-03-19"},{"lineNumber":387,"author":{"gitId":"edwardhumi"},"content":"### 1.4.1 List today\u0027s meal intake: `listMeals`","lastModifiedDate":"2024-04-02"},{"lineNumber":388,"author":{"gitId":"BryanCastorius"},"content":"Display all the meals user input today   ","lastModifiedDate":"2024-04-02"},{"lineNumber":389,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `listMeals`   ","lastModifiedDate":"2024-04-02"},{"lineNumber":390,"author":{"gitId":"claribelho"},"content":"**Expected output**:","lastModifiedDate":"2024-03-19"},{"lineNumber":391,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":392,"author":{"gitId":"jasonlienardi"},"content":"here\u0027s what you have eaten today","lastModifiedDate":"2024-04-01"},{"lineNumber":393,"author":{"gitId":"jasonlienardi"},"content":"1. chicken rice (serving size: 1) | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":394,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":395,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":396,"author":{"gitId":"edwardhumi"},"content":"### 1.4.2 List today\u0027s drink intake: `listDrinks`","lastModifiedDate":"2024-04-02"},{"lineNumber":397,"author":{"gitId":"BryanCastorius"},"content":"Display all the drinks user input today  ","lastModifiedDate":"2024-04-02"},{"lineNumber":398,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `listDrinks`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":399,"author":{"gitId":"edwardhumi"},"content":"**Expected output**:  ","lastModifiedDate":"2024-03-31"},{"lineNumber":400,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":401,"author":{"gitId":"jasonlienardi"},"content":"here\u0027s what you have drank today","lastModifiedDate":"2024-04-01"},{"lineNumber":402,"author":{"gitId":"jasonlienardi"},"content":"1. sprite (volume: 100ml) | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":403,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":404,"author":{"gitId":"jasonlienardi"},"content":"Total water intake today: 0 ml","lastModifiedDate":"2024-04-01"},{"lineNumber":405,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":406,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":407,"author":{"gitId":"edwardhumi"},"content":"### 1.4.3 List today\u0027s exercises done: `listExercises`","lastModifiedDate":"2024-04-02"},{"lineNumber":408,"author":{"gitId":"BryanCastorius"},"content":"Display all the exercises user tracked today  ","lastModifiedDate":"2024-04-02"},{"lineNumber":409,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `listExercises`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":410,"author":{"gitId":"claribelho"},"content":"**Expected output**: ","lastModifiedDate":"2024-03-19"},{"lineNumber":411,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":412,"author":{"gitId":"BryanCastorius"},"content":"here\u0027s the exercises you\u0027ve done today","lastModifiedDate":"2024-04-02"},{"lineNumber":413,"author":{"gitId":"jasonlienardi"},"content":"1. boxing | duration: 10 | intensity: LOW | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":414,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":415,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":416,"author":{"gitId":"edwardhumi"},"content":"### 1.4.4 List everything inputted today: `listEverything`","lastModifiedDate":"2024-04-02"},{"lineNumber":417,"author":{"gitId":"BryanCastorius"},"content":"Display all the meals, drinks and exercises user tracked today  ","lastModifiedDate":"2024-04-02"},{"lineNumber":418,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `listEverything`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":419,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**:  ","lastModifiedDate":"2024-04-01"},{"lineNumber":420,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":421,"author":{"gitId":"jasonlienardi"},"content":"here\u0027s what you have consumed today","lastModifiedDate":"2024-04-01"},{"lineNumber":422,"author":{"gitId":"jasonlienardi"},"content":"1. chicken rice (serving size: 1) | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":423,"author":{"gitId":"jasonlienardi"},"content":"2. sprite (volume: 100ml) | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":424,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":425,"author":{"gitId":"jasonlienardi"},"content":"Total water intake today: 100 ml","lastModifiedDate":"2024-04-01"},{"lineNumber":426,"author":{"gitId":"jasonlienardi"},"content":"       ~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":427,"author":{"gitId":"jasonlienardi"},"content":"here\u0027s the exercises you\u0027ve done today","lastModifiedDate":"2024-04-01"},{"lineNumber":428,"author":{"gitId":"jasonlienardi"},"content":"1. boxing | duration: 10 | intensity: LOW | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":429,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":430,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":431,"author":{"gitId":"BryanCastorius"},"content":"### 1.4.5 List entire app\u0027s lifecycle meals intake: `listMealsAll`","lastModifiedDate":"2024-04-02"},{"lineNumber":432,"author":{"gitId":"BryanCastorius"},"content":"Display all the meals user inputted for the entire app lifecycle   ","lastModifiedDate":"2024-04-02"},{"lineNumber":433,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `listMealsAll`   ","lastModifiedDate":"2024-04-02"},{"lineNumber":434,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**:   ","lastModifiedDate":"2024-04-01"},{"lineNumber":435,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":436,"author":{"gitId":"jasonlienardi"},"content":"here\u0027s what you have eaten so far","lastModifiedDate":"2024-04-01"},{"lineNumber":437,"author":{"gitId":"jasonlienardi"},"content":"1. mala (serving size: 2) | date: 30-03-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":438,"author":{"gitId":"jasonlienardi"},"content":"2. chicken rice (serving size: 1) | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":439,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":440,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":441,"author":{"gitId":"BryanCastorius"},"content":"### 1.4.6 List entire app\u0027s lifecycle drinks intake: `listDrinksAll`","lastModifiedDate":"2024-04-02"},{"lineNumber":442,"author":{"gitId":"BryanCastorius"},"content":"Display all the drinks user inputted for the entire app lifecycle  ","lastModifiedDate":"2024-04-02"},{"lineNumber":443,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `listDrinksAll`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":444,"author":{"gitId":"edwardhumi"},"content":"**Expected output**:  ","lastModifiedDate":"2024-03-31"},{"lineNumber":445,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":446,"author":{"gitId":"jasonlienardi"},"content":"here\u0027s what you have drank so far","lastModifiedDate":"2024-04-01"},{"lineNumber":447,"author":{"gitId":"jasonlienardi"},"content":"1. milo dinosaur (volume: 200ml) | date: 30-03-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":448,"author":{"gitId":"jasonlienardi"},"content":"2. sprite (volume: 100ml) | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":449,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":450,"author":{"gitId":"jasonlienardi"},"content":"Total water intake today: 100 ml","lastModifiedDate":"2024-04-01"},{"lineNumber":451,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":452,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":453,"author":{"gitId":"BryanCastorius"},"content":"### 1.4.7 List entire app\u0027s lifecycle exercises done: `listExercisesAll`","lastModifiedDate":"2024-04-02"},{"lineNumber":454,"author":{"gitId":"BryanCastorius"},"content":"Display all the exercises inputted for the entire app lifecycle  ","lastModifiedDate":"2024-04-02"},{"lineNumber":455,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `listExercisesAll`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":456,"author":{"gitId":"claribelho"},"content":"**Expected output**:  ","lastModifiedDate":"2024-03-19"},{"lineNumber":457,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":458,"author":{"gitId":"jasonlienardi"},"content":"here\u0027s the exercises you\u0027ve done so far","lastModifiedDate":"2024-04-01"},{"lineNumber":459,"author":{"gitId":"jasonlienardi"},"content":"1. cycling | duration: 100 | intensity: LOW | date: 29-02-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":460,"author":{"gitId":"jasonlienardi"},"content":"2. swimming | duration: 100 | intensity: HIGH | date: 30-03-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":461,"author":{"gitId":"jasonlienardi"},"content":"3. boxing | duration: 10 | intensity: LOW | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":462,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":463,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":464,"author":{"gitId":"BryanCastorius"},"content":"### 1.4.8 List everything inputted for the entire app\u0027s lifecycle: `listEverythingAll`","lastModifiedDate":"2024-04-02"},{"lineNumber":465,"author":{"gitId":"BryanCastorius"},"content":"Display all the drinks, meals, and exercises inputted for the entire app lifecycle  ","lastModifiedDate":"2024-04-02"},{"lineNumber":466,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `listEverythingAll`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":467,"author":{"gitId":"edwardhumi"},"content":"**Expected output**:  ","lastModifiedDate":"2024-03-31"},{"lineNumber":468,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":469,"author":{"gitId":"jasonlienardi"},"content":"here\u0027s what you have consumed so far","lastModifiedDate":"2024-04-01"},{"lineNumber":470,"author":{"gitId":"jasonlienardi"},"content":"1. mala (serving size: 2) | date: 30-03-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":471,"author":{"gitId":"jasonlienardi"},"content":"2. chicken rice (serving size: 1) | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":472,"author":{"gitId":"jasonlienardi"},"content":"3. milo dinosaur (volume: 200ml) | date: 30-03-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":473,"author":{"gitId":"jasonlienardi"},"content":"4. sprite (volume: 100ml) | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":474,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":475,"author":{"gitId":"jasonlienardi"},"content":"Total water intake today: 100 ml","lastModifiedDate":"2024-04-01"},{"lineNumber":476,"author":{"gitId":"jasonlienardi"},"content":"       ~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":477,"author":{"gitId":"jasonlienardi"},"content":"here\u0027s the exercises you\u0027ve done so far","lastModifiedDate":"2024-04-01"},{"lineNumber":478,"author":{"gitId":"jasonlienardi"},"content":"1. cycling | duration: 100 | intensity: LOW | date: 29-02-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":479,"author":{"gitId":"jasonlienardi"},"content":"2. swimming | duration: 100 | intensity: HIGH | date: 30-03-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":480,"author":{"gitId":"jasonlienardi"},"content":"3. boxing | duration: 10 | intensity: LOW | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":481,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":482,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":483,"author":{"gitId":"edwardhumi"},"content":"### 1.4.9 List meal intake for a certain date: `listMeals d/[DATE]`","lastModifiedDate":"2024-04-02"},{"lineNumber":484,"author":{"gitId":"edwardhumi"},"content":"Display all the meals user inputted for the specified date  ","lastModifiedDate":"2024-04-02"},{"lineNumber":485,"author":{"gitId":"edwardhumi"},"content":"**Format**: `listMeals d/dd-MM-yyyy`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":486,"author":{"gitId":"edwardhumi"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":487,"author":{"gitId":"edwardhumi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":488,"author":{"gitId":"edwardhumi"},"content":"here\u0027s what you have eaten on 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":489,"author":{"gitId":"edwardhumi"},"content":"1. soup kambeng (serving size: 2) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":490,"author":{"gitId":"edwardhumi"},"content":"2. nasi lemak (serving size: 2) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":491,"author":{"gitId":"edwardhumi"},"content":"3. tau huay (serving size: 1) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":492,"author":{"gitId":"edwardhumi"},"content":"4. roti prata (serving size: 2) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":493,"author":{"gitId":"edwardhumi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":494,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":495,"author":{"gitId":"edwardhumi"},"content":"### 1.4.10 List drink intake for a certain date: `listDrinks d/[DATE]`","lastModifiedDate":"2024-04-02"},{"lineNumber":496,"author":{"gitId":"edwardhumi"},"content":"Display all the drinks user inputted for the specified date (excluding water)  ","lastModifiedDate":"2024-04-02"},{"lineNumber":497,"author":{"gitId":"edwardhumi"},"content":"**Format**: `listDrinks d/dd-MM-yyyy`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":498,"author":{"gitId":"edwardhumi"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":499,"author":{"gitId":"edwardhumi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":500,"author":{"gitId":"edwardhumi"},"content":"here\u0027s what you have drank on 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":501,"author":{"gitId":"edwardhumi"},"content":"1. honey lemon tea (volume: 200ml) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":502,"author":{"gitId":"edwardhumi"},"content":"2. kopi c (volume: 500ml) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":503,"author":{"gitId":"edwardhumi"},"content":"3. milo (volume: 200ml) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":504,"author":{"gitId":"edwardhumi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":505,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":506,"author":{"gitId":"edwardhumi"},"content":"### 1.4.11 List exercise done for a certain date: `listExercises d/[DATE]`","lastModifiedDate":"2024-04-02"},{"lineNumber":507,"author":{"gitId":"edwardhumi"},"content":"Display all the exercises user inputted for the specified date  ","lastModifiedDate":"2024-04-02"},{"lineNumber":508,"author":{"gitId":"edwardhumi"},"content":"**Format**: `listExercises d/dd-MM-yyyy`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":509,"author":{"gitId":"edwardhumi"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":510,"author":{"gitId":"edwardhumi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":511,"author":{"gitId":"edwardhumi"},"content":"here\u0027s the exercises you\u0027ve done on 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":512,"author":{"gitId":"edwardhumi"},"content":"1. boxing | duration: 10 | intensity: LOW | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":513,"author":{"gitId":"edwardhumi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":514,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":515,"author":{"gitId":"edwardhumi"},"content":"### 1.4.12 List entire food intake and exercise done for a certain date: `listEverything d/[DATE]`","lastModifiedDate":"2024-04-02"},{"lineNumber":516,"author":{"gitId":"edwardhumi"},"content":"Display all the meals, drinks, and exercises user inputted for the specified date  ","lastModifiedDate":"2024-04-02"},{"lineNumber":517,"author":{"gitId":"edwardhumi"},"content":"**Format**: `listEverything d/dd-MM-yyyy`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":518,"author":{"gitId":"edwardhumi"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":519,"author":{"gitId":"edwardhumi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":520,"author":{"gitId":"edwardhumi"},"content":"here\u0027s what you have consumed on 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":521,"author":{"gitId":"edwardhumi"},"content":"1. soup kambeng (serving size: 2) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":522,"author":{"gitId":"edwardhumi"},"content":"2. nasi lemak (serving size: 2) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":523,"author":{"gitId":"edwardhumi"},"content":"3. tau huay (serving size: 1) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":524,"author":{"gitId":"edwardhumi"},"content":"4. roti prata (serving size: 2) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":525,"author":{"gitId":"edwardhumi"},"content":"5. honey lemon tea (volume: 200ml) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":526,"author":{"gitId":"edwardhumi"},"content":"6. kopi c (volume: 500ml) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":527,"author":{"gitId":"edwardhumi"},"content":"7. milo (volume: 200ml) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":528,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":529,"author":{"gitId":"edwardhumi"},"content":"       ~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":530,"author":{"gitId":"edwardhumi"},"content":"here\u0027s the exercises you\u0027ve done on 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":531,"author":{"gitId":"edwardhumi"},"content":"1. boxing | duration: 10 | intensity: LOW | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":532,"author":{"gitId":"edwardhumi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":533,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":534,"author":{"gitId":"claribelho"},"content":"## 1.5 For editing existing data","lastModifiedDate":"2024-03-19"},{"lineNumber":535,"author":{"gitId":"claribelho"},"content":"### 1.5.1 Edit an existing meal after inserted: `editMeal`","lastModifiedDate":"2024-03-19"},{"lineNumber":536,"author":{"gitId":"claribelho"},"content":"For a meal that was inputted in the day, edit its serving size  ","lastModifiedDate":"2024-03-19"},{"lineNumber":537,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `editMeal INDEX s/NEW_SERVING_SIZE`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":538,"author":{"gitId":"BryanCastorius"},"content":"**Sample input**: `editMeal 2 s/2`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":539,"author":{"gitId":"BryanCastorius"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":540,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":541,"author":{"gitId":"BryanCastorius"},"content":"Pizza has been edited to 2 servings","lastModifiedDate":"2024-04-02"},{"lineNumber":542,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":543,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":544,"author":{"gitId":"claribelho"},"content":"### 1.5.2 Edit an existing drink after inserted: `editDrink`","lastModifiedDate":"2024-03-19"},{"lineNumber":545,"author":{"gitId":"claribelho"},"content":"For a drink that was inputted in the day, edit its serving size  ","lastModifiedDate":"2024-03-19"},{"lineNumber":546,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `editDrink INDEX s/NEW_SERVING_SIZE`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":547,"author":{"gitId":"claribelho"},"content":"**Sample input**: editDrink 1 s/200  ","lastModifiedDate":"2024-03-19"},{"lineNumber":548,"author":{"gitId":"BryanCastorius"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":549,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":550,"author":{"gitId":"BryanCastorius"},"content":"Sprite has been edited to 200 ml","lastModifiedDate":"2024-04-02"},{"lineNumber":551,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":552,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":553,"author":{"gitId":"claribelho"},"content":"### 1.5.3 Edit water intake after inserted: `editWater`","lastModifiedDate":"2024-03-19"},{"lineNumber":554,"author":{"gitId":"claribelho"},"content":"Edit serving size of total water intake  ","lastModifiedDate":"2024-03-19"},{"lineNumber":555,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `editWater s/TOTAL_WATER_INTAKE`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":556,"author":{"gitId":"BryanCastorius"},"content":"**Sample input**: `editWater 200`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":557,"author":{"gitId":"BryanCastorius"},"content":"**Expected output**: ","lastModifiedDate":"2024-04-02"},{"lineNumber":558,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":559,"author":{"gitId":"BryanCastorius"},"content":"Total water has been edited to 200 ml","lastModifiedDate":"2024-04-02"},{"lineNumber":560,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":561,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":562,"author":{"gitId":"claribelho"},"content":"## 1.6 For deleting data","lastModifiedDate":"2024-03-19"},{"lineNumber":563,"author":{"gitId":"claribelho"},"content":"### 1.6.1 Delete certain meal entry: `deleteMeal`","lastModifiedDate":"2024-03-19"},{"lineNumber":564,"author":{"gitId":"claribelho"},"content":"For a meal that was inputted in the day, delete its input based on its index in the meal list","lastModifiedDate":"2024-03-19"},{"lineNumber":565,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `deleteMeal INDEX`","lastModifiedDate":"2024-04-02"},{"lineNumber":566,"author":{"gitId":"BryanCastorius"},"content":"**Sample Input**: `deleteMeal 1`","lastModifiedDate":"2024-04-02"},{"lineNumber":567,"author":{"gitId":"BryanCastorius"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":568,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":569,"author":{"gitId":"BryanCastorius"},"content":"Removed Chicken Rice From Meals","lastModifiedDate":"2024-04-02"},{"lineNumber":570,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":571,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":572,"author":{"gitId":"claribelho"},"content":"### 1.6.2 Delete certain drink entry: `deleteDrink`","lastModifiedDate":"2024-03-19"},{"lineNumber":573,"author":{"gitId":"claribelho"},"content":"For a drink that was inputted in the day, delete its input based on its index in the drink list  ","lastModifiedDate":"2024-03-19"},{"lineNumber":574,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `deleteDrink INDEX`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":575,"author":{"gitId":"BryanCastorius"},"content":"**Sample input**: `deleteDrink 1`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":576,"author":{"gitId":"BryanCastorius"},"content":"**Expected output:**  ","lastModifiedDate":"2024-04-02"},{"lineNumber":577,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":578,"author":{"gitId":"BryanCastorius"},"content":"Removed Iced Lemon Tea From Drinks","lastModifiedDate":"2024-04-02"},{"lineNumber":579,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":580,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":581,"author":{"gitId":"claribelho"},"content":"## 1.7 For clearing data","lastModifiedDate":"2024-03-19"},{"lineNumber":582,"author":{"gitId":"claribelho"},"content":"### 1.7.1 Clear all entries: `clear`","lastModifiedDate":"2024-03-19"},{"lineNumber":583,"author":{"gitId":"claribelho"},"content":"Clear all entries in mealList and drinkList  ","lastModifiedDate":"2024-03-19"},{"lineNumber":584,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `clear`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":585,"author":{"gitId":"BryanCastorius"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":586,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":587,"author":{"gitId":"BryanCastorius"},"content":"All entries have been deleted","lastModifiedDate":"2024-04-02"},{"lineNumber":588,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":589,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":590,"author":{"gitId":"claribelho"},"content":"## 1.8: Exit program","lastModifiedDate":"2024-03-19"},{"lineNumber":591,"author":{"gitId":"claribelho"},"content":"### 1.8.1 Exit the app: `exit`","lastModifiedDate":"2024-03-19"},{"lineNumber":592,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `exit`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":593,"author":{"gitId":"BryanCastorius"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":594,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":595,"author":{"gitId":"BryanCastorius"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2024-04-02"},{"lineNumber":596,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"edwardhumi":103,"jasonlienardi":176,"BryanCastorius":186,"-":19,"claribelho":112}},{"path":"src/main/java/seedu/fitnus/CSVReader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"tinaliu27"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"tinaliu27"},"content":"import java.io.File;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"tinaliu27"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"tinaliu27"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"tinaliu27"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"tinaliu27"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"tinaliu27"},"content":"public class CSVReader {","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"jasonlienardi"},"content":"    public static final String DELIMITER \u003d \",\";","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"tinaliu27"},"content":"    private static HashMap\u003cString, String[]\u003e foodItems \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"tinaliu27"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"tinaliu27"},"content":"    public static void main(String[] args){","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"jasonlienardi"},"content":"        String mealCsvFile \u003d \"./db/Meal_db.csv\";","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"tinaliu27"},"content":"        String drinkCSVFile \u003d \"./db/Drink_db.csv\";","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"tinaliu27"},"content":"        CSVReader.read(mealCsvFile);","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"jasonlienardi"},"content":"        printInfo();","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"jasonlienardi"},"content":"        readMealInfo(mealCsvFile, \"Pepper lunch \");","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"tinaliu27"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"tinaliu27"},"content":"    public static void read(String filename) {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"tinaliu27"},"content":"        try{","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"tinaliu27"},"content":"            File file \u003d new File(filename);","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"tinaliu27"},"content":"            FileReader fr \u003d new FileReader(file);","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"tinaliu27"},"content":"            BufferedReader br \u003d new BufferedReader(fr);","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"tinaliu27"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"tinaliu27"},"content":"            String line \u003d \"\";","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"tinaliu27"},"content":"            String[] tempArr;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"tinaliu27"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"edwardhumi"},"content":"                tempArr \u003d line.split(DELIMITER);","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"tinaliu27"},"content":"                String itemFullName \u003d tempArr[0];","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"tinaliu27"},"content":"                String[] itemDetails \u003d new String[tempArr.length-1];","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"tinaliu27"},"content":"                for(int i \u003d 1; i \u003c tempArr.length; i++) {","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"tinaliu27"},"content":"                    itemDetails[i-1] \u003d tempArr[i];","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"tinaliu27"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"tinaliu27"},"content":"                foodItems.put(itemFullName, itemDetails);","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"tinaliu27"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"tinaliu27"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"tinaliu27"},"content":"            br.close();","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"tinaliu27"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"tinaliu27"},"content":"            ex.printStackTrace();","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"tinaliu27"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"tinaliu27"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"tinaliu27"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"tinaliu27"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"jasonlienardi"},"content":"    public static void readMealInfo(String filename, String foodName) {","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"tinaliu27"},"content":"        read(filename);","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"tinaliu27"},"content":"        boolean found \u003d false;","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"tinaliu27"},"content":"        String[] nutrientInfo \u003d null;","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"tinaliu27"},"content":"        if (foodItems.containsKey(foodName)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"tinaliu27"},"content":"            nutrientInfo \u003d foodItems.get(foodName);","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"tinaliu27"},"content":"            found \u003d true;","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"tinaliu27"},"content":"        } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"tinaliu27"},"content":"            System.out.println(\"Error! Food not found. Please input a valid item.\");","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"tinaliu27"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"jasonlienardi"},"content":"        if (found \u0026\u0026 nutrientInfo !\u003d null) {","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"jasonlienardi"},"content":"            for (String nutrients : nutrientInfo) {","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"jasonlienardi"},"content":"                System.out.println(nutrients);","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"tinaliu27"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"tinaliu27"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"tinaliu27"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"jasonlienardi"},"content":"    public static void printInfo() {","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"jasonlienardi"},"content":"        for (HashMap.Entry\u003cString, String[]\u003e entry : foodItems.entrySet()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"jasonlienardi"},"content":"            String key \u003d entry.getKey();","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"jasonlienardi"},"content":"            String[] value \u003d entry.getValue();","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"jasonlienardi"},"content":"            System.out.print(\"Key: \" + key + \", Value: [\");","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"jasonlienardi"},"content":"            for (int i \u003d 0; i \u003c value.length; i++) {","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"jasonlienardi"},"content":"                System.out.print(value[i]);","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"jasonlienardi"},"content":"                if (i \u003c value.length - 1) {","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"jasonlienardi"},"content":"                    System.out.print(\", \");","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"jasonlienardi"},"content":"                }","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"jasonlienardi"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println(\"]\");","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"tinaliu27"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"tinaliu27"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"tinaliu27"},"content":"","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"tinaliu27":52,"edwardhumi":1,"jasonlienardi":22,"claribelho":1}},{"path":"src/main/java/seedu/fitnus/CSVWriter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tinaliu27"},"content":"package seedu.fitnus;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"tinaliu27"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"BryanCastorius"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"BryanCastorius"},"content":"import java.io.File;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"BryanCastorius"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"tinaliu27"},"content":"import java.text.DateFormat;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"tinaliu27"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"tinaliu27"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"tinaliu27"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"tinaliu27"},"content":"public class CSVWriter {","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"tinaliu27"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"jasonlienardi"},"content":"        writeIntoFile(\"hi\", \"FOOD\");","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"tinaliu27"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"tinaliu27"},"content":"    public static void writeIntoFile(String foodItem, String fileName) {","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"tinaliu27"},"content":"        DateFormat df \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"tinaliu27"},"content":"        File file \u003d null;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"tinaliu27"},"content":"        if (fileName.toLowerCase().contains(\"food\")) {","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"jasonlienardi"},"content":"            file \u003d new File(\"./db/Output_Food_\" + df.format(new Date())+\".csv\");","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"tinaliu27"},"content":"        } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"jasonlienardi"},"content":"            file \u003d new File(\"./db/Output_Drink_\" + df.format(new Date())+\".csv\");","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"tinaliu27"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"tinaliu27"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"tinaliu27"},"content":"            try{","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"tinaliu27"},"content":"                file.createNewFile();","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"tinaliu27"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"tinaliu27"},"content":"                System.out.println(\"error with creating a file\");","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"tinaliu27"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"tinaliu27"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"tinaliu27"},"content":"        try (FileWriter fw \u003d new FileWriter(file)){","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"tinaliu27"},"content":"            BufferedWriter writer \u003d new BufferedWriter(fw);","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"jasonlienardi"},"content":"            writer.write(foodItem);","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"tinaliu27"},"content":"            writer.newLine();","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"tinaliu27"},"content":"            writer.close();","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"tinaliu27"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println(\"error trying to add something into the file\");","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"tinaliu27"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"tinaliu27"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"tinaliu27"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"tinaliu27":30,"jasonlienardi":5,"BryanCastorius":4}},{"path":"src/main/java/seedu/fitnus/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"edwardhumi"},"content":"import java.text.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":" * Class that handles any references to the current date and time.","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"public class Date {","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"BryanCastorius"},"content":"    private String currentDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"     * Constructor that gets the current system date and formats it in the stated format.","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"     * This date is then saved as a string.","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"    public Date() {","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"        long millis \u003d System.currentTimeMillis();","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"        java.sql.Date date \u003d new java.sql.Date(millis);","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"        String formattedDate \u003d dateFormat.format(date);","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"        this.currentDate \u003d formattedDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"     * Returns the current system date.","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"     * @return current system date","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"BryanCastorius"},"content":"    public String getDate() {","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"        return currentDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"     * Returns true if the date inputted by the user is a valid date.","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"     * The method verifies the day, month and year are in the correct range.","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"     * @param date string containing the date to check if valid","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"     * @return true if the date inputted by the user is a valid date.","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"edwardhumi"},"content":"    public static boolean isValidDate(String date) {","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"edwardhumi"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"edwardhumi"},"content":"        dateFormat.setLenient(false);","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"edwardhumi"},"content":"            java.util.Date javaDate \u003d dateFormat.parse(date);","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"edwardhumi"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"edwardhumi"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"edwardhumi"},"content":"        String[] arrayOfDates \u003d date.split(\"-\");","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"edwardhumi"},"content":"        int day \u003d Integer.parseInt(arrayOfDates[0]);","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"edwardhumi"},"content":"        int month \u003d Integer.parseInt(arrayOfDates[1]);","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"edwardhumi"},"content":"        int year \u003d Integer.parseInt(arrayOfDates[2]);","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"edwardhumi"},"content":"        if (day \u003c 1 || month \u003c 1 || month \u003e 12 || year \u003c 0) {","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"edwardhumi"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"edwardhumi"},"content":"        int[] dayInMonth \u003d {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"edwardhumi"},"content":"        if (day \u003e dayInMonth[month - 1]) {","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"edwardhumi"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"edwardhumi"},"content":"        return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"edwardhumi":23,"BryanCastorius":2,"claribelho":38}},{"path":"src/main/java/seedu/fitnus/Drink.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.IncompleteInfoException;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.UnregisteredDrinkException;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.parser.Parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"BryanCastorius"},"content":"public class Drink  {","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"edwardhumi"},"content":"    public static HashMap\u003cString, int[]\u003e nutrientDetails \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"BryanCastorius"},"content":"    private String name;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"BryanCastorius"},"content":"    private int drinkVolume;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"    private String dateAdded;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"BryanCastorius"},"content":"    private int calories;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"BryanCastorius"},"content":"    private int carbs;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"BryanCastorius"},"content":"    private int sugar;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"BryanCastorius"},"content":"    private int protein;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"BryanCastorius"},"content":"    private int fat;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"     * Constructor for a Drink, requires the name and volume of the drink,","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"     * as well as date that it is added into the list.","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"     * @param name name of drink to be added into the list","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"     * @param volume volume of the drink to be added into the list","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"     * @param currentDate date of which the drink is added into list","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"    public Drink(String name, int volume, String currentDate) {","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"BryanCastorius"},"content":"        assert name !\u003d null: \"Name must not be null\";","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"BryanCastorius"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"BryanCastorius"},"content":"        assert volume \u003e 0: \"Drink volume must be greater than 0.\";","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"BryanCastorius"},"content":"        this.drinkVolume \u003d volume;","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"BryanCastorius"},"content":"        setNutrientValues(name);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"        this.dateAdded \u003d currentDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"BryanCastorius"},"content":"    private void setNutrientValues(String name) {","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"BryanCastorius"},"content":"        int[] nutrients \u003d nutrientDetails.get(name);","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"BryanCastorius"},"content":"        calories \u003d nutrients[0] * drinkVolume / 100;","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"BryanCastorius"},"content":"        carbs \u003d nutrients[1] * drinkVolume / 100;","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"BryanCastorius"},"content":"        sugar \u003d nutrients[2] * drinkVolume / 100;","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"BryanCastorius"},"content":"        protein \u003d nutrients[3] * drinkVolume / 100;","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"BryanCastorius"},"content":"        fat \u003d nutrients[4] * drinkVolume / 100;","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"     * Handles when user would like to find out the information about a certain drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"     * Prints out all nutritional content of the drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by user, containing drink to be viewed","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"     * @throws UnregisteredDrinkException if drink specified is not a pre-defined drink","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"     * @throws IncompleteInfoException if the user did not comply with the required format","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"    public static void handleInfoDrink(String command) throws UnregisteredDrinkException, IncompleteInfoException {","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"jasonlienardi"},"content":"        String name \u003d Parser.parseInfoDrink(command);","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"jasonlienardi"},"content":"        int[] nutrients \u003d nutrientDetails.get(name);","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"BryanCastorius"},"content":"        System.out.println(\"Drink: \" + name + \" (100 ml)\");","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Calories: \" + nutrients[0]);","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Carbs: \" + nutrients[1]);","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"BryanCastorius"},"content":"        // Sugar is part of Carbohydrates","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Sugar: \" + nutrients[2]);","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Protein: \" + nutrients[3]);","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Fat: \" + nutrients[4]);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"     * Prints out all pre-defined drinks in one line,","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"     * only called when the user first enters the program.","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"BryanCastorius"},"content":"    public static void printAvailableDrinks() {","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"BryanCastorius"},"content":"        System.out.print(\"Available drinks: \");","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"BryanCastorius"},"content":"        for (String drink : nutrientDetails.keySet()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"BryanCastorius"},"content":"            System.out.print(drink);","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"BryanCastorius"},"content":"            System.out.print(\", \");","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"BryanCastorius"},"content":"        System.out.print(\"etc.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"BryanCastorius"},"content":"        System.out.println();","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"claribelho"},"content":"     * Prints out all pre-defined drinks in a list.","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"claribelho"},"content":"    public static void listAvailableDrinks() {","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Available drinks: \");","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"claribelho"},"content":"        for (String drink : nutrientDetails.keySet()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"- \" + drink);","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"        System.out.println();","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"You may also input a drink that isn\u0027t here.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"claribelho"},"content":"     * Returns a string stating the name of the drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"claribelho"},"content":"     * @return string stating the name of the drink","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"BryanCastorius"},"content":"    public String getName() {","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"BryanCastorius"},"content":"        return name;","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"claribelho"},"content":"     * Returns an integer value of the volume of the drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"claribelho"},"content":"     * @return an integer value of the volume of the drink","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"BryanCastorius"},"content":"    public int getDrinkVolumeSize() {","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"BryanCastorius"},"content":"        return drinkVolume;","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"claribelho"},"content":"     * Returns an integer value of the amount of calories in the drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"claribelho"},"content":"     * @return an integer value of the amount of calories in the drink","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"BryanCastorius"},"content":"    public int getCalories() {","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"BryanCastorius"},"content":"        return calories;","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"claribelho"},"content":"     * Returns an integer value of the amount of carbohydrates in the drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"claribelho"},"content":"     * @return an integer value of the amount of carbohydrates in the drink","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"BryanCastorius"},"content":"    public int getCarbs() {","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"BryanCastorius"},"content":"        return carbs;","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"claribelho"},"content":"     * Returns an integer value of the amount of sugar in the drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"claribelho"},"content":"     * @return an integer value of the amount of sugar in the drink","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"BryanCastorius"},"content":"    public int getSugar() {","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"BryanCastorius"},"content":"        return sugar;","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"claribelho"},"content":"     * Returns an integer value of the amount of protein in the drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"claribelho"},"content":"     * @return an integer value of the amount of protein in the drink","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"BryanCastorius"},"content":"    public int getProtein() {","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"BryanCastorius"},"content":"        return protein;","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"claribelho"},"content":"     * Returns an integer value of the amount of fat in the drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"claribelho"},"content":"     * @return an integer value of the amount of fat in the drink","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"BryanCastorius"},"content":"    public int getFat() {","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"BryanCastorius"},"content":"        return fat;","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"BryanCastorius"},"content":"    public static HashMap\u003cString, int[]\u003e getNutrientDetails() {","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"BryanCastorius"},"content":"        return nutrientDetails;","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"claribelho"},"content":"     * Returns the date of which the drink was added into drinkList.","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"claribelho"},"content":"     * @return date of which the drink was added into drinkList","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"claribelho"},"content":"    public String getDate() {","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"claribelho"},"content":"        return dateAdded;","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"edwardhumi":3,"jasonlienardi":7,"BryanCastorius":74,"claribelho":83}},{"path":"src/main/java/seedu/fitnus/Exercise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonlienardi"},"content":"package seedu.fitnus;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.IncompleteInfoException;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.UnregisteredExerciseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.parser.Parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"jasonlienardi"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"jasonlienardi"},"content":"public class Exercise {","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"edwardhumi"},"content":"    public static HashMap\u003cString, int[]\u003e exerciseDetails \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"jasonlienardi"},"content":"    private String name;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"jasonlienardi"},"content":"    private int duration; // Duration in minutes","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"jasonlienardi"},"content":"    private ExerciseIntensity intensity;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"jasonlienardi"},"content":"    private int caloriesBurnt;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"BryanCastorius"},"content":"    private String dateAdded;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"     * Constructor for an Exercise, requires the name, duration and intensity of the exercise,","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"     * as well as date that it is added into the list.","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"     * @param name name of exercise to be added into the list","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"     * @param duration duration of the exercise to be added into the list","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"     * @param intensity intensity of the exercise to be added into the list, can be HIGH/MEDIUM/LOW","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"     * @param currentDate date of which the exercise is added into list","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"BryanCastorius"},"content":"    public Exercise(String name, int duration, ExerciseIntensity intensity, String currentDate)","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"BryanCastorius"},"content":"            throws UnregisteredExerciseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"jasonlienardi"},"content":"        assert name !\u003d null : \"Name must not be null\";","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"jasonlienardi"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"jasonlienardi"},"content":"        assert duration \u003e 0 : \"Duration must be greater than 0\";","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"jasonlienardi"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"jasonlienardi"},"content":"        assert isValidIntensity(intensity) : \"Intensity must be HIGH, MEDIUM, or LOW\";","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"jasonlienardi"},"content":"        this.intensity \u003d intensity;","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"jasonlienardi"},"content":"        setCaloriesBurnt(); // Assign exercise details based on the name and intensity","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"BryanCastorius"},"content":"        this.dateAdded \u003d currentDate;","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"jasonlienardi"},"content":"    static {","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"jasonlienardi"},"content":"        exerciseDetails.put(\"running\", new int[]{8, 5, 3});","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"jasonlienardi"},"content":"        exerciseDetails.put(\"cycling\", new int[]{6, 4, 2});","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"jasonlienardi"},"content":"        exerciseDetails.put(\"swimming\", new int[]{10, 7, 4});","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"     * Calculate the number of calories burnt from the exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"     * @throws UnregisteredExerciseException if specified exercise is not pre-defined.","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"jasonlienardi"},"content":"    private void setCaloriesBurnt() throws UnregisteredExerciseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"jasonlienardi"},"content":"        int[] details \u003d exerciseDetails.get(name);","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"jasonlienardi"},"content":"        if (details \u003d\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"jasonlienardi"},"content":"            throw new UnregisteredExerciseException();","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"jasonlienardi"},"content":"        this.caloriesBurnt \u003d duration * details[intensity.ordinal()];","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"     * Returns true if the exercise intensity specified is valid,","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"     * following the ExerciseIntensity enum.","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"     * @param intensity intensity of exercise, only can be a value of high/medium/low","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"     * @return true if the exercise intensity specified is valid","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"jasonlienardi"},"content":"    private boolean isValidIntensity(ExerciseIntensity intensity) {","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"jasonlienardi"},"content":"        return intensity \u003d\u003d ExerciseIntensity.HIGH || intensity \u003d\u003d ExerciseIntensity.MEDIUM ||","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"jasonlienardi"},"content":"                intensity \u003d\u003d ExerciseIntensity.LOW;","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"     * Returns a string stating the name of the exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"     * @return string stating the name of the exercise","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"jasonlienardi"},"content":"    public String getName() {","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"jasonlienardi"},"content":"        return name;","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"     * Returns an integer value of the duration of the exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"claribelho"},"content":"     * @return an integer value of the duration of the exercise","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"jasonlienardi"},"content":"    public int getDuration() {","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"jasonlienardi"},"content":"        return duration;","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"     * Returns the intensity of the exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"claribelho"},"content":"     * @return the intensity of the exercise","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"jasonlienardi"},"content":"    public ExerciseIntensity getIntensity() {","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"jasonlienardi"},"content":"        return intensity;","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"claribelho"},"content":"     * Returns the date of which the exercise was added into exerciseList.","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"claribelho"},"content":"     * @return date of which the exercise was added into exerciseList","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"BryanCastorius"},"content":"    public String getDate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"BryanCastorius"},"content":"        return dateAdded;","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"claribelho"},"content":"     * Returns an integer value of the amount of calories burnt from the exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"claribelho"},"content":"     * @return an integer value of the amount of calories burnt from the exercise","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"jasonlienardi"},"content":"    public int getCaloriesBurnt() {","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"jasonlienardi"},"content":"        return caloriesBurnt;","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"claribelho"},"content":"     * Handles when user would like to find out the information about a certain exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"claribelho"},"content":"     * Prints out the calories burnt for 1 minute of the workout.","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by user, containing exercise to be viewed","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"claribelho"},"content":"     * @throws UnregisteredExerciseException if exercise specified is not a pre-defined exercise","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"claribelho"},"content":"     * @throws IncompleteInfoException if the user did not comply with the required format","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"claribelho"},"content":"    public static void handleInfoExercise(String command) throws UnregisteredExerciseException,","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"claribelho"},"content":"            IncompleteInfoException {","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"jasonlienardi"},"content":"        String name \u003d Parser.parseInfoExercise(command);","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"jasonlienardi"},"content":"        int[] details \u003d exerciseDetails.get(name);","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"jasonlienardi"},"content":"        if (details \u003d\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"jasonlienardi"},"content":"            throw new UnregisteredExerciseException();","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Exercise: \" + name);","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"~ Calories burnt for a 1 minute workout of ~\");","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"HIGH intensity: \" + details[0]);","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"MEDIUM intensity: \" + details[1]);","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"LOW intensity: \" + details[2]);","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"claribelho"},"content":"     * Prints out all pre-defined exercises in one line,","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"claribelho"},"content":"     * only called when the user first enters the program.","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"jasonlienardi"},"content":"    public static void printAvailableExercises() {","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"jasonlienardi"},"content":"        System.out.print(\"Available exercises: \");","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"jasonlienardi"},"content":"        for (String exercise : exerciseDetails.keySet()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"jasonlienardi"},"content":"            System.out.print(exercise);","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"jasonlienardi"},"content":"            System.out.print(\", \");","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"jasonlienardi"},"content":"        System.out.print(\"etc.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println();","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"claribelho"},"content":"     * Prints out all pre-defined exercises in a list.","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"claribelho"},"content":"    public static void listAvailableExercises() {","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Available exercises: \");","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"claribelho"},"content":"        for (String exercise : exerciseDetails.keySet()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"- \" + exercise);","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"claribelho"},"content":"        System.out.println();","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"You may also input an exercise that isn\u0027t here.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"jasonlienardi"},"content":"    public static HashMap\u003cString, int[]\u003e getExerciseDetails() {","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"jasonlienardi"},"content":"        return exerciseDetails;","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"jasonlienardi"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"edwardhumi":2,"jasonlienardi":81,"BryanCastorius":8,"claribelho":74}},{"path":"src/main/java/seedu/fitnus/ExerciseIntensity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonlienardi"},"content":"package seedu.fitnus;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"jasonlienardi"},"content":"public enum ExerciseIntensity {","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"jasonlienardi"},"content":"    HIGH,","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"jasonlienardi"},"content":"    MEDIUM,","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"jasonlienardi"},"content":"    LOW","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"jasonlienardi"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"jasonlienardi":6}},{"path":"src/main/java/seedu/fitnus/FitNus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"tinaliu27"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"tinaliu27"},"content":"public class FitNus {","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"jasonlienardi"},"content":"    private static Ui ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"jasonlienardi"},"content":"    public FitNus() {","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"     * Begins the program until termination.","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"jasonlienardi"},"content":"    public void run() {","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"jasonlienardi"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"jasonlienardi"},"content":"        while (!ui.isExit) {","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"jasonlienardi"},"content":"            ui.readCommand();","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"jasonlienardi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"jasonlienardi"},"content":"        new FitNus().run();","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"tinaliu27"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"tinaliu27":3,"jasonlienardi":17,"claribelho":4}},{"path":"src/main/java/seedu/fitnus/Meal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"tinaliu27"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.IncompleteInfoException;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.UnregisteredMealException;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.parser.Parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"jasonlienardi"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"tinaliu27"},"content":"public class Meal {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"edwardhumi"},"content":"    public static HashMap\u003cString, int[]\u003e nutrientDetails \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"jasonlienardi"},"content":"    private String name;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"jasonlienardi"},"content":"    private int servingSize;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"    private String dateAdded;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"jasonlienardi"},"content":"    private int calories;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"jasonlienardi"},"content":"    private int carbs;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"jasonlienardi"},"content":"    private int protein;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"jasonlienardi"},"content":"    private int fat;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"jasonlienardi"},"content":"    private int fiber;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"jasonlienardi"},"content":"    private int sugar;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"     * Constructor for a Meal, requires the name and serving size of the meal,","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"     * as well as date that it is added into the list.","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"     * @param name name of meal to be added into the list","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"     * @param servingSize serving size of the meal to be added into the list","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"     * @param currentDate date of which the meal is added into list","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"    public Meal(String name, int servingSize, String currentDate) {","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"jasonlienardi"},"content":"        assert name !\u003d null : \"Name must not be null\";","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"jasonlienardi"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"jasonlienardi"},"content":"        assert servingSize \u003e 0 : \"Serving size must be greater than 0\";","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"jasonlienardi"},"content":"        this.servingSize \u003d servingSize;","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"jasonlienardi"},"content":"        setNutrientValues(name); // Assign nutrient values based on the name","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"        this.dateAdded \u003d currentDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"jasonlienardi"},"content":"    private void setNutrientValues(String name) {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"jasonlienardi"},"content":"        int[] nutrients \u003d nutrientDetails.get(name);","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"BryanCastorius"},"content":"        calories \u003d nutrients[0] * servingSize;","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"BryanCastorius"},"content":"        carbs \u003d nutrients[1] * servingSize;","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"BryanCastorius"},"content":"        protein \u003d nutrients[2] * servingSize;","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"BryanCastorius"},"content":"        fat \u003d nutrients[3] * servingSize;","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"BryanCastorius"},"content":"        fiber \u003d nutrients[4] * servingSize;","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"BryanCastorius"},"content":"        sugar \u003d nutrients[5] * servingSize;","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"     * Returns a string stating the name of the meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"     * @return string stating the name of the meal","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"jasonlienardi"},"content":"    public String getName() {","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"jasonlienardi"},"content":"        return name;","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"     * Returns an integer value of the amount of calories in the meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"     * @return an integer value of the amount of calories in the meal","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"jasonlienardi"},"content":"    public int getCalories() {","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"BryanCastorius"},"content":"        return calories;","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"     * Returns an integer value of the amount of carbohydrates in the meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"     * @return an integer value of the amount of carbohydrates in the meal","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"jasonlienardi"},"content":"    public int getCarbs() {","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"BryanCastorius"},"content":"        return carbs;","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"     * Returns an integer value of the amount of protein in the meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"     * @return an integer value of the amount of protein in the meal","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"jasonlienardi"},"content":"    public int getProtein() {","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"BryanCastorius"},"content":"        return protein;","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"claribelho"},"content":"     * Returns an integer value of the amount of fat in the meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"claribelho"},"content":"     * @return an integer value of the amount of fat in the meal","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"jasonlienardi"},"content":"    public int getFat() {","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"BryanCastorius"},"content":"        return fat;","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"claribelho"},"content":"     * Returns an integer value of the amount of fiber in the meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"claribelho"},"content":"     * @return an integer value of the amount of fiber in the meal","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"jasonlienardi"},"content":"    public int getFiber() {","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"BryanCastorius"},"content":"        return fiber;","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"claribelho"},"content":"     * Returns an integer value of the amount of sugar in the meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"claribelho"},"content":"     * @return an integer value of the amount of sugar in the meal","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"jasonlienardi"},"content":"    public int getSugar() {","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"BryanCastorius"},"content":"        return sugar;","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"claribelho"},"content":"     * Returns an integer value of the serving size of the meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"claribelho"},"content":"     * @return an integer value of the serving size of the meal","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"claribelho"},"content":"    public int getServingSize() {","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"claribelho"},"content":"        return servingSize;","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"claribelho"},"content":"     * Handles when user would like to find out the information about a certain meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"claribelho"},"content":"     * Prints out all nutritional content of the meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by user, containing meal to be viewed","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"claribelho"},"content":"     * @throws UnregisteredMealException if meal specified is not a pre-defined meal","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"claribelho"},"content":"     * @throws IncompleteInfoException if the user did not comply with the required format","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"claribelho"},"content":"    public static void handleInfoMeal(String command) throws UnregisteredMealException, IncompleteInfoException {","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"jasonlienardi"},"content":"        String name \u003d Parser.parseInfoMeal(command);","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"jasonlienardi"},"content":"        int[] nutrients \u003d nutrientDetails.get(name);","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"BryanCastorius"},"content":"        System.out.println(\"Meal: \" + name + \" (per serving)\");","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Calories: \" + nutrients[0]);","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Carbs: \" + nutrients[1]);","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Protein: \" + nutrients[2]);","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Fat: \" + nutrients[3]);","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Fiber: \" + nutrients[4]);","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Sugar: \" + nutrients[5]);","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"tinaliu27"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"claribelho"},"content":"     * Prints out all pre-defined meals in one line,","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"claribelho"},"content":"     * only called when the user first enters the program.","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"BryanCastorius"},"content":"    public static void printAvailableMeals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"BryanCastorius"},"content":"        System.out.print(\"Available meals: \");","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"BryanCastorius"},"content":"        for (String meal : nutrientDetails.keySet()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"BryanCastorius"},"content":"            System.out.print(meal);","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"BryanCastorius"},"content":"            System.out.print(\", \");","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"BryanCastorius"},"content":"        System.out.print(\"etc.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"BryanCastorius"},"content":"        System.out.println();","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"claribelho"},"content":"     * Prints out all pre-defined meals in a list.","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"claribelho"},"content":"    public static void listAvailableMeals() {","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Available meals: \");","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"claribelho"},"content":"        for (String meal : nutrientDetails.keySet()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"- \" + meal);","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"claribelho"},"content":"        System.out.println();","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"You may also input a meal that isn\u0027t here.\");","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"BryanCastorius"},"content":"    public static HashMap\u003cString, int[]\u003e getNutrientDetails() {","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"BryanCastorius"},"content":"        return nutrientDetails;","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"claribelho"},"content":"     * Returns the date of which the meal was added into mealList.","lastModifiedDate":"2024-04-02"},{"lineNumber":172,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"claribelho"},"content":"     * @return date of which the meal was added into mealList","lastModifiedDate":"2024-04-02"},{"lineNumber":174,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":175,"author":{"gitId":"claribelho"},"content":"    public String getDate() {","lastModifiedDate":"2024-03-28"},{"lineNumber":176,"author":{"gitId":"claribelho"},"content":"        return dateAdded;","lastModifiedDate":"2024-03-28"},{"lineNumber":177,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"tinaliu27"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"tinaliu27":4,"edwardhumi":2,"jasonlienardi":53,"BryanCastorius":28,"claribelho":91}},{"path":"src/main/java/seedu/fitnus/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.parser.Parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.storage.Storage;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.user.User;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"jasonlienardi"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"jasonlienardi"},"content":"public class Ui {","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"jasonlienardi"},"content":"    public static final String LINE \u003d \"_________________________________________________________________\";","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"jasonlienardi"},"content":"    static Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"jasonlienardi"},"content":"    public boolean isExit \u003d false;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"edwardhumi"},"content":"    private Storage mealStorage \u003d new Storage(\"./data\", \"./data/MealList.txt\");","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"edwardhumi"},"content":"    private Storage drinkStorage \u003d new Storage(\"./data\", \"./data/DrinkList.txt\");","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"BryanCastorius"},"content":"    private Storage exerciseStorage \u003d new Storage (\"./data\", \"./data/ExerciseList.txt\");","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"edwardhumi"},"content":"    private Storage mealNutrientStorage \u003d new Storage(\"./db\", \"./db/Meal_db.csv\");","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"edwardhumi"},"content":"    private Storage drinkNutrientStorage \u003d new Storage(\"./db\", \"./db/Drink_db.csv\");","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"edwardhumi"},"content":"    private Storage exerciseCaloriesStorage \u003d new Storage(\"./db\", \"./db/Exercise_db.csv\");","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"edwardhumi"},"content":"    private User user \u003d new User(mealStorage, drinkStorage, exerciseStorage,","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"edwardhumi"},"content":"            mealNutrientStorage, drinkNutrientStorage, exerciseCaloriesStorage);","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"edwardhumi"},"content":"    private Parser parser \u003d new Parser(user);","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"     * Prints the welcome message upon the start of the application,","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"     * including all pre-defined meals, drinks and exercises.","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"     * */","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"jasonlienardi"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Hello! Welcome to FitNUS\");","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"What would you like to track today?\");","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"BryanCastorius"},"content":"        Meal.printAvailableMeals();","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"BryanCastorius"},"content":"        Drink.printAvailableDrinks();","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"jasonlienardi"},"content":"        Exercise.printAvailableExercises();","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"     * Prints the goodbye message when the user exits the program.","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"     * The lists for meal, drink and exercise would be stores before exiting.","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"jasonlienardi"},"content":"    public void handleExit() {","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"jasonlienardi"},"content":"        input.close();","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"jasonlienardi"},"content":"        isExit \u003d true;","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"edwardhumi"},"content":"        user.saveMeal(mealStorage);","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"edwardhumi"},"content":"        user.saveDrink(drinkStorage);","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"BryanCastorius"},"content":"        user.saveExercise(exerciseStorage);","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"jasonlienardi"},"content":"        user.saveMealNutrients(mealNutrientStorage);","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"jasonlienardi"},"content":"        user.saveDrinkNutrients(drinkNutrientStorage);","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"     * Prints the divider line between messages.","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"jasonlienardi"},"content":"    public static void showLine() {","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"     * Reads the user\u0027s input into command line.","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"jasonlienardi"},"content":"    public void readCommand() {","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"jasonlienardi"},"content":"        String command \u003d input.nextLine();","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"jasonlienardi"},"content":"        showLine();","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"jasonlienardi"},"content":"        if (command.equals(\"exit\")) {","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"jasonlienardi"},"content":"            handleExit();","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"jasonlienardi"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"jasonlienardi"},"content":"            parser.handleCommand(command);","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"jasonlienardi"},"content":"        showLine();","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"jasonlienardi"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"edwardhumi":14,"jasonlienardi":40,"BryanCastorius":4,"claribelho":15}},{"path":"src/main/java/seedu/fitnus/Water.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"tinaliu27"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"tinaliu27"},"content":"public class Water {","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"BryanCastorius"},"content":"    private int waterIntake;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"BryanCastorius"},"content":"    private String dateAdded;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"     * Constructs a Water object with the specified amount of water intake and date added.","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"BryanCastorius"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"BryanCastorius"},"content":"     * @param amount The amount of water intake.","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"BryanCastorius"},"content":"     * @param dateAdded The date when the water intake was added.","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"BryanCastorius"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"    public Water(int amount, String dateAdded) {","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"BryanCastorius"},"content":"        assert amount \u003e 0 : \"Water volume must be greater than 0.\";","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"BryanCastorius"},"content":"        this.waterIntake \u003d amount;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"BryanCastorius"},"content":"        this.dateAdded \u003d dateAdded;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"     * Returns the user\u0027s water intake of the day.","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"     * @return total water intake of the day","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"BryanCastorius"},"content":"    public int getWater() {","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"BryanCastorius"},"content":"        return waterIntake;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"     * Add a specified amount of water to the user\u0027s waterIntake of the day.","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"     * @param amount volume of water to add to intake.","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"BryanCastorius"},"content":"    public void addWaterIntake(int amount) {","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"BryanCastorius"},"content":"        waterIntake +\u003d amount;","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"     * Updates the total water intake of the day.","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"     * @param amount volume specified by user to be the new total water intake of the day","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"BryanCastorius"},"content":"    public void editWaterIntake(int amount) {","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"BryanCastorius"},"content":"        waterIntake \u003d amount;","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"     * Returns the date of which the water was added into drinkList.","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"     * @return date of which the water was added into drinkList","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"BryanCastorius"},"content":"    public String getDate() {","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"        return dateAdded;","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"tinaliu27"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"tinaliu27":3,"BryanCastorius":26,"claribelho":25}},{"path":"src/main/java/seedu/fitnus/exception/IncompleteDeleteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the user did not comply with the required format for delete.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"public class IncompleteDeleteException extends Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"claribelho":8}},{"path":"src/main/java/seedu/fitnus/exception/IncompleteDrinkException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the user did not comply with the required format to add a drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"public class IncompleteDrinkException extends Exception{","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"BryanCastorius":3,"claribelho":5}},{"path":"src/main/java/seedu/fitnus/exception/IncompleteEditException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the user did not comply with the required format to edit a saved object.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"public class IncompleteEditException extends Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"claribelho":8}},{"path":"src/main/java/seedu/fitnus/exception/IncompleteExerciseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonlienardi"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the user did not comply with the required format to add an exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"jasonlienardi"},"content":"public class IncompleteExerciseException extends Exception{","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"jasonlienardi":4,"claribelho":4}},{"path":"src/main/java/seedu/fitnus/exception/IncompleteInfoException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the user did not comply with the required format to view the info of a  object.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"public class IncompleteInfoException extends Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"claribelho":9}},{"path":"src/main/java/seedu/fitnus/exception/IncompleteMealException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the user did not comply with the required format to add a meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"public class IncompleteMealException extends Exception{","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"BryanCastorius":3,"claribelho":5}},{"path":"src/main/java/seedu/fitnus/exception/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the user inputs an unrecognised command.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"public class InvalidCommandException extends Exception{","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"BryanCastorius":3,"claribelho":5}},{"path":"src/main/java/seedu/fitnus/exception/InvalidDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edwardhumi"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the date is invalid.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"edwardhumi"},"content":"public class InvalidDateException extends Exception{","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"edwardhumi"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"edwardhumi":4,"claribelho":4}},{"path":"src/main/java/seedu/fitnus/exception/InvalidListIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the index is not a valid index in the list.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"public class InvalidListIndexException extends Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"    ","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"claribelho":9}},{"path":"src/main/java/seedu/fitnus/exception/NegativeValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the integer is a non-positive value.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"public class NegativeValueException extends Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"claribelho":8}},{"path":"src/main/java/seedu/fitnus/exception/UnregisteredDrinkException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the specified drink is not pre-defined.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"public class UnregisteredDrinkException extends Exception{","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"BryanCastorius":3,"claribelho":5}},{"path":"src/main/java/seedu/fitnus/exception/UnregisteredExerciseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonlienardi"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the specified exercise is not pre-defined.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"jasonlienardi"},"content":"public class UnregisteredExerciseException extends Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"jasonlienardi":4,"claribelho":4}},{"path":"src/main/java/seedu/fitnus/exception/UnregisteredMealException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the specified meal is not pre-defined.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"public class UnregisteredMealException extends Exception{","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"BryanCastorius":3,"claribelho":5}},{"path":"src/main/java/seedu/fitnus/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edwardhumi"},"content":"package seedu.fitnus.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.Drink;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.Exercise;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.ExerciseIntensity;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.Meal;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.Date;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.IncompleteDeleteException;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.IncompleteDrinkException;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.IncompleteEditException;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.IncompleteExerciseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.IncompleteInfoException;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.IncompleteMealException;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.InvalidCommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.InvalidListIndexException;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.NegativeValueException;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.UnregisteredDrinkException;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.UnregisteredExerciseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.UnregisteredMealException;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.InvalidDateException;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.user.User;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.validator.IntegerValidation;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"edwardhumi"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"edwardhumi"},"content":" * The Parser class is responsible for parsing user commands and delegating","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"edwardhumi"},"content":" * them to the appropriate classes for execution.","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"edwardhumi"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"edwardhumi"},"content":"public class Parser {","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"    public static final int MIN_INTEGER_VALUE \u003d -2147483648;","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"    public static final int MAX_INTEGER_VALUE \u003d 2147483647;","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"edwardhumi"},"content":"    public static String mealDescription;","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"edwardhumi"},"content":"    public static int mealSize;","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"edwardhumi"},"content":"    public static String drinkDescription;","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"edwardhumi"},"content":"    public static int drinkSize;","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"edwardhumi"},"content":"    public static int editMealIndex;","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"edwardhumi"},"content":"    public static int editMealSize;","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"edwardhumi"},"content":"    public static int editDrinkIndex;","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"edwardhumi"},"content":"    public static int editDrinkSize;","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"edwardhumi"},"content":"    public static int editWaterSize;","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"edwardhumi"},"content":"    public static String mealStorageDescription;","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"edwardhumi"},"content":"    public static int mealStorageSize;","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"    public static String mealStorageDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"edwardhumi"},"content":"    public static String drinkStorageDescription;","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"edwardhumi"},"content":"    public static int drinkStorageSize;","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"    public static String drinkStorageDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"BryanCastorius"},"content":"    public static String exerciseStorageDescription;","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"BryanCastorius"},"content":"    public static int exerciseStorageDuration;","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"BryanCastorius"},"content":"    public static ExerciseIntensity exerciseStorageIntensity;","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"BryanCastorius"},"content":"    public static String exerciseStorageDate;","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"jasonlienardi"},"content":"    public static String exerciseDescription;","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"jasonlienardi"},"content":"    public static int exerciseDuration;","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"edwardhumi"},"content":"    public static String mealNutrientDescription;","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"edwardhumi"},"content":"    public static int mealNutrientCalories;","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"edwardhumi"},"content":"    public static int mealNutrientCarbs;","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"edwardhumi"},"content":"    public static int mealNutrientProtein;","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"edwardhumi"},"content":"    public static int mealNutrientFat;","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"edwardhumi"},"content":"    public static int mealNutrientFiber;","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"edwardhumi"},"content":"    public static int mealNutrientSugar;","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"edwardhumi"},"content":"    public static String drinkNutrientDescription;","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"edwardhumi"},"content":"    public static int drinkNutrientCalories;","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"edwardhumi"},"content":"    public static int drinkNutrientCarbs;","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"edwardhumi"},"content":"    public static int drinkNutrientSugar;","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"edwardhumi"},"content":"    public static int drinkNutrientProtein;","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"edwardhumi"},"content":"    public static int drinkNutrientFat;","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"edwardhumi"},"content":"    public static String exerciseCaloriesDescription;","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"edwardhumi"},"content":"    public static int exerciseCaloriesHigh;","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"edwardhumi"},"content":"    public static int exerciseCaloriesMedium;","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"edwardhumi"},"content":"    public static int exerciseCaloriesLow;","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"edwardhumi"},"content":"    public static ExerciseIntensity exerciseIntensity;","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"edwardhumi"},"content":"    private User user;","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"edwardhumi"},"content":"     * Constructs a Parser object with the given User.","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"edwardhumi"},"content":"     * @param user The User object to interact with.","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"edwardhumi"},"content":"    public Parser(User user) {","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"edwardhumi"},"content":"        this.user \u003d user;","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"edwardhumi"},"content":"     * Parses the user command and executes the corresponding action.","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"jasonlienardi"},"content":"    public void handleCommand(String command) {","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"BryanCastorius"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"edwardhumi"},"content":"            if (command.equals(\"help\")) {","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"edwardhumi"},"content":"                handleHelp();","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"BryanCastorius"},"content":"            } else if (command.startsWith(\"eat\")) {","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"jasonlienardi"},"content":"                user.handleMeal(command);","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"edwardhumi"},"content":"            } else if (command.startsWith(\"drink\")) {","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"jasonlienardi"},"content":"                user.handleDrink(command);","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"jasonlienardi"},"content":"            } else if (command.startsWith(\"exercise\")) {","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"jasonlienardi"},"content":"                user.handleExercise(command);","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"jasonlienardi"},"content":"            } else if (command.startsWith(\"newMeal\")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"jasonlienardi"},"content":"                user.handleAddNewMealNutrient(command);","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"jasonlienardi"},"content":"            } else if (command.startsWith(\"newDrink\")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"jasonlienardi"},"content":"                user.handleAddNewDrinkNutrient(command);","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"claribelho"},"content":"            } else if (command.equals(\"allMeals\")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"claribelho"},"content":"                Meal.listAvailableMeals();","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"claribelho"},"content":"            } else if (command.equals(\"allDrinks\")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"claribelho"},"content":"                Drink.listAvailableDrinks();","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"claribelho"},"content":"            } else if (command.equals(\"allExercises\")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"claribelho"},"content":"                Exercise.listAvailableExercises();","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"edwardhumi"},"content":"            } else if (command.startsWith(\"infoMeal\")) {","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"jasonlienardi"},"content":"                Meal.handleInfoMeal(command);","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"edwardhumi"},"content":"            } else if (command.startsWith(\"infoDrink\")) {","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"jasonlienardi"},"content":"                Drink.handleInfoDrink(command);","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"jasonlienardi"},"content":"            } else if (command.startsWith(\"infoExercise\")) {","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"jasonlienardi"},"content":"                Exercise.handleInfoExercise(command);","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"claribelho"},"content":"            } else if (command.equals(\"calories\")) {","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"jasonlienardi"},"content":"                user.handleViewCalories();","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"claribelho"},"content":"            } else if (command.equals(\"caloriesBurnt\")) {","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"claribelho"},"content":"                user.handleCaloriesBurnt();","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"claribelho"},"content":"            } else if (command.equals(\"carbs\")) {","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"jasonlienardi"},"content":"                user.handleViewCarbohydrates();","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"claribelho"},"content":"            } else if (command.equals(\"protein\")) {","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"jasonlienardi"},"content":"                user.handleViewProteins();","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"claribelho"},"content":"            } else if (command.equals(\"sugar\")) {","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"jasonlienardi"},"content":"                user.handleViewSugar();","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"claribelho"},"content":"            } else if (command.equals(\"fat\")) {","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"jasonlienardi"},"content":"                user.handleViewFat();","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"edwardhumi"},"content":"            } else if (command.equals(\"viewWater\")) {","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"jasonlienardi"},"content":"                user.handleViewWaterIntake();","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"claribelho"},"content":"            } else if (command.equals(\"fiber\")) {","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"jasonlienardi"},"content":"                user.handleViewFiber();","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"edwardhumi"},"content":"            } else if (command.equals(\"listMeals\")) {","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"jasonlienardi"},"content":"                user.handleListMeals();","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"edwardhumi"},"content":"            } else if (command.equals(\"listMealsAll\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":143,"author":{"gitId":"edwardhumi"},"content":"                user.handleListMealsAll();","lastModifiedDate":"2024-04-01"},{"lineNumber":144,"author":{"gitId":"edwardhumi"},"content":"            } else if (command.startsWith(\"listMeals\") \u0026\u0026 command.contains(\"d/\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":145,"author":{"gitId":"edwardhumi"},"content":"                user.handleListMealsDate(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":146,"author":{"gitId":"edwardhumi"},"content":"            } else if (command.equals(\"listDrinks\")) {","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"jasonlienardi"},"content":"                user.handleListDrinks();","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"edwardhumi"},"content":"            } else if (command.equals(\"listDrinksAll\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"edwardhumi"},"content":"                user.handleListDrinksAll();","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"edwardhumi"},"content":"            } else if (command.startsWith(\"listDrinks\") \u0026\u0026 command.contains(\"d/\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"edwardhumi"},"content":"                user.handleListDrinksDate(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":152,"author":{"gitId":"jasonlienardi"},"content":"            } else if (command.equals(\"listExercises\")) {","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"jasonlienardi"},"content":"                user.handleListExercises();","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"edwardhumi"},"content":"            } else if (command.equals(\"listExercisesAll\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"edwardhumi"},"content":"                user.handleListExercisesAll();","lastModifiedDate":"2024-04-01"},{"lineNumber":156,"author":{"gitId":"edwardhumi"},"content":"            } else if (command.startsWith(\"listExercises\") \u0026\u0026 command.contains(\"d/\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":157,"author":{"gitId":"edwardhumi"},"content":"                user.handleListExercisesDate(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":158,"author":{"gitId":"claribelho"},"content":"            } else if (command.equals(\"listEverything\")) {","lastModifiedDate":"2024-03-30"},{"lineNumber":159,"author":{"gitId":"claribelho"},"content":"                user.handleListEverything();","lastModifiedDate":"2024-03-30"},{"lineNumber":160,"author":{"gitId":"edwardhumi"},"content":"            } else if (command.equals(\"listEverythingAll\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":161,"author":{"gitId":"edwardhumi"},"content":"                user.handleListEverythingAll();","lastModifiedDate":"2024-04-01"},{"lineNumber":162,"author":{"gitId":"edwardhumi"},"content":"            } else if (command.startsWith(\"listEverything\") \u0026\u0026 command.contains(\"d/\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":163,"author":{"gitId":"edwardhumi"},"content":"                user.handleListEverythingDate(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":164,"author":{"gitId":"claribelho"},"content":"            } else if (command.startsWith(\"editMeal\")) {","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"jasonlienardi"},"content":"                user.handleEditMealServingSize(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":166,"author":{"gitId":"claribelho"},"content":"            } else if (command.startsWith(\"editDrink\")) {","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"jasonlienardi"},"content":"                user.handleEditDrinkServingSize(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":168,"author":{"gitId":"claribelho"},"content":"            } else if (command.startsWith(\"editWater\")) {","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"jasonlienardi"},"content":"                user.handleEditWaterIntake(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":170,"author":{"gitId":"edwardhumi"},"content":"            } else if (command.startsWith(\"deleteMeal\")) {","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"jasonlienardi"},"content":"                user.handleDeleteMeal(command);","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"edwardhumi"},"content":"            } else if (command.startsWith(\"deleteDrink\")) {","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"jasonlienardi"},"content":"                user.handleDeleteDrink(command);","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"claribelho"},"content":"            } else if (command.startsWith(\"deleteExercise\")) {","lastModifiedDate":"2024-03-30"},{"lineNumber":175,"author":{"gitId":"claribelho"},"content":"                user.handleDeleteExercise(command);","lastModifiedDate":"2024-03-30"},{"lineNumber":176,"author":{"gitId":"edwardhumi"},"content":"            } else if (command.equals(\"clear\")) {","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"jasonlienardi"},"content":"                user.handleClear();","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"BryanCastorius"},"content":"            } else if (command.equals(\"recommend\")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"BryanCastorius"},"content":"                user.handleRecommendations();","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"edwardhumi"},"content":"            } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"BryanCastorius"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"BryanCastorius"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"BryanCastorius"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"BryanCastorius"},"content":"            System.out.println(\"Invalid command, type [help] to view all commands.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"BryanCastorius"},"content":"        } catch (IncompleteDrinkException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Incomplete/Incorrect command, the format MUST be [drink d/DRINK s/SERVING_SIZE].\");","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"BryanCastorius"},"content":"        } catch (IncompleteMealException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Incomplete/Incorrect command, the format MUST be [eat m/MEAL s/SERVING_SIZE].\");","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"jasonlienardi"},"content":"        } catch (IncompleteExerciseException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Incomplete/Incorrect command, \" +","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"claribelho"},"content":"                    \"the format MUST be [exercise e/EXERCISE d/DURATION i/INTENSITY].\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":192,"author":{"gitId":"claribelho"},"content":"                    + \" \u003e DURATION should be in minutes and INTENSITY can only be HIGH/MEDIUM/LOW.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":193,"author":{"gitId":"BryanCastorius"},"content":"        } catch (UnregisteredDrinkException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":194,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Sorry that drink is not registered in the database.Please check the spelling and \" +","lastModifiedDate":"2024-03-30"},{"lineNumber":195,"author":{"gitId":"claribelho"},"content":"                    \"try again\");","lastModifiedDate":"2024-03-30"},{"lineNumber":196,"author":{"gitId":"BryanCastorius"},"content":"        } catch (UnregisteredMealException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Sorry that meal is not registered in the database. Please check the spelling and \" +","lastModifiedDate":"2024-03-30"},{"lineNumber":198,"author":{"gitId":"claribelho"},"content":"                    \"try again\");","lastModifiedDate":"2024-03-30"},{"lineNumber":199,"author":{"gitId":"claribelho"},"content":"        } catch (InvalidListIndexException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Sorry the index you provided is invalid, check [listMeals/listDrinks/listExercises] \" +","lastModifiedDate":"2024-03-30"},{"lineNumber":201,"author":{"gitId":"claribelho"},"content":"                    \"to view valid indexes.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"jasonlienardi"},"content":"        } catch (UnregisteredExerciseException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":203,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Sorry that exercise is not registered in the database. Please check the spelling and\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":204,"author":{"gitId":"claribelho"},"content":"                    \" try again\");","lastModifiedDate":"2024-03-30"},{"lineNumber":205,"author":{"gitId":"claribelho"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":206,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"An integer value is expected, try again please :)\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":207,"author":{"gitId":"claribelho"},"content":"                    \"  \u003e Friendly reminder that integer values cannot exceed the range of \" + MIN_INTEGER_VALUE + \" to \"","lastModifiedDate":"2024-03-30"},{"lineNumber":208,"author":{"gitId":"claribelho"},"content":"                    + MAX_INTEGER_VALUE + \".\\n    Although, we highly doubt you will ever exceed this range\");","lastModifiedDate":"2024-03-30"},{"lineNumber":209,"author":{"gitId":"claribelho"},"content":"        } catch (IncompleteDeleteException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":210,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Please specify an index that you would like to delete. The format should be \" +","lastModifiedDate":"2024-03-30"},{"lineNumber":211,"author":{"gitId":"claribelho"},"content":"                    \"[deleteMeal/deleteDrink/deleteExercise INDEX]\");","lastModifiedDate":"2024-03-30"},{"lineNumber":212,"author":{"gitId":"claribelho"},"content":"        } catch (IncompleteEditException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":213,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Please specify an index that you would like to edit AND/OR the new serving size. \"+","lastModifiedDate":"2024-03-30"},{"lineNumber":214,"author":{"gitId":"claribelho"},"content":"                    \"Type [help] to view the commands format.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":215,"author":{"gitId":"claribelho"},"content":"        } catch (IncompleteInfoException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":216,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Please specify a meal/drink/exercise that you would like to view the info of. \" +","lastModifiedDate":"2024-03-30"},{"lineNumber":217,"author":{"gitId":"claribelho"},"content":"                    \"Type [help] to view the commands format.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":218,"author":{"gitId":"claribelho"},"content":"        } catch (NegativeValueException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":219,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Your serving size/exercise duration must be at least 0!\");","lastModifiedDate":"2024-03-30"},{"lineNumber":220,"author":{"gitId":"edwardhumi"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":221,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"Invalid date provided. Your date must be in the format of dd-MM-yyyy.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":222,"author":{"gitId":"jasonlienardi"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":223,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-04-02"},{"lineNumber":224,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":225,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":226,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":227,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":228,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":229,"author":{"gitId":"edwardhumi"},"content":"     * Displays a list of valid commands and their formats.","lastModifiedDate":"2024-04-02"},{"lineNumber":230,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":231,"author":{"gitId":"edwardhumi"},"content":"    public static void handleHelp() {","lastModifiedDate":"2024-03-18"},{"lineNumber":232,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"here\u0027s all the valid commands i recognise: \");","lastModifiedDate":"2024-03-19"},{"lineNumber":233,"author":{"gitId":"BryanCastorius"},"content":"        System.out.println(\"- Add a meal eaten: eat m/MEAL s/SERVING_SIZE\");","lastModifiedDate":"2024-03-31"},{"lineNumber":234,"author":{"gitId":"BryanCastorius"},"content":"        System.out.println(\"- Add a drink: drink d/DRINK s/VOLUME(ML)\");","lastModifiedDate":"2024-03-26"},{"lineNumber":235,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"- Track an exercise: exercise e/EXERCISE d/DURATION(MINUTES) \" +","lastModifiedDate":"2024-04-01"},{"lineNumber":236,"author":{"gitId":"jasonlienardi"},"content":"                \"i/INTENSITY(HIGH, MEDIUM, LOW)\");","lastModifiedDate":"2024-03-27"},{"lineNumber":237,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- View all meals that you can input: allMeals\");","lastModifiedDate":"2024-04-02"},{"lineNumber":238,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- View all drinks that you can input: allDrinks\");","lastModifiedDate":"2024-04-02"},{"lineNumber":239,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- View all exercises that you can input: allExercises\");","lastModifiedDate":"2024-04-02"},{"lineNumber":240,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- Find the information about a certain meal: infoMeal MEAL\");","lastModifiedDate":"2024-03-19"},{"lineNumber":241,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- Find the information about a certain drink: infoDrink DRINK\");","lastModifiedDate":"2024-03-19"},{"lineNumber":242,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"- Find the information about a certain exercise: infoExercise EXERCISE\");","lastModifiedDate":"2024-03-27"},{"lineNumber":243,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- View daily calories consumed: calories\");","lastModifiedDate":"2024-03-19"},{"lineNumber":244,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- View daily carbohydrates consumed: carbs\");","lastModifiedDate":"2024-03-19"},{"lineNumber":245,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- View daily proteins consumed: protein\");","lastModifiedDate":"2024-03-19"},{"lineNumber":246,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- View daily fat consumed: fat\");","lastModifiedDate":"2024-03-19"},{"lineNumber":247,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- View daily sugar consumed: sugar\");","lastModifiedDate":"2024-03-19"},{"lineNumber":248,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- View daily fiber consumed: fiber\");","lastModifiedDate":"2024-03-19"},{"lineNumber":249,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- View daily water consumption: viewWater\");","lastModifiedDate":"2024-03-19"},{"lineNumber":250,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"- View daily calories burnt: caloriesBurnt\");","lastModifiedDate":"2024-03-27"},{"lineNumber":251,"author":{"gitId":"BryanCastorius"},"content":"        System.out.println(\"- View daily calories and water intake recommendation: recommend\");","lastModifiedDate":"2024-04-02"},{"lineNumber":252,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List today\u0027s meal intake: listMeals\");","lastModifiedDate":"2024-04-01"},{"lineNumber":253,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List today\u0027s drink intake: listDrinks\");","lastModifiedDate":"2024-04-01"},{"lineNumber":254,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List today\u0027s exercises done: listExercises\");","lastModifiedDate":"2024-04-01"},{"lineNumber":255,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List today\u0027s entire food intake and exercises: listEverything\");","lastModifiedDate":"2024-04-01"},{"lineNumber":256,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List all meal intake: listMealsAll\");","lastModifiedDate":"2024-04-01"},{"lineNumber":257,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List all drink intake: listDrinksAll\");","lastModifiedDate":"2024-04-01"},{"lineNumber":258,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List all exercises done: listExercisesAll\");","lastModifiedDate":"2024-04-01"},{"lineNumber":259,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List all food intake and exercises: listEverythingAll\");","lastModifiedDate":"2024-04-02"},{"lineNumber":260,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List meal intake for certain date: listMeals d/dd-MM-yyyy\");","lastModifiedDate":"2024-04-01"},{"lineNumber":261,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List drink intake for certain date: listDrinks d/dd-MM-yyyy\");","lastModifiedDate":"2024-04-01"},{"lineNumber":262,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List exercises done for certain date: listExercises d/dd-MM-yyyy\");","lastModifiedDate":"2024-04-01"},{"lineNumber":263,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List entire food intake and exercises for certain date: listEverything d/dd-MM-yyyy\");","lastModifiedDate":"2024-04-01"},{"lineNumber":264,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- Edit an existing meal after inserted: editMeal INDEX s/NEW_SERVING_SIZE\");","lastModifiedDate":"2024-03-19"},{"lineNumber":265,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- Edit an existing drink after inserted: editDrink INDEX s/NEW_SERVING_SIZE\");","lastModifiedDate":"2024-03-19"},{"lineNumber":266,"author":{"gitId":"BryanCastorius"},"content":"        System.out.println(\"- Edit total water intake after inserted: editWater s/TOTAL_WATER_INTAKE\");","lastModifiedDate":"2024-03-27"},{"lineNumber":267,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- Delete certain meal entry: deleteMeal INDEX\");","lastModifiedDate":"2024-03-19"},{"lineNumber":268,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- Delete certain drink entry: deleteDrink INDEX\");","lastModifiedDate":"2024-03-19"},{"lineNumber":269,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"- Delete certain exercise entry: deleteExercise INDEX\");","lastModifiedDate":"2024-04-01"},{"lineNumber":270,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"- Add a new meal to available meals: newMeal MEAL_NAME,CALORIES,\" +","lastModifiedDate":"2024-04-02"},{"lineNumber":271,"author":{"gitId":"jasonlienardi"},"content":"                \"CARBS,PROTEIN,FAT,FIBER,SUGAR\");","lastModifiedDate":"2024-04-02"},{"lineNumber":272,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"- Add a new drink to available drinks: newDrink DRINK_NAME,CALORIES,\" +","lastModifiedDate":"2024-04-02"},{"lineNumber":273,"author":{"gitId":"jasonlienardi"},"content":"                \"CARBS,SUGAR,PROTEIN,FAT\");","lastModifiedDate":"2024-04-02"},{"lineNumber":274,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- Clear all entries: clear\");","lastModifiedDate":"2024-03-19"},{"lineNumber":275,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- Exit the app: exit \");","lastModifiedDate":"2024-03-19"},{"lineNumber":276,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":277,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":278,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":279,"author":{"gitId":"edwardhumi"},"content":"     * Parses a meal command string and extracts the meal description and size.","lastModifiedDate":"2024-04-02"},{"lineNumber":280,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":281,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":282,"author":{"gitId":"edwardhumi"},"content":"     * @throws IncompleteMealException If the meal command is incomplete.","lastModifiedDate":"2024-04-02"},{"lineNumber":283,"author":{"gitId":"edwardhumi"},"content":"     * @throws UnregisteredMealException If the meal is not registered in the database.","lastModifiedDate":"2024-04-02"},{"lineNumber":284,"author":{"gitId":"edwardhumi"},"content":"     * @throws NegativeValueException If a negative value is encountered.","lastModifiedDate":"2024-04-02"},{"lineNumber":285,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":286,"author":{"gitId":"claribelho"},"content":"    public static void parseMeal(String command) throws IncompleteMealException, UnregisteredMealException,","lastModifiedDate":"2024-03-29"},{"lineNumber":287,"author":{"gitId":"claribelho"},"content":"            NegativeValueException {","lastModifiedDate":"2024-03-30"},{"lineNumber":288,"author":{"gitId":"BryanCastorius"},"content":"        if (!command.contains(\"m/\") || !command.contains(\"s/\")) {","lastModifiedDate":"2024-03-19"},{"lineNumber":289,"author":{"gitId":"BryanCastorius"},"content":"            throw new IncompleteMealException();","lastModifiedDate":"2024-03-19"},{"lineNumber":290,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":291,"author":{"gitId":"edwardhumi"},"content":"        int descriptionIndex \u003d command.indexOf(\"m/\") + 2;","lastModifiedDate":"2024-03-17"},{"lineNumber":292,"author":{"gitId":"edwardhumi"},"content":"        int sizeIndex \u003d command.indexOf(\"s/\") + 2;","lastModifiedDate":"2024-03-17"},{"lineNumber":293,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":294,"author":{"gitId":"claribelho"},"content":"        if (sizeIndex \u003e\u003d command.length() || sizeIndex \u003c descriptionIndex) {","lastModifiedDate":"2024-04-02"},{"lineNumber":295,"author":{"gitId":"BryanCastorius"},"content":"            throw new IncompleteMealException();","lastModifiedDate":"2024-03-19"},{"lineNumber":296,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":297,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":298,"author":{"gitId":"edwardhumi"},"content":"        mealDescription \u003d command.substring(descriptionIndex, sizeIndex - 2).trim().toLowerCase();","lastModifiedDate":"2024-03-24"},{"lineNumber":299,"author":{"gitId":"BryanCastorius"},"content":"        if (mealDescription.isEmpty()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":300,"author":{"gitId":"BryanCastorius"},"content":"            throw new IncompleteMealException();","lastModifiedDate":"2024-03-19"},{"lineNumber":301,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":302,"author":{"gitId":"BryanCastorius"},"content":"        if (!Meal.getNutrientDetails().containsKey(mealDescription)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":303,"author":{"gitId":"BryanCastorius"},"content":"            throw new UnregisteredMealException();","lastModifiedDate":"2024-03-19"},{"lineNumber":304,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":305,"author":{"gitId":"edwardhumi"},"content":"        mealSize \u003d Integer.parseInt(command.substring(sizeIndex).trim());","lastModifiedDate":"2024-03-17"},{"lineNumber":306,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkIntegerGreaterThanZero(mealSize);","lastModifiedDate":"2024-03-30"},{"lineNumber":307,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":308,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":309,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":310,"author":{"gitId":"edwardhumi"},"content":"     * Parses the command for adding a drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":311,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":312,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":313,"author":{"gitId":"edwardhumi"},"content":"     * @throws IncompleteDrinkException If the drink command is incomplete.","lastModifiedDate":"2024-04-02"},{"lineNumber":314,"author":{"gitId":"edwardhumi"},"content":"     * @throws UnregisteredDrinkException If the drink is not registered in the database.","lastModifiedDate":"2024-04-02"},{"lineNumber":315,"author":{"gitId":"edwardhumi"},"content":"     * @throws NegativeValueException If a negative value is encountered.","lastModifiedDate":"2024-04-02"},{"lineNumber":316,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":317,"author":{"gitId":"claribelho"},"content":"    public static void parseDrink(String command) throws IncompleteDrinkException, UnregisteredDrinkException,","lastModifiedDate":"2024-03-28"},{"lineNumber":318,"author":{"gitId":"claribelho"},"content":"            NegativeValueException {","lastModifiedDate":"2024-03-30"},{"lineNumber":319,"author":{"gitId":"BryanCastorius"},"content":"        if (!command.contains(\"d/\") || !command.contains(\"s/\")) {","lastModifiedDate":"2024-03-19"},{"lineNumber":320,"author":{"gitId":"BryanCastorius"},"content":"            throw new IncompleteDrinkException();","lastModifiedDate":"2024-03-19"},{"lineNumber":321,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":322,"author":{"gitId":"edwardhumi"},"content":"        int descriptionIndex \u003d command.indexOf(\"d/\") + 2;","lastModifiedDate":"2024-03-17"},{"lineNumber":323,"author":{"gitId":"edwardhumi"},"content":"        int sizeIndex \u003d command.indexOf(\"s/\") + 2;","lastModifiedDate":"2024-03-17"},{"lineNumber":324,"author":{"gitId":"claribelho"},"content":"        if (sizeIndex \u003e\u003d command.length() || sizeIndex \u003c descriptionIndex) {","lastModifiedDate":"2024-04-02"},{"lineNumber":325,"author":{"gitId":"BryanCastorius"},"content":"            throw new IncompleteDrinkException();","lastModifiedDate":"2024-03-19"},{"lineNumber":326,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":327,"author":{"gitId":"edwardhumi"},"content":"        drinkDescription \u003d command.substring(descriptionIndex, sizeIndex - 2).trim().toLowerCase();","lastModifiedDate":"2024-03-24"},{"lineNumber":328,"author":{"gitId":"BryanCastorius"},"content":"        if (drinkDescription.isEmpty()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":329,"author":{"gitId":"BryanCastorius"},"content":"            throw new IncompleteDrinkException();","lastModifiedDate":"2024-03-19"},{"lineNumber":330,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":331,"author":{"gitId":"BryanCastorius"},"content":"        if (!Drink.getNutrientDetails().containsKey(drinkDescription) \u0026\u0026 !drinkDescription.equals(\"water\")) {","lastModifiedDate":"2024-03-26"},{"lineNumber":332,"author":{"gitId":"BryanCastorius"},"content":"            throw new UnregisteredDrinkException();","lastModifiedDate":"2024-03-19"},{"lineNumber":333,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":334,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":335,"author":{"gitId":"edwardhumi"},"content":"        drinkSize \u003d Integer.parseInt(command.substring(sizeIndex).trim());","lastModifiedDate":"2024-03-17"},{"lineNumber":336,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkIntegerGreaterThanZero(drinkSize);","lastModifiedDate":"2024-03-30"},{"lineNumber":337,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":338,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":339,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":340,"author":{"gitId":"edwardhumi"},"content":"     * Parses the command for obtaining information about a meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":341,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":342,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":343,"author":{"gitId":"edwardhumi"},"content":"     * @return The description of the meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":344,"author":{"gitId":"edwardhumi"},"content":"     * @throws UnregisteredMealException If the meal is not registered in the database.","lastModifiedDate":"2024-04-02"},{"lineNumber":345,"author":{"gitId":"edwardhumi"},"content":"     * @throws IncompleteInfoException If the command is incomplete.","lastModifiedDate":"2024-04-02"},{"lineNumber":346,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":347,"author":{"gitId":"claribelho"},"content":"    public static String parseInfoMeal(String command) throws UnregisteredMealException, IncompleteInfoException {","lastModifiedDate":"2024-03-30"},{"lineNumber":348,"author":{"gitId":"edwardhumi"},"content":"        int mealIndex \u003d 9;","lastModifiedDate":"2024-03-17"},{"lineNumber":349,"author":{"gitId":"claribelho"},"content":"        if (command.length() \u003c mealIndex + 1) {","lastModifiedDate":"2024-03-30"},{"lineNumber":350,"author":{"gitId":"claribelho"},"content":"            throw new IncompleteInfoException();","lastModifiedDate":"2024-03-30"},{"lineNumber":351,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":352,"author":{"gitId":"edwardhumi"},"content":"        String infoMealDescription \u003d command.substring(mealIndex).trim().toLowerCase();","lastModifiedDate":"2024-04-01"},{"lineNumber":353,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":354,"author":{"gitId":"BryanCastorius"},"content":"        if (!Meal.getNutrientDetails().containsKey(infoMealDescription)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":355,"author":{"gitId":"BryanCastorius"},"content":"            throw new UnregisteredMealException();","lastModifiedDate":"2024-03-19"},{"lineNumber":356,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":357,"author":{"gitId":"BryanCastorius"},"content":"        return infoMealDescription;","lastModifiedDate":"2024-03-19"},{"lineNumber":358,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":359,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":360,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":361,"author":{"gitId":"edwardhumi"},"content":"     * Parses the command for obtaining information about an exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":362,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":363,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":364,"author":{"gitId":"edwardhumi"},"content":"     * @return The description of the exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":365,"author":{"gitId":"edwardhumi"},"content":"     * @throws UnregisteredExerciseException If the exercise is not registered in the database.","lastModifiedDate":"2024-04-02"},{"lineNumber":366,"author":{"gitId":"edwardhumi"},"content":"     * @throws IncompleteInfoException If the command is incomplete.","lastModifiedDate":"2024-04-02"},{"lineNumber":367,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":368,"author":{"gitId":"claribelho"},"content":"    public static String parseInfoExercise(String command) throws UnregisteredExerciseException,","lastModifiedDate":"2024-03-30"},{"lineNumber":369,"author":{"gitId":"claribelho"},"content":"            IncompleteInfoException {","lastModifiedDate":"2024-03-30"},{"lineNumber":370,"author":{"gitId":"jasonlienardi"},"content":"        int exerciseIndex \u003d 13;","lastModifiedDate":"2024-03-27"},{"lineNumber":371,"author":{"gitId":"claribelho"},"content":"        if (command.length() \u003c exerciseIndex + 1) {","lastModifiedDate":"2024-03-30"},{"lineNumber":372,"author":{"gitId":"claribelho"},"content":"            throw new IncompleteInfoException();","lastModifiedDate":"2024-03-30"},{"lineNumber":373,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":374,"author":{"gitId":"edwardhumi"},"content":"        String infoExerciseDescription \u003d command.substring(exerciseIndex).trim().toLowerCase();","lastModifiedDate":"2024-04-01"},{"lineNumber":375,"author":{"gitId":"jasonlienardi"},"content":"        if (!Exercise.getExerciseDetails().containsKey(infoExerciseDescription)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":376,"author":{"gitId":"jasonlienardi"},"content":"            throw new UnregisteredExerciseException();","lastModifiedDate":"2024-03-27"},{"lineNumber":377,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":378,"author":{"gitId":"jasonlienardi"},"content":"        return infoExerciseDescription;","lastModifiedDate":"2024-03-27"},{"lineNumber":379,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":380,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":381,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":382,"author":{"gitId":"edwardhumi"},"content":"     * Parses the command for obtaining information about a drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":383,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":384,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":385,"author":{"gitId":"edwardhumi"},"content":"     * @return The description of the drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":386,"author":{"gitId":"edwardhumi"},"content":"     * @throws UnregisteredDrinkException If the drink is not registered in the database.","lastModifiedDate":"2024-04-02"},{"lineNumber":387,"author":{"gitId":"edwardhumi"},"content":"     * @throws IncompleteInfoException If the command is incomplete.","lastModifiedDate":"2024-04-02"},{"lineNumber":388,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":389,"author":{"gitId":"claribelho"},"content":"    public static String parseInfoDrink(String command) throws UnregisteredDrinkException, IncompleteInfoException {","lastModifiedDate":"2024-03-30"},{"lineNumber":390,"author":{"gitId":"edwardhumi"},"content":"        int drinkIndex \u003d 10;","lastModifiedDate":"2024-03-17"},{"lineNumber":391,"author":{"gitId":"claribelho"},"content":"        if (command.length() \u003c drinkIndex + 1) {","lastModifiedDate":"2024-03-30"},{"lineNumber":392,"author":{"gitId":"claribelho"},"content":"            throw new IncompleteInfoException();","lastModifiedDate":"2024-03-30"},{"lineNumber":393,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":394,"author":{"gitId":"edwardhumi"},"content":"        String infoDrinkDescription \u003d command.substring(drinkIndex).trim().toLowerCase();","lastModifiedDate":"2024-04-01"},{"lineNumber":395,"author":{"gitId":"edwardhumi"},"content":"        if (!Drink.getNutrientDetails().containsKey(infoDrinkDescription)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":396,"author":{"gitId":"BryanCastorius"},"content":"            throw new UnregisteredDrinkException();","lastModifiedDate":"2024-03-19"},{"lineNumber":397,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":398,"author":{"gitId":"claribelho"},"content":"        return infoDrinkDescription;","lastModifiedDate":"2024-03-19"},{"lineNumber":399,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":400,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":401,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":402,"author":{"gitId":"edwardhumi"},"content":"     * Parses the command for editing a meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":403,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":404,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":405,"author":{"gitId":"edwardhumi"},"content":"     * @throws NegativeValueException If a negative value is encountered.","lastModifiedDate":"2024-04-02"},{"lineNumber":406,"author":{"gitId":"edwardhumi"},"content":"     * @throws IncompleteEditException If the command is incomplete.","lastModifiedDate":"2024-04-02"},{"lineNumber":407,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":408,"author":{"gitId":"claribelho"},"content":"    public static void parseEditMeal(String command) throws NegativeValueException, IncompleteEditException {","lastModifiedDate":"2024-03-30"},{"lineNumber":409,"author":{"gitId":"claribelho"},"content":"        int mealSizePosition \u003d command.indexOf(\"s/\");","lastModifiedDate":"2024-03-30"},{"lineNumber":410,"author":{"gitId":"claribelho"},"content":"        if (mealSizePosition \u003c\u003d 9) {","lastModifiedDate":"2024-03-30"},{"lineNumber":411,"author":{"gitId":"claribelho"},"content":"            throw new IncompleteEditException();","lastModifiedDate":"2024-03-30"},{"lineNumber":412,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":413,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":414,"author":{"gitId":"claribelho"},"content":"        editMealIndex \u003d Integer.parseInt(command.substring(9, mealSizePosition).trim()) - 1;","lastModifiedDate":"2024-03-30"},{"lineNumber":415,"author":{"gitId":"claribelho"},"content":"        editMealSize \u003d Integer.parseInt(command.substring(mealSizePosition + 2).trim());","lastModifiedDate":"2024-03-30"},{"lineNumber":416,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkIntegerGreaterThanZero(editMealSize);","lastModifiedDate":"2024-03-30"},{"lineNumber":417,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":418,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":419,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":420,"author":{"gitId":"edwardhumi"},"content":"     * Parses the command for editing a drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":421,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":422,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":423,"author":{"gitId":"edwardhumi"},"content":"     * @throws NegativeValueException If a negative value is encountered.","lastModifiedDate":"2024-04-02"},{"lineNumber":424,"author":{"gitId":"edwardhumi"},"content":"     * @throws IncompleteEditException If the command is incomplete.","lastModifiedDate":"2024-04-02"},{"lineNumber":425,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":426,"author":{"gitId":"claribelho"},"content":"    public static void parseEditDrink(String command) throws NegativeValueException, IncompleteEditException {","lastModifiedDate":"2024-03-30"},{"lineNumber":427,"author":{"gitId":"claribelho"},"content":"        int drinkSizePosition \u003d command.indexOf(\"s/\");","lastModifiedDate":"2024-03-30"},{"lineNumber":428,"author":{"gitId":"claribelho"},"content":"        if (drinkSizePosition \u003c\u003d 10) {","lastModifiedDate":"2024-03-30"},{"lineNumber":429,"author":{"gitId":"claribelho"},"content":"            throw new IncompleteEditException();","lastModifiedDate":"2024-03-30"},{"lineNumber":430,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":431,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":432,"author":{"gitId":"claribelho"},"content":"        editDrinkIndex \u003d Integer.parseInt(command.substring(10, drinkSizePosition).trim()) - 1;","lastModifiedDate":"2024-03-30"},{"lineNumber":433,"author":{"gitId":"claribelho"},"content":"        editDrinkSize \u003d Integer.parseInt(command.substring(drinkSizePosition + 2).trim());","lastModifiedDate":"2024-03-30"},{"lineNumber":434,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkIntegerGreaterThanZero(editDrinkSize);","lastModifiedDate":"2024-03-30"},{"lineNumber":435,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":436,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":437,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":438,"author":{"gitId":"edwardhumi"},"content":"     * Parses the command for editing water intake.","lastModifiedDate":"2024-04-02"},{"lineNumber":439,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":440,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":441,"author":{"gitId":"edwardhumi"},"content":"     * @throws NegativeValueException If a negative value is encountered.","lastModifiedDate":"2024-04-02"},{"lineNumber":442,"author":{"gitId":"edwardhumi"},"content":"     * @throws IncompleteEditException If the command is incomplete.","lastModifiedDate":"2024-04-02"},{"lineNumber":443,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":444,"author":{"gitId":"claribelho"},"content":"    public static void parseEditWater(String command) throws NegativeValueException, IncompleteEditException {","lastModifiedDate":"2024-03-30"},{"lineNumber":445,"author":{"gitId":"edwardhumi"},"content":"        int waterSizePosition \u003d command.indexOf(\"s/\") + 2;","lastModifiedDate":"2024-03-17"},{"lineNumber":446,"author":{"gitId":"claribelho"},"content":"        if (waterSizePosition \u003c\u003d 1) { //-1 + 2","lastModifiedDate":"2024-03-30"},{"lineNumber":447,"author":{"gitId":"claribelho"},"content":"            throw new IncompleteEditException();","lastModifiedDate":"2024-03-30"},{"lineNumber":448,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":449,"author":{"gitId":"edwardhumi"},"content":"        editWaterSize \u003d Integer.parseInt(command.substring(waterSizePosition).trim());","lastModifiedDate":"2024-03-17"},{"lineNumber":450,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkIntegerGreaterThanZero(editWaterSize);","lastModifiedDate":"2024-03-30"},{"lineNumber":451,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":452,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":453,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":454,"author":{"gitId":"edwardhumi"},"content":"     * Parses the data for storing meal information.","lastModifiedDate":"2024-04-02"},{"lineNumber":455,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":456,"author":{"gitId":"edwardhumi"},"content":"     * @param data The data string to be parsed.","lastModifiedDate":"2024-04-02"},{"lineNumber":457,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":458,"author":{"gitId":"edwardhumi"},"content":"    public static void parseMealStorage(String data) {","lastModifiedDate":"2024-03-24"},{"lineNumber":459,"author":{"gitId":"edwardhumi"},"content":"        String delimiter \u003d \",\";","lastModifiedDate":"2024-03-24"},{"lineNumber":460,"author":{"gitId":"edwardhumi"},"content":"        String[] arrayOfMealData \u003d data.split(delimiter);","lastModifiedDate":"2024-03-24"},{"lineNumber":461,"author":{"gitId":"edwardhumi"},"content":"        mealStorageDescription \u003d arrayOfMealData[0];","lastModifiedDate":"2024-03-24"},{"lineNumber":462,"author":{"gitId":"edwardhumi"},"content":"        mealStorageSize \u003d Integer.parseInt(arrayOfMealData[1]);","lastModifiedDate":"2024-03-24"},{"lineNumber":463,"author":{"gitId":"edwardhumi"},"content":"        mealStorageDate \u003d arrayOfMealData[2];","lastModifiedDate":"2024-03-31"},{"lineNumber":464,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":465,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":466,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":467,"author":{"gitId":"edwardhumi"},"content":"     * Parses the data for storing drink information.","lastModifiedDate":"2024-04-02"},{"lineNumber":468,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":469,"author":{"gitId":"edwardhumi"},"content":"     * @param data The data string to be parsed.","lastModifiedDate":"2024-04-02"},{"lineNumber":470,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":471,"author":{"gitId":"edwardhumi"},"content":"    public static void parseDrinkStorage(String data) {","lastModifiedDate":"2024-03-24"},{"lineNumber":472,"author":{"gitId":"edwardhumi"},"content":"        String delimiter \u003d \",\";","lastModifiedDate":"2024-03-24"},{"lineNumber":473,"author":{"gitId":"edwardhumi"},"content":"        String[] arrayOfDrinkData \u003d data.split(delimiter);","lastModifiedDate":"2024-03-24"},{"lineNumber":474,"author":{"gitId":"edwardhumi"},"content":"        drinkStorageDescription \u003d arrayOfDrinkData[0];","lastModifiedDate":"2024-03-24"},{"lineNumber":475,"author":{"gitId":"edwardhumi"},"content":"        drinkStorageSize \u003d Integer.parseInt(arrayOfDrinkData[1]);","lastModifiedDate":"2024-03-24"},{"lineNumber":476,"author":{"gitId":"edwardhumi"},"content":"        drinkStorageDate \u003d arrayOfDrinkData[2];","lastModifiedDate":"2024-03-31"},{"lineNumber":477,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":478,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":479,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":480,"author":{"gitId":"edwardhumi"},"content":"     * Parses the data for storing exercise information.","lastModifiedDate":"2024-04-02"},{"lineNumber":481,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":482,"author":{"gitId":"edwardhumi"},"content":"     * @param data The data string to be parsed.","lastModifiedDate":"2024-04-02"},{"lineNumber":483,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":484,"author":{"gitId":"BryanCastorius"},"content":"    public static void parseExerciseStorage(String data) {","lastModifiedDate":"2024-04-01"},{"lineNumber":485,"author":{"gitId":"BryanCastorius"},"content":"        String delimiter \u003d \",\";","lastModifiedDate":"2024-04-01"},{"lineNumber":486,"author":{"gitId":"BryanCastorius"},"content":"        String[] arrayOfExerciseData \u003d data.split(delimiter);","lastModifiedDate":"2024-04-01"},{"lineNumber":487,"author":{"gitId":"BryanCastorius"},"content":"        exerciseStorageDescription \u003d arrayOfExerciseData[0];","lastModifiedDate":"2024-04-01"},{"lineNumber":488,"author":{"gitId":"BryanCastorius"},"content":"        exerciseStorageDuration \u003d Integer.parseInt(arrayOfExerciseData[1]);","lastModifiedDate":"2024-04-01"},{"lineNumber":489,"author":{"gitId":"BryanCastorius"},"content":"        exerciseStorageIntensity \u003d ExerciseIntensity.valueOf(arrayOfExerciseData[2]);","lastModifiedDate":"2024-04-01"},{"lineNumber":490,"author":{"gitId":"BryanCastorius"},"content":"        exerciseStorageDate \u003d arrayOfExerciseData[3];","lastModifiedDate":"2024-04-01"},{"lineNumber":491,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":492,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":493,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":494,"author":{"gitId":"edwardhumi"},"content":"     * Parses the command for adding an exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":495,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":496,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":497,"author":{"gitId":"edwardhumi"},"content":"     * @throws IncompleteExerciseException If the exercise command is incomplete.","lastModifiedDate":"2024-04-02"},{"lineNumber":498,"author":{"gitId":"edwardhumi"},"content":"     * @throws UnregisteredExerciseException If the exercise is not registered in the database.","lastModifiedDate":"2024-04-02"},{"lineNumber":499,"author":{"gitId":"edwardhumi"},"content":"     * @throws NegativeValueException If a negative value is encountered.","lastModifiedDate":"2024-04-02"},{"lineNumber":500,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":501,"author":{"gitId":"claribelho"},"content":"    public static void parseExercise(String command) throws IncompleteExerciseException, UnregisteredExerciseException,","lastModifiedDate":"2024-03-30"},{"lineNumber":502,"author":{"gitId":"claribelho"},"content":"            NegativeValueException {","lastModifiedDate":"2024-03-30"},{"lineNumber":503,"author":{"gitId":"jasonlienardi"},"content":"        if (!command.contains(\"e/\") || !command.contains(\"d/\") || !command.contains(\"i/\")) {","lastModifiedDate":"2024-03-27"},{"lineNumber":504,"author":{"gitId":"jasonlienardi"},"content":"            throw new IncompleteExerciseException();","lastModifiedDate":"2024-03-27"},{"lineNumber":505,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":506,"author":{"gitId":"jasonlienardi"},"content":"        int descriptionIndex \u003d command.indexOf(\"e/\") + 2;","lastModifiedDate":"2024-03-27"},{"lineNumber":507,"author":{"gitId":"jasonlienardi"},"content":"        int durationIndex \u003d command.indexOf(\"d/\") + 2;","lastModifiedDate":"2024-03-27"},{"lineNumber":508,"author":{"gitId":"jasonlienardi"},"content":"        int intensityIndex \u003d command.indexOf(\"i/\") + 2;","lastModifiedDate":"2024-03-27"},{"lineNumber":509,"author":{"gitId":"claribelho"},"content":"        if (intensityIndex \u003e\u003d command.length() || durationIndex \u003c descriptionIndex || intensityIndex \u003c descriptionIndex","lastModifiedDate":"2024-04-02"},{"lineNumber":510,"author":{"gitId":"claribelho"},"content":"                || intensityIndex \u003c durationIndex) {","lastModifiedDate":"2024-04-02"},{"lineNumber":511,"author":{"gitId":"jasonlienardi"},"content":"            throw new IncompleteExerciseException();","lastModifiedDate":"2024-03-27"},{"lineNumber":512,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":513,"author":{"gitId":"jasonlienardi"},"content":"        exerciseDescription \u003d command.substring(descriptionIndex, durationIndex - 2).trim().toLowerCase();","lastModifiedDate":"2024-03-27"},{"lineNumber":514,"author":{"gitId":"jasonlienardi"},"content":"        if (exerciseDescription.isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":515,"author":{"gitId":"jasonlienardi"},"content":"            throw new IncompleteExerciseException();","lastModifiedDate":"2024-03-27"},{"lineNumber":516,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":517,"author":{"gitId":"jasonlienardi"},"content":"        if (!Exercise.getExerciseDetails().containsKey(exerciseDescription)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":518,"author":{"gitId":"jasonlienardi"},"content":"            throw new UnregisteredExerciseException();","lastModifiedDate":"2024-03-27"},{"lineNumber":519,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":520,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":521,"author":{"gitId":"jasonlienardi"},"content":"        exerciseDuration \u003d Integer.parseInt(command.substring(durationIndex, intensityIndex - 2).trim());","lastModifiedDate":"2024-03-27"},{"lineNumber":522,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkIntegerGreaterThanZero(exerciseDuration);","lastModifiedDate":"2024-03-30"},{"lineNumber":523,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":524,"author":{"gitId":"jasonlienardi"},"content":"        String intensityString \u003d command.substring(intensityIndex).trim().toUpperCase();","lastModifiedDate":"2024-03-27"},{"lineNumber":525,"author":{"gitId":"jasonlienardi"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":526,"author":{"gitId":"jasonlienardi"},"content":"            exerciseIntensity \u003d ExerciseIntensity.valueOf(intensityString);","lastModifiedDate":"2024-03-27"},{"lineNumber":527,"author":{"gitId":"jasonlienardi"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":528,"author":{"gitId":"jasonlienardi"},"content":"            throw new IncompleteExerciseException(); // Invalid intensity","lastModifiedDate":"2024-03-27"},{"lineNumber":529,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":530,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":531,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":532,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":533,"author":{"gitId":"edwardhumi"},"content":"     * Parses the nutrient information for a meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":534,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":535,"author":{"gitId":"edwardhumi"},"content":"     * @param data The nutrient data string to be parsed.","lastModifiedDate":"2024-04-02"},{"lineNumber":536,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":537,"author":{"gitId":"jasonlienardi"},"content":"    public static void parseMealNutrient(String data) throws  IllegalArgumentException, NegativeValueException{","lastModifiedDate":"2024-04-02"},{"lineNumber":538,"author":{"gitId":"edwardhumi"},"content":"        String delimiter \u003d \",\";","lastModifiedDate":"2024-03-31"},{"lineNumber":539,"author":{"gitId":"edwardhumi"},"content":"        String[] arrayOfMealNutrient \u003d data.split(delimiter);","lastModifiedDate":"2024-03-31"},{"lineNumber":540,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":541,"author":{"gitId":"jasonlienardi"},"content":"        if (arrayOfMealNutrient.length !\u003d 7) {","lastModifiedDate":"2024-04-02"},{"lineNumber":542,"author":{"gitId":"jasonlienardi"},"content":"            throw new IllegalArgumentException(\"Invalid number of arguments provided. Expected 7, got \"","lastModifiedDate":"2024-04-02"},{"lineNumber":543,"author":{"gitId":"jasonlienardi"},"content":"                    + arrayOfMealNutrient.length);","lastModifiedDate":"2024-04-02"},{"lineNumber":544,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":545,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":546,"author":{"gitId":"jasonlienardi"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":547,"author":{"gitId":"edwardhumi"},"content":"            mealNutrientDescription \u003d arrayOfMealNutrient[0].trim().toLowerCase();","lastModifiedDate":"2024-03-31"},{"lineNumber":548,"author":{"gitId":"edwardhumi"},"content":"            mealNutrientCalories \u003d Integer.parseInt(arrayOfMealNutrient[1]);","lastModifiedDate":"2024-03-31"},{"lineNumber":549,"author":{"gitId":"edwardhumi"},"content":"            mealNutrientCarbs \u003d Integer.parseInt(arrayOfMealNutrient[2]);","lastModifiedDate":"2024-03-31"},{"lineNumber":550,"author":{"gitId":"edwardhumi"},"content":"            mealNutrientProtein \u003d Integer.parseInt(arrayOfMealNutrient[3]);","lastModifiedDate":"2024-03-31"},{"lineNumber":551,"author":{"gitId":"edwardhumi"},"content":"            mealNutrientFat \u003d Integer.parseInt(arrayOfMealNutrient[4]);","lastModifiedDate":"2024-03-31"},{"lineNumber":552,"author":{"gitId":"edwardhumi"},"content":"            mealNutrientFiber \u003d Integer.parseInt(arrayOfMealNutrient[5]);","lastModifiedDate":"2024-03-31"},{"lineNumber":553,"author":{"gitId":"edwardhumi"},"content":"            mealNutrientSugar \u003d Integer.parseInt(arrayOfMealNutrient[6]);","lastModifiedDate":"2024-03-31"},{"lineNumber":554,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":555,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(mealNutrientCalories);","lastModifiedDate":"2024-04-02"},{"lineNumber":556,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(mealNutrientCarbs);","lastModifiedDate":"2024-04-02"},{"lineNumber":557,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(mealNutrientProtein);","lastModifiedDate":"2024-04-02"},{"lineNumber":558,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(mealNutrientFat);","lastModifiedDate":"2024-04-02"},{"lineNumber":559,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(mealNutrientFiber);","lastModifiedDate":"2024-04-02"},{"lineNumber":560,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(mealNutrientSugar);","lastModifiedDate":"2024-04-02"},{"lineNumber":561,"author":{"gitId":"jasonlienardi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":562,"author":{"gitId":"jasonlienardi"},"content":"            throw new IllegalArgumentException(\"Invalid numeric format, please input an integer\");","lastModifiedDate":"2024-04-02"},{"lineNumber":563,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":564,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":565,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":566,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":567,"author":{"gitId":"edwardhumi"},"content":"     * Parses the nutrient information for a drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":568,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":569,"author":{"gitId":"edwardhumi"},"content":"     * @param data The nutrient data string to be parsed.","lastModifiedDate":"2024-04-02"},{"lineNumber":570,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":571,"author":{"gitId":"jasonlienardi"},"content":"    public static void parseDrinkNutrient(String data) throws  IllegalArgumentException, NegativeValueException {","lastModifiedDate":"2024-04-02"},{"lineNumber":572,"author":{"gitId":"edwardhumi"},"content":"        String delimiter \u003d \",\";","lastModifiedDate":"2024-03-31"},{"lineNumber":573,"author":{"gitId":"edwardhumi"},"content":"        String[] arrayOfDrinkNutrient \u003d data.split(delimiter);","lastModifiedDate":"2024-03-31"},{"lineNumber":574,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":575,"author":{"gitId":"jasonlienardi"},"content":"        if (arrayOfDrinkNutrient.length !\u003d 6) {","lastModifiedDate":"2024-04-02"},{"lineNumber":576,"author":{"gitId":"jasonlienardi"},"content":"            throw new IllegalArgumentException(\"Invalid number of arguments provided. Expected 6, got \"","lastModifiedDate":"2024-04-02"},{"lineNumber":577,"author":{"gitId":"jasonlienardi"},"content":"                    + arrayOfDrinkNutrient.length);","lastModifiedDate":"2024-04-02"},{"lineNumber":578,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":579,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":580,"author":{"gitId":"jasonlienardi"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":581,"author":{"gitId":"edwardhumi"},"content":"            drinkNutrientDescription \u003d arrayOfDrinkNutrient[0].trim().toLowerCase();","lastModifiedDate":"2024-03-31"},{"lineNumber":582,"author":{"gitId":"edwardhumi"},"content":"            drinkNutrientCalories \u003d Integer.parseInt(arrayOfDrinkNutrient[1]);","lastModifiedDate":"2024-03-31"},{"lineNumber":583,"author":{"gitId":"edwardhumi"},"content":"            drinkNutrientCarbs \u003d Integer.parseInt(arrayOfDrinkNutrient[2]);","lastModifiedDate":"2024-03-31"},{"lineNumber":584,"author":{"gitId":"edwardhumi"},"content":"            drinkNutrientSugar \u003d Integer.parseInt(arrayOfDrinkNutrient[3]);","lastModifiedDate":"2024-03-31"},{"lineNumber":585,"author":{"gitId":"edwardhumi"},"content":"            drinkNutrientProtein \u003d Integer.parseInt(arrayOfDrinkNutrient[4]);","lastModifiedDate":"2024-03-31"},{"lineNumber":586,"author":{"gitId":"edwardhumi"},"content":"            drinkNutrientFat \u003d Integer.parseInt(arrayOfDrinkNutrient[5]);","lastModifiedDate":"2024-03-31"},{"lineNumber":587,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":588,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(drinkNutrientCalories);","lastModifiedDate":"2024-04-02"},{"lineNumber":589,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(drinkNutrientCarbs);","lastModifiedDate":"2024-04-02"},{"lineNumber":590,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(drinkNutrientSugar);","lastModifiedDate":"2024-04-02"},{"lineNumber":591,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(drinkNutrientProtein);","lastModifiedDate":"2024-04-02"},{"lineNumber":592,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(drinkNutrientFat);","lastModifiedDate":"2024-04-02"},{"lineNumber":593,"author":{"gitId":"jasonlienardi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":594,"author":{"gitId":"jasonlienardi"},"content":"            throw new IllegalArgumentException(\"Invalid numeric format, please input an integer\");","lastModifiedDate":"2024-04-02"},{"lineNumber":595,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":596,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":597,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":598,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":599,"author":{"gitId":"edwardhumi"},"content":"     * Parses the calorie information for an exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":600,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":601,"author":{"gitId":"edwardhumi"},"content":"     * @param data The calorie data string to be parsed.","lastModifiedDate":"2024-04-02"},{"lineNumber":602,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":603,"author":{"gitId":"edwardhumi"},"content":"    public static void parseExerciseCalories(String data) {","lastModifiedDate":"2024-04-01"},{"lineNumber":604,"author":{"gitId":"edwardhumi"},"content":"        String delimiter \u003d \",\";","lastModifiedDate":"2024-04-01"},{"lineNumber":605,"author":{"gitId":"edwardhumi"},"content":"        String[] arrayOfExerciseCalories \u003d data.split(delimiter);","lastModifiedDate":"2024-04-01"},{"lineNumber":606,"author":{"gitId":"edwardhumi"},"content":"        exerciseCaloriesDescription \u003d arrayOfExerciseCalories[0].trim().toLowerCase();","lastModifiedDate":"2024-04-01"},{"lineNumber":607,"author":{"gitId":"edwardhumi"},"content":"        exerciseCaloriesHigh \u003d Integer.parseInt(arrayOfExerciseCalories[1]);","lastModifiedDate":"2024-04-01"},{"lineNumber":608,"author":{"gitId":"edwardhumi"},"content":"        exerciseCaloriesMedium \u003d Integer.parseInt(arrayOfExerciseCalories[2]);","lastModifiedDate":"2024-04-01"},{"lineNumber":609,"author":{"gitId":"edwardhumi"},"content":"        exerciseCaloriesLow \u003d Integer.parseInt(arrayOfExerciseCalories[3]);","lastModifiedDate":"2024-04-01"},{"lineNumber":610,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":611,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":612,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":613,"author":{"gitId":"edwardhumi"},"content":"     * Parses the date from a command string.","lastModifiedDate":"2024-04-02"},{"lineNumber":614,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":615,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":616,"author":{"gitId":"edwardhumi"},"content":"     * @return The parsed date string.","lastModifiedDate":"2024-04-02"},{"lineNumber":617,"author":{"gitId":"edwardhumi"},"content":"     * @throws InvalidDateException If the date format is invalid.","lastModifiedDate":"2024-04-02"},{"lineNumber":618,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":619,"author":{"gitId":"edwardhumi"},"content":"    public static String parseListDate(String command) throws InvalidDateException {","lastModifiedDate":"2024-04-01"},{"lineNumber":620,"author":{"gitId":"edwardhumi"},"content":"        int indexOfDate \u003d command.indexOf(\"d/\") + 2;","lastModifiedDate":"2024-04-01"},{"lineNumber":621,"author":{"gitId":"edwardhumi"},"content":"        String date \u003d command.substring(indexOfDate);","lastModifiedDate":"2024-04-01"},{"lineNumber":622,"author":{"gitId":"edwardhumi"},"content":"        if (Date.isValidDate(date)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":623,"author":{"gitId":"edwardhumi"},"content":"            return date;","lastModifiedDate":"2024-04-01"},{"lineNumber":624,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":625,"author":{"gitId":"edwardhumi"},"content":"        throw new InvalidDateException();","lastModifiedDate":"2024-04-01"},{"lineNumber":626,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":627,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":628,"author":{"gitId":"jasonlienardi"},"content":"    public static void parseNewMeal(String command) throws NegativeValueException {","lastModifiedDate":"2024-04-02"},{"lineNumber":629,"author":{"gitId":"jasonlienardi"},"content":"        String mealNutrients \u003d command.substring(8).trim();","lastModifiedDate":"2024-04-02"},{"lineNumber":630,"author":{"gitId":"jasonlienardi"},"content":"        parseMealNutrient(mealNutrients);","lastModifiedDate":"2024-04-02"},{"lineNumber":631,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":632,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":633,"author":{"gitId":"jasonlienardi"},"content":"    public static void parseNewDrink(String command) throws NegativeValueException {","lastModifiedDate":"2024-04-02"},{"lineNumber":634,"author":{"gitId":"jasonlienardi"},"content":"        String drinkNutrients \u003d command.substring(9).trim();","lastModifiedDate":"2024-04-02"},{"lineNumber":635,"author":{"gitId":"jasonlienardi"},"content":"        parseDrinkNutrient(drinkNutrients);","lastModifiedDate":"2024-04-02"},{"lineNumber":636,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":637,"author":{"gitId":"edwardhumi"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"edwardhumi":320,"jasonlienardi":125,"BryanCastorius":58,"claribelho":134}},{"path":"src/main/java/seedu/fitnus/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edwardhumi"},"content":"package seedu.fitnus.storage;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.user.User;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"edwardhumi"},"content":"import java.io.File;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"edwardhumi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"edwardhumi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"edwardhumi"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"edwardhumi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"edwardhumi"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"edwardhumi"},"content":"public class Storage {","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"edwardhumi"},"content":"    public String textContent;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"edwardhumi"},"content":"    public String folderPath;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"edwardhumi"},"content":"    public String filePath;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"edwardhumi"},"content":"    private User user;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"edwardhumi"},"content":"    public Storage(String folderPath, String filePath) {","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"edwardhumi"},"content":"        this.textContent \u003d \"\";","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"edwardhumi"},"content":"        this.folderPath \u003d folderPath;","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"edwardhumi"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"edwardhumi"},"content":"        assert (filePath !\u003d null \u0026\u0026 !filePath.isEmpty()) : \"File path should not be empty\";","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"edwardhumi"},"content":"        assert (folderPath !\u003d null \u0026\u0026 !folderPath.isEmpty()) : \"Folder path should not be empty\";","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"edwardhumi"},"content":"     * Append the contents to a single string that will be saved","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"edwardhumi"},"content":"     * @param content String to be appended","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"edwardhumi"},"content":"    public void appendTextContent(String content) {","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"edwardhumi"},"content":"        textContent +\u003d (content + \u0027\\n\u0027);","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"edwardhumi"},"content":"     * Load the saved file and convert it into list of text formatted commands","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"edwardhumi"},"content":"     * @return List of text formatted commands","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"edwardhumi"},"content":"     * @throws FileNotFoundException If the file does not exist","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"edwardhumi"},"content":"    public ArrayList\u003cString\u003e readFile() throws FileNotFoundException {","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"edwardhumi"},"content":"        assert (filePath !\u003d null \u0026\u0026 !filePath.isEmpty()) : \"File path should not be empty\";","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"edwardhumi"},"content":"        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"edwardhumi"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"edwardhumi"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"edwardhumi"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"edwardhumi"},"content":"            input.add(s.nextLine());","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"edwardhumi"},"content":"        s.close();","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"edwardhumi"},"content":"        return input;","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"edwardhumi"},"content":"     * Creates new folder and file if both did not exist","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"edwardhumi"},"content":"    public void createFile() {","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"edwardhumi"},"content":"            File dataFolder \u003d new File(folderPath);","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"edwardhumi"},"content":"            if (!dataFolder.exists()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"edwardhumi"},"content":"                if (!dataFolder.mkdirs()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"edwardhumi"},"content":"                    System.err.println(\"Failed to create data folder.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"edwardhumi"},"content":"            File textFile \u003d new File(filePath);","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"edwardhumi"},"content":"            if (!textFile.createNewFile()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"edwardhumi"},"content":"                System.err.println(\"Failed to create file.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"edwardhumi"},"content":"        } catch (IOException err) {","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"Failed to create file: \" + err.getMessage());","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"edwardhumi"},"content":"     * Write the given string to the text file","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"edwardhumi"},"content":"     * @param textToAdd String to be written","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"edwardhumi"},"content":"     * @throws IOException If there is any error encountered","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"edwardhumi"},"content":"    public void writeFile(String textToAdd) throws IOException {","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"edwardhumi"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"edwardhumi"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"edwardhumi"},"content":"        fw.close();","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"edwardhumi"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"edwardhumi":81}},{"path":"src/main/java/seedu/fitnus/user/User.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.user;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.Date;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.Drink;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.Exercise;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.ExerciseIntensity;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.Meal;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.parser.Parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.Water;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.storage.Storage;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.IncompleteDeleteException;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.IncompleteDrinkException;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.IncompleteEditException;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.IncompleteExerciseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.IncompleteMealException;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.InvalidListIndexException;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.NegativeValueException;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.UnregisteredDrinkException;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.UnregisteredExerciseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.UnregisteredMealException;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.InvalidDateException;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"edwardhumi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"edwardhumi"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"jasonlienardi"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":" * Handles all methods related to the user\u0027s meals, drinks and exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"public class User {","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"BryanCastorius"},"content":"    public static final int RECOMMEND_WATER_INTAKE \u003d 2600;","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"BryanCastorius"},"content":"    public static final int RECOMMEND_CALORIE_INTAKE \u003d 2200;","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"edwardhumi"},"content":"    // list for today","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"    protected static ArrayList\u003cMeal\u003e mealList;","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"    protected static ArrayList\u003cDrink\u003e drinkList;","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"BryanCastorius"},"content":"    protected static ArrayList\u003cWater\u003e waterList;","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"jasonlienardi"},"content":"    protected static ArrayList\u003cExercise\u003e exerciseList;","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"edwardhumi"},"content":"    // list for all dates except today","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"edwardhumi"},"content":"    protected static ArrayList\u003cMeal\u003e mealListAll;","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"edwardhumi"},"content":"    protected static ArrayList\u003cDrink\u003e drinkListAll;","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"edwardhumi"},"content":"    protected static ArrayList\u003cWater\u003e waterListAll;","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"edwardhumi"},"content":"    protected static ArrayList\u003cExercise\u003e exerciseListAll;","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"edwardhumi"},"content":"    public User(Storage mealStorage, Storage drinkStorage, Storage exerciseStorage,","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"edwardhumi"},"content":"                Storage mealNutrientStorage, Storage drinkNutrientStorage, Storage exerciseCaloriesStorage) {","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"jasonlienardi"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"            mealList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"            drinkList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"jasonlienardi"},"content":"            exerciseList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"BryanCastorius"},"content":"            waterList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"edwardhumi"},"content":"            mealListAll \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"edwardhumi"},"content":"            drinkListAll \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"edwardhumi"},"content":"            exerciseListAll \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"edwardhumi"},"content":"            waterListAll \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"edwardhumi"},"content":"            loadMealNutrient(mealNutrientStorage);","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"edwardhumi"},"content":"            loadDrinkNutrient(drinkNutrientStorage);","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"edwardhumi"},"content":"            loadExerciseCalories(exerciseCaloriesStorage);","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"edwardhumi"},"content":"            loadMeal(mealStorage);","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"edwardhumi"},"content":"            loadDrink(drinkStorage);","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"BryanCastorius"},"content":"            loadExercise(exerciseStorage);","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"jasonlienardi"},"content":"        } catch (NegativeValueException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println(\"Nutrient details must be greater than 0\");","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"     * Loads any previously stored mealList from the user and","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"     * adds the saved meals into the ArrayList mealListAll.","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"     * @param mealStorage contains filePath and folderPath of where the saved meals are stored.","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"edwardhumi"},"content":"    public void loadMeal(Storage mealStorage) {","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"edwardhumi"},"content":"            ArrayList\u003cString\u003e mealStorageList \u003d mealStorage.readFile();","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"edwardhumi"},"content":"            if (!mealStorageList.isEmpty()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"edwardhumi"},"content":"                for (String s : mealStorageList) {","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"edwardhumi"},"content":"                    Parser.parseMealStorage(s);","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"edwardhumi"},"content":"                    String mealDescription \u003d Parser.mealStorageDescription;","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"edwardhumi"},"content":"                    int mealSize \u003d Parser.mealStorageSize;","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"                    String currentDate \u003d Parser.mealStorageDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"edwardhumi"},"content":"                    mealListAll.add(new Meal(mealDescription, mealSize, currentDate));","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"edwardhumi"},"content":"            Date currentDate \u003d new Date();","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"edwardhumi"},"content":"            String todayDate \u003d currentDate.getDate();","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"edwardhumi"},"content":"            for (Meal m : mealListAll) {","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"edwardhumi"},"content":"                if (m.getDate().equals(todayDate)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"edwardhumi"},"content":"                    mealList.add(m);","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"edwardhumi"},"content":"            mealListAll.removeAll(mealList);","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"edwardhumi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"edwardhumi"},"content":"            mealStorage.createFile();","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"claribelho"},"content":"     * Loads any previously stored drinkList from the user and","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"claribelho"},"content":"     * adds the saved drinks into the ArrayList drinkListAll.","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"claribelho"},"content":"     * @param drinkStorage contains filePath and folderPath of where the saved drinks are stored.","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"edwardhumi"},"content":"    public void loadDrink(Storage drinkStorage) {","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"edwardhumi"},"content":"            ArrayList\u003cString\u003e drinkStorageList \u003d drinkStorage.readFile();","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"edwardhumi"},"content":"            if (!drinkStorageList.isEmpty()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"edwardhumi"},"content":"                for (String s : drinkStorageList) {","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"edwardhumi"},"content":"                    Parser.parseDrinkStorage(s);","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"edwardhumi"},"content":"                    String drinkDescription \u003d Parser.drinkStorageDescription;","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"claribelho"},"content":"                    String drinkDate \u003d Parser.drinkStorageDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"edwardhumi"},"content":"                    int drinkSize \u003d Parser.drinkStorageSize;","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"edwardhumi"},"content":"                    if (drinkDescription.equals(\"water\")) {","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"edwardhumi"},"content":"                        waterListAll.add(new Water (drinkSize, drinkDate));","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"edwardhumi"},"content":"                    } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"edwardhumi"},"content":"                        drinkListAll.add(new Drink(drinkDescription, drinkSize, drinkDate));","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"edwardhumi"},"content":"                    }","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"edwardhumi"},"content":"            Date currentDate \u003d new Date();","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"edwardhumi"},"content":"            String todayDate \u003d currentDate.getDate();","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"edwardhumi"},"content":"            for (Drink d : drinkListAll) {","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"edwardhumi"},"content":"                if (d.getDate().equals(todayDate)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"edwardhumi"},"content":"                    drinkList.add(d);","lastModifiedDate":"2024-04-01"},{"lineNumber":126,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"edwardhumi"},"content":"            drinkListAll.removeAll(drinkList);","lastModifiedDate":"2024-04-01"},{"lineNumber":129,"author":{"gitId":"edwardhumi"},"content":"            for (Water w : waterListAll) {","lastModifiedDate":"2024-04-01"},{"lineNumber":130,"author":{"gitId":"edwardhumi"},"content":"                if (w.getDate().equals(todayDate)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":131,"author":{"gitId":"edwardhumi"},"content":"                    waterList.add(w);","lastModifiedDate":"2024-04-01"},{"lineNumber":132,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-03-24"},{"lineNumber":133,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":134,"author":{"gitId":"edwardhumi"},"content":"            waterListAll.removeAll(waterList);","lastModifiedDate":"2024-04-01"},{"lineNumber":135,"author":{"gitId":"edwardhumi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"edwardhumi"},"content":"            drinkStorage.createFile();","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":138,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":139,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":140,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"claribelho"},"content":"     * Loads any previously stored exerciseList from the user and","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"claribelho"},"content":"     * adds the saved exercises into the ArrayList exerciseListAll.","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"claribelho"},"content":"     * @param exerciseStorage contains filePath and folderPath of where the saved exerciseList was stored.","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"BryanCastorius"},"content":"    public void loadExercise(Storage exerciseStorage) {","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"BryanCastorius"},"content":"        try {","lastModifiedDate":"2024-04-01"},{"lineNumber":148,"author":{"gitId":"BryanCastorius"},"content":"            ArrayList\u003cString\u003e exerciseStorageList \u003d exerciseStorage.readFile();","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"BryanCastorius"},"content":"            if (!exerciseStorageList.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"BryanCastorius"},"content":"                for (String s : exerciseStorageList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"BryanCastorius"},"content":"                    Parser.parseExerciseStorage(s);","lastModifiedDate":"2024-04-01"},{"lineNumber":152,"author":{"gitId":"BryanCastorius"},"content":"                    String exerciseDescription \u003d Parser.exerciseStorageDescription;","lastModifiedDate":"2024-04-01"},{"lineNumber":153,"author":{"gitId":"BryanCastorius"},"content":"                    int exerciseDuration \u003d Parser.exerciseStorageDuration;","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"BryanCastorius"},"content":"                    ExerciseIntensity exerciseIntensity \u003d Parser.exerciseStorageIntensity;","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"BryanCastorius"},"content":"                    String currentDate \u003d Parser.exerciseStorageDate;","lastModifiedDate":"2024-04-01"},{"lineNumber":156,"author":{"gitId":"edwardhumi"},"content":"                    exerciseListAll.add(new Exercise(exerciseDescription, exerciseDuration, exerciseIntensity,","lastModifiedDate":"2024-04-01"},{"lineNumber":157,"author":{"gitId":"BryanCastorius"},"content":"                            currentDate));","lastModifiedDate":"2024-04-01"},{"lineNumber":158,"author":{"gitId":"BryanCastorius"},"content":"                }","lastModifiedDate":"2024-04-01"},{"lineNumber":159,"author":{"gitId":"BryanCastorius"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":160,"author":{"gitId":"edwardhumi"},"content":"            Date currentDate \u003d new Date();","lastModifiedDate":"2024-04-01"},{"lineNumber":161,"author":{"gitId":"edwardhumi"},"content":"            String todayDate \u003d currentDate.getDate();","lastModifiedDate":"2024-04-01"},{"lineNumber":162,"author":{"gitId":"edwardhumi"},"content":"            for (Exercise e : exerciseListAll) {","lastModifiedDate":"2024-04-01"},{"lineNumber":163,"author":{"gitId":"edwardhumi"},"content":"                if (e.getDate().equals(todayDate)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":164,"author":{"gitId":"edwardhumi"},"content":"                    exerciseList.add(e);","lastModifiedDate":"2024-04-01"},{"lineNumber":165,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-04-01"},{"lineNumber":166,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":167,"author":{"gitId":"edwardhumi"},"content":"            exerciseListAll.removeAll(exerciseList);","lastModifiedDate":"2024-04-01"},{"lineNumber":168,"author":{"gitId":"BryanCastorius"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":169,"author":{"gitId":"BryanCastorius"},"content":"            exerciseStorage.createFile();","lastModifiedDate":"2024-04-01"},{"lineNumber":170,"author":{"gitId":"BryanCastorius"},"content":"        } catch (UnregisteredExerciseException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":171,"author":{"gitId":"BryanCastorius"},"content":"            System.out.println(\"Sorry that meal is not registered in the database. Please check the spelling and \" +","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"BryanCastorius"},"content":"                    \"try again\");","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":174,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":176,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":177,"author":{"gitId":"claribelho"},"content":"     * Loads the file where pre-defined meals and their nutrient counts are stored.","lastModifiedDate":"2024-04-02"},{"lineNumber":178,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"claribelho"},"content":"     * @param mealNutrientStorage contains filePath and folderPath of where the pre-defined meals are stored.","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":181,"author":{"gitId":"jasonlienardi"},"content":"    public void loadMealNutrient(Storage mealNutrientStorage) throws NegativeValueException{","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":183,"author":{"gitId":"edwardhumi"},"content":"            ArrayList\u003cString\u003e mealNutrientList \u003d mealNutrientStorage.readFile();","lastModifiedDate":"2024-03-31"},{"lineNumber":184,"author":{"gitId":"edwardhumi"},"content":"            if (!mealNutrientList.isEmpty()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":185,"author":{"gitId":"edwardhumi"},"content":"                for (String s : mealNutrientList) {","lastModifiedDate":"2024-03-31"},{"lineNumber":186,"author":{"gitId":"edwardhumi"},"content":"                    Parser.parseMealNutrient(s);","lastModifiedDate":"2024-03-31"},{"lineNumber":187,"author":{"gitId":"edwardhumi"},"content":"                    String description \u003d Parser.mealNutrientDescription;","lastModifiedDate":"2024-03-31"},{"lineNumber":188,"author":{"gitId":"edwardhumi"},"content":"                    int calories \u003d Parser.mealNutrientCalories;","lastModifiedDate":"2024-03-31"},{"lineNumber":189,"author":{"gitId":"edwardhumi"},"content":"                    int carbs \u003d Parser.mealNutrientCarbs;","lastModifiedDate":"2024-03-31"},{"lineNumber":190,"author":{"gitId":"edwardhumi"},"content":"                    int protein \u003d Parser.mealNutrientProtein;","lastModifiedDate":"2024-03-31"},{"lineNumber":191,"author":{"gitId":"edwardhumi"},"content":"                    int fat \u003d Parser.mealNutrientFat;","lastModifiedDate":"2024-03-31"},{"lineNumber":192,"author":{"gitId":"edwardhumi"},"content":"                    int fiber \u003d Parser.mealNutrientFiber;","lastModifiedDate":"2024-03-31"},{"lineNumber":193,"author":{"gitId":"edwardhumi"},"content":"                    int sugar \u003d Parser.mealNutrientSugar;","lastModifiedDate":"2024-03-31"},{"lineNumber":194,"author":{"gitId":"edwardhumi"},"content":"                    Meal.nutrientDetails.put(description, new int[]{calories, carbs, protein, fat, fiber, sugar});","lastModifiedDate":"2024-03-31"},{"lineNumber":195,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-03-31"},{"lineNumber":196,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":197,"author":{"gitId":"edwardhumi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":198,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"Meal nutrient database not found\");","lastModifiedDate":"2024-03-31"},{"lineNumber":199,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":200,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":201,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":202,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"claribelho"},"content":"     * Loads the file where pre-defined drinks and their nutrient counts are stored.","lastModifiedDate":"2024-04-02"},{"lineNumber":204,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":205,"author":{"gitId":"claribelho"},"content":"     * @param drinkNutrientStorage contains filePath and folderPath of where the pre-defined drinks are stored.","lastModifiedDate":"2024-04-02"},{"lineNumber":206,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":207,"author":{"gitId":"jasonlienardi"},"content":"    public void loadDrinkNutrient(Storage drinkNutrientStorage) throws NegativeValueException{","lastModifiedDate":"2024-04-02"},{"lineNumber":208,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":209,"author":{"gitId":"edwardhumi"},"content":"            ArrayList\u003cString\u003e drinkNutrientList \u003d drinkNutrientStorage.readFile();","lastModifiedDate":"2024-03-31"},{"lineNumber":210,"author":{"gitId":"edwardhumi"},"content":"            if (!drinkNutrientList.isEmpty()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":211,"author":{"gitId":"edwardhumi"},"content":"                for (String s : drinkNutrientList) {","lastModifiedDate":"2024-03-31"},{"lineNumber":212,"author":{"gitId":"edwardhumi"},"content":"                    Parser.parseDrinkNutrient(s);","lastModifiedDate":"2024-03-31"},{"lineNumber":213,"author":{"gitId":"edwardhumi"},"content":"                    String description \u003d Parser.drinkNutrientDescription;","lastModifiedDate":"2024-03-31"},{"lineNumber":214,"author":{"gitId":"edwardhumi"},"content":"                    int calories \u003d Parser.drinkNutrientCalories;","lastModifiedDate":"2024-03-31"},{"lineNumber":215,"author":{"gitId":"edwardhumi"},"content":"                    int carbs \u003d Parser.drinkNutrientCarbs;","lastModifiedDate":"2024-03-31"},{"lineNumber":216,"author":{"gitId":"edwardhumi"},"content":"                    int sugar \u003d Parser.drinkNutrientSugar;","lastModifiedDate":"2024-03-31"},{"lineNumber":217,"author":{"gitId":"edwardhumi"},"content":"                    int protein \u003d Parser.drinkNutrientProtein;","lastModifiedDate":"2024-03-31"},{"lineNumber":218,"author":{"gitId":"edwardhumi"},"content":"                    int fat \u003d Parser.drinkNutrientFat;","lastModifiedDate":"2024-03-31"},{"lineNumber":219,"author":{"gitId":"edwardhumi"},"content":"                    Drink.nutrientDetails.put(description, new int[]{calories, carbs, sugar, protein, fat});","lastModifiedDate":"2024-03-31"},{"lineNumber":220,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-03-31"},{"lineNumber":221,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":222,"author":{"gitId":"edwardhumi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":223,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"Drink nutrient database not found\");","lastModifiedDate":"2024-03-31"},{"lineNumber":224,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":225,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":226,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":227,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":228,"author":{"gitId":"claribelho"},"content":"     * Loads the file where pre-defined exercises and the number of calories burnt per minute for","lastModifiedDate":"2024-04-02"},{"lineNumber":229,"author":{"gitId":"claribelho"},"content":"     * respective intensities (HIGH, MEDIUM, LOW) are stored.","lastModifiedDate":"2024-04-02"},{"lineNumber":230,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":231,"author":{"gitId":"claribelho"},"content":"     * @param exerciseCaloriesStorage contains filePath and folderPath of where the pre-defined exercises are stored.","lastModifiedDate":"2024-04-02"},{"lineNumber":232,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":233,"author":{"gitId":"edwardhumi"},"content":"    public void loadExerciseCalories(Storage exerciseCaloriesStorage) {","lastModifiedDate":"2024-04-01"},{"lineNumber":234,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-04-01"},{"lineNumber":235,"author":{"gitId":"edwardhumi"},"content":"            ArrayList\u003cString\u003e exerciseCaloriesList \u003d exerciseCaloriesStorage.readFile();","lastModifiedDate":"2024-04-01"},{"lineNumber":236,"author":{"gitId":"edwardhumi"},"content":"            if (!exerciseCaloriesList.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":237,"author":{"gitId":"edwardhumi"},"content":"                for (String s : exerciseCaloriesList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":238,"author":{"gitId":"edwardhumi"},"content":"                    Parser.parseExerciseCalories(s);","lastModifiedDate":"2024-04-01"},{"lineNumber":239,"author":{"gitId":"edwardhumi"},"content":"                    String description \u003d Parser.exerciseCaloriesDescription;","lastModifiedDate":"2024-04-01"},{"lineNumber":240,"author":{"gitId":"edwardhumi"},"content":"                    int caloriesHigh \u003d Parser.exerciseCaloriesHigh;","lastModifiedDate":"2024-04-01"},{"lineNumber":241,"author":{"gitId":"edwardhumi"},"content":"                    int caloriesMedium \u003d Parser.exerciseCaloriesMedium;","lastModifiedDate":"2024-04-01"},{"lineNumber":242,"author":{"gitId":"edwardhumi"},"content":"                    int caloriesLow \u003d Parser.exerciseCaloriesLow;","lastModifiedDate":"2024-04-01"},{"lineNumber":243,"author":{"gitId":"edwardhumi"},"content":"                    Exercise.exerciseDetails.put(description, new int[]{caloriesHigh, caloriesMedium, caloriesLow});","lastModifiedDate":"2024-04-01"},{"lineNumber":244,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-04-01"},{"lineNumber":245,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":246,"author":{"gitId":"edwardhumi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":247,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"Exercise calories database not found\");","lastModifiedDate":"2024-04-01"},{"lineNumber":248,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":249,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":250,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":251,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":252,"author":{"gitId":"claribelho"},"content":"     * Saves the user\u0027s meals when the user exits the program.","lastModifiedDate":"2024-04-02"},{"lineNumber":253,"author":{"gitId":"claribelho"},"content":"     * Meals from the current day is saved with the date into the .txt file.","lastModifiedDate":"2024-04-02"},{"lineNumber":254,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":255,"author":{"gitId":"claribelho"},"content":"     * @param mealStorage contains filePath and folderPath of where the saved meals are stored.","lastModifiedDate":"2024-04-02"},{"lineNumber":256,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":257,"author":{"gitId":"edwardhumi"},"content":"    public void saveMeal(Storage mealStorage) {","lastModifiedDate":"2024-03-24"},{"lineNumber":258,"author":{"gitId":"edwardhumi"},"content":"        for (Meal meal : mealListAll) {","lastModifiedDate":"2024-04-01"},{"lineNumber":259,"author":{"gitId":"edwardhumi"},"content":"            String mealSavedData \u003d meal.getName() + \",\" + meal.getServingSize() + \",\" + meal.getDate();","lastModifiedDate":"2024-04-01"},{"lineNumber":260,"author":{"gitId":"edwardhumi"},"content":"            mealStorage.appendTextContent(mealSavedData);","lastModifiedDate":"2024-04-01"},{"lineNumber":261,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":262,"author":{"gitId":"edwardhumi"},"content":"        for (Meal meal : mealList) {","lastModifiedDate":"2024-03-24"},{"lineNumber":263,"author":{"gitId":"claribelho"},"content":"            String mealSavedData \u003d meal.getName() + \",\" + meal.getServingSize() + \",\" + meal.getDate();","lastModifiedDate":"2024-03-28"},{"lineNumber":264,"author":{"gitId":"edwardhumi"},"content":"            mealStorage.appendTextContent(mealSavedData);","lastModifiedDate":"2024-03-24"},{"lineNumber":265,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":266,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":267,"author":{"gitId":"edwardhumi"},"content":"            mealStorage.writeFile(mealStorage.textContent);","lastModifiedDate":"2024-03-24"},{"lineNumber":268,"author":{"gitId":"edwardhumi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":269,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"Failed saving meal: \" + e.getMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":270,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":271,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":272,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":273,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":274,"author":{"gitId":"claribelho"},"content":"     * Saves the user\u0027s drinks when the user exits the program.","lastModifiedDate":"2024-04-02"},{"lineNumber":275,"author":{"gitId":"claribelho"},"content":"     * MealDrinkss from the current day is saved with the date into the .txt file.","lastModifiedDate":"2024-04-02"},{"lineNumber":276,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":277,"author":{"gitId":"claribelho"},"content":"     * @param drinkStorage contains filePath and folderPath of where the saved drinksList are stored.","lastModifiedDate":"2024-04-02"},{"lineNumber":278,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":279,"author":{"gitId":"edwardhumi"},"content":"    public void saveDrink(Storage drinkStorage) {","lastModifiedDate":"2024-03-24"},{"lineNumber":280,"author":{"gitId":"edwardhumi"},"content":"        for (Water water : waterListAll) {","lastModifiedDate":"2024-04-01"},{"lineNumber":281,"author":{"gitId":"edwardhumi"},"content":"            String waterSavedData \u003d \"water\" + \",\" + water.getWater() + \",\" + water.getDate();","lastModifiedDate":"2024-04-01"},{"lineNumber":282,"author":{"gitId":"edwardhumi"},"content":"            drinkStorage.appendTextContent(waterSavedData);","lastModifiedDate":"2024-03-24"},{"lineNumber":283,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":284,"author":{"gitId":"BryanCastorius"},"content":"        for (Water water : waterList) {","lastModifiedDate":"2024-03-31"},{"lineNumber":285,"author":{"gitId":"BryanCastorius"},"content":"            String waterSavedData \u003d \"water\" + \",\" + water.getWater() + \",\" + water.getDate();","lastModifiedDate":"2024-03-31"},{"lineNumber":286,"author":{"gitId":"edwardhumi"},"content":"            drinkStorage.appendTextContent(waterSavedData);","lastModifiedDate":"2024-03-24"},{"lineNumber":287,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":288,"author":{"gitId":"edwardhumi"},"content":"        for (Drink drink : drinkListAll) {","lastModifiedDate":"2024-04-01"},{"lineNumber":289,"author":{"gitId":"edwardhumi"},"content":"            String drinkSavedData \u003d drink.getName() + \",\" + drink.getDrinkVolumeSize() + \",\" + drink.getDate();","lastModifiedDate":"2024-04-01"},{"lineNumber":290,"author":{"gitId":"edwardhumi"},"content":"            drinkStorage.appendTextContent(drinkSavedData);","lastModifiedDate":"2024-04-01"},{"lineNumber":291,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":292,"author":{"gitId":"edwardhumi"},"content":"        for (Drink drink : drinkList) {","lastModifiedDate":"2024-03-24"},{"lineNumber":293,"author":{"gitId":"claribelho"},"content":"            String drinkSavedData \u003d drink.getName() + \",\" + drink.getDrinkVolumeSize() + \",\" + drink.getDate();","lastModifiedDate":"2024-03-28"},{"lineNumber":294,"author":{"gitId":"edwardhumi"},"content":"            drinkStorage.appendTextContent(drinkSavedData);","lastModifiedDate":"2024-03-24"},{"lineNumber":295,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":296,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":297,"author":{"gitId":"edwardhumi"},"content":"            drinkStorage.writeFile(drinkStorage.textContent);","lastModifiedDate":"2024-03-24"},{"lineNumber":298,"author":{"gitId":"edwardhumi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":299,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"Failed saving drink: \" + e.getMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":300,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":301,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":302,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":303,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":304,"author":{"gitId":"claribelho"},"content":"     * Saves the user\u0027s exercises when the user exits the program.","lastModifiedDate":"2024-04-02"},{"lineNumber":305,"author":{"gitId":"claribelho"},"content":"     * Exercises from the current day is saved with the date into the .txt file.","lastModifiedDate":"2024-04-02"},{"lineNumber":306,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":307,"author":{"gitId":"claribelho"},"content":"     * @param exerciseStorage contains filePath and folderPath of where the saved exerciseList are stored.","lastModifiedDate":"2024-04-02"},{"lineNumber":308,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":309,"author":{"gitId":"BryanCastorius"},"content":"    public void saveExercise(Storage exerciseStorage) {","lastModifiedDate":"2024-04-01"},{"lineNumber":310,"author":{"gitId":"edwardhumi"},"content":"        for (Exercise exercise : exerciseListAll) {","lastModifiedDate":"2024-04-01"},{"lineNumber":311,"author":{"gitId":"edwardhumi"},"content":"            String exerciseSavedData \u003d exercise.getName() + \",\" + exercise.getDuration() + \",\"","lastModifiedDate":"2024-04-01"},{"lineNumber":312,"author":{"gitId":"edwardhumi"},"content":"                    + exercise.getIntensity() + \",\" + exercise.getDate();","lastModifiedDate":"2024-04-01"},{"lineNumber":313,"author":{"gitId":"edwardhumi"},"content":"            exerciseStorage.appendTextContent(exerciseSavedData);","lastModifiedDate":"2024-04-01"},{"lineNumber":314,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":315,"author":{"gitId":"BryanCastorius"},"content":"        for (Exercise exercise : exerciseList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":316,"author":{"gitId":"BryanCastorius"},"content":"            String exerciseSavedData \u003d exercise.getName() + \",\" + exercise.getDuration() + \",\"","lastModifiedDate":"2024-04-01"},{"lineNumber":317,"author":{"gitId":"BryanCastorius"},"content":"                    + exercise.getIntensity() + \",\" + exercise.getDate();","lastModifiedDate":"2024-04-01"},{"lineNumber":318,"author":{"gitId":"BryanCastorius"},"content":"            exerciseStorage.appendTextContent(exerciseSavedData);","lastModifiedDate":"2024-04-01"},{"lineNumber":319,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":320,"author":{"gitId":"BryanCastorius"},"content":"        try {","lastModifiedDate":"2024-04-01"},{"lineNumber":321,"author":{"gitId":"BryanCastorius"},"content":"            exerciseStorage.writeFile(exerciseStorage.textContent);","lastModifiedDate":"2024-04-01"},{"lineNumber":322,"author":{"gitId":"BryanCastorius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":323,"author":{"gitId":"BryanCastorius"},"content":"            System.out.println(\"Failed saving drink: \" + e.getMessage());","lastModifiedDate":"2024-04-01"},{"lineNumber":324,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":325,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":326,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":327,"author":{"gitId":"jasonlienardi"},"content":"    public void saveMealNutrients(Storage mealNutrientStorage) {","lastModifiedDate":"2024-04-02"},{"lineNumber":328,"author":{"gitId":"jasonlienardi"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-04-02"},{"lineNumber":329,"author":{"gitId":"jasonlienardi"},"content":"        for (Map.Entry\u003cString, int[]\u003e entry : Meal.nutrientDetails.entrySet()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":330,"author":{"gitId":"jasonlienardi"},"content":"            result.append(entry.getKey()).append(\",\");","lastModifiedDate":"2024-04-02"},{"lineNumber":331,"author":{"gitId":"jasonlienardi"},"content":"            int[] values \u003d entry.getValue();","lastModifiedDate":"2024-04-02"},{"lineNumber":332,"author":{"gitId":"jasonlienardi"},"content":"            for (int value : values) {","lastModifiedDate":"2024-04-02"},{"lineNumber":333,"author":{"gitId":"jasonlienardi"},"content":"                result.append(value).append(\",\");","lastModifiedDate":"2024-04-02"},{"lineNumber":334,"author":{"gitId":"jasonlienardi"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":335,"author":{"gitId":"jasonlienardi"},"content":"            result \u003d new StringBuilder(result.substring(0, result.length() - 1));","lastModifiedDate":"2024-04-02"},{"lineNumber":336,"author":{"gitId":"jasonlienardi"},"content":"            result.append(\"\\n\");","lastModifiedDate":"2024-04-02"},{"lineNumber":337,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":338,"author":{"gitId":"jasonlienardi"},"content":"        mealNutrientStorage.appendTextContent(result.toString());","lastModifiedDate":"2024-04-02"},{"lineNumber":339,"author":{"gitId":"jasonlienardi"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":340,"author":{"gitId":"jasonlienardi"},"content":"            mealNutrientStorage.writeFile(mealNutrientStorage.textContent);","lastModifiedDate":"2024-04-02"},{"lineNumber":341,"author":{"gitId":"jasonlienardi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":342,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println(\"Failed adding meal nutrients: \" + e.getMessage());","lastModifiedDate":"2024-04-02"},{"lineNumber":343,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":344,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":345,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":346,"author":{"gitId":"jasonlienardi"},"content":"    public void saveDrinkNutrients(Storage drinkNutrientStorage) {","lastModifiedDate":"2024-04-02"},{"lineNumber":347,"author":{"gitId":"jasonlienardi"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-04-02"},{"lineNumber":348,"author":{"gitId":"jasonlienardi"},"content":"        for (Map.Entry\u003cString, int[]\u003e entry : Drink.nutrientDetails.entrySet()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":349,"author":{"gitId":"jasonlienardi"},"content":"            result.append(entry.getKey()).append(\",\");","lastModifiedDate":"2024-04-02"},{"lineNumber":350,"author":{"gitId":"jasonlienardi"},"content":"            int[] values \u003d entry.getValue();","lastModifiedDate":"2024-04-02"},{"lineNumber":351,"author":{"gitId":"jasonlienardi"},"content":"            for (int value : values) {","lastModifiedDate":"2024-04-02"},{"lineNumber":352,"author":{"gitId":"jasonlienardi"},"content":"                result.append(value).append(\",\");","lastModifiedDate":"2024-04-02"},{"lineNumber":353,"author":{"gitId":"jasonlienardi"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":354,"author":{"gitId":"jasonlienardi"},"content":"            result \u003d new StringBuilder(result.substring(0, result.length() - 1));","lastModifiedDate":"2024-04-02"},{"lineNumber":355,"author":{"gitId":"jasonlienardi"},"content":"            result.append(\"\\n\");","lastModifiedDate":"2024-04-02"},{"lineNumber":356,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":357,"author":{"gitId":"jasonlienardi"},"content":"        drinkNutrientStorage.appendTextContent(result.toString());","lastModifiedDate":"2024-04-02"},{"lineNumber":358,"author":{"gitId":"jasonlienardi"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":359,"author":{"gitId":"jasonlienardi"},"content":"            drinkNutrientStorage.writeFile(drinkNutrientStorage.textContent);","lastModifiedDate":"2024-04-02"},{"lineNumber":360,"author":{"gitId":"jasonlienardi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":361,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println(\"Failed adding drink nutrients: \" + e.getMessage());","lastModifiedDate":"2024-04-02"},{"lineNumber":362,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":363,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":364,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":365,"author":{"gitId":"jasonlienardi"},"content":"    public void handleAddNewMealNutrient(String command) throws NegativeValueException{","lastModifiedDate":"2024-04-02"},{"lineNumber":366,"author":{"gitId":"jasonlienardi"},"content":"        Parser.parseNewMeal(command);","lastModifiedDate":"2024-04-02"},{"lineNumber":367,"author":{"gitId":"jasonlienardi"},"content":"        String description \u003d Parser.mealNutrientDescription;","lastModifiedDate":"2024-04-02"},{"lineNumber":368,"author":{"gitId":"jasonlienardi"},"content":"        int calories \u003d Parser.mealNutrientCalories;","lastModifiedDate":"2024-04-02"},{"lineNumber":369,"author":{"gitId":"jasonlienardi"},"content":"        int carbs \u003d Parser.mealNutrientCarbs;","lastModifiedDate":"2024-04-02"},{"lineNumber":370,"author":{"gitId":"jasonlienardi"},"content":"        int protein \u003d Parser.mealNutrientProtein;","lastModifiedDate":"2024-04-02"},{"lineNumber":371,"author":{"gitId":"jasonlienardi"},"content":"        int fat \u003d Parser.mealNutrientFat;","lastModifiedDate":"2024-04-02"},{"lineNumber":372,"author":{"gitId":"jasonlienardi"},"content":"        int fiber \u003d Parser.mealNutrientFiber;","lastModifiedDate":"2024-04-02"},{"lineNumber":373,"author":{"gitId":"jasonlienardi"},"content":"        int sugar \u003d Parser.mealNutrientSugar;","lastModifiedDate":"2024-04-02"},{"lineNumber":374,"author":{"gitId":"jasonlienardi"},"content":"        Meal.nutrientDetails.put(description, new int[]{calories, carbs, protein, fat, fiber, sugar});","lastModifiedDate":"2024-04-02"},{"lineNumber":375,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":376,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Added \" + description + \" to available meals\");","lastModifiedDate":"2024-04-02"},{"lineNumber":377,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":378,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":379,"author":{"gitId":"jasonlienardi"},"content":"    public void handleAddNewDrinkNutrient(String command) throws NegativeValueException{","lastModifiedDate":"2024-04-02"},{"lineNumber":380,"author":{"gitId":"jasonlienardi"},"content":"        Parser.parseNewDrink(command);","lastModifiedDate":"2024-04-02"},{"lineNumber":381,"author":{"gitId":"jasonlienardi"},"content":"        String description \u003d Parser.drinkNutrientDescription;","lastModifiedDate":"2024-04-02"},{"lineNumber":382,"author":{"gitId":"jasonlienardi"},"content":"        int calories \u003d Parser.drinkNutrientCalories;","lastModifiedDate":"2024-04-02"},{"lineNumber":383,"author":{"gitId":"jasonlienardi"},"content":"        int carbs \u003d Parser.drinkNutrientCarbs;","lastModifiedDate":"2024-04-02"},{"lineNumber":384,"author":{"gitId":"jasonlienardi"},"content":"        int sugar \u003d Parser.drinkNutrientSugar;","lastModifiedDate":"2024-04-02"},{"lineNumber":385,"author":{"gitId":"jasonlienardi"},"content":"        int protein \u003d Parser.drinkNutrientProtein;","lastModifiedDate":"2024-04-02"},{"lineNumber":386,"author":{"gitId":"jasonlienardi"},"content":"        int fat \u003d Parser.drinkNutrientFat;","lastModifiedDate":"2024-04-02"},{"lineNumber":387,"author":{"gitId":"jasonlienardi"},"content":"        Drink.nutrientDetails.put(description, new int[]{calories, carbs, sugar, protein, fat});","lastModifiedDate":"2024-04-02"},{"lineNumber":388,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":389,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Added \" + description + \" to available drinks\");","lastModifiedDate":"2024-04-02"},{"lineNumber":390,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":391,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":392,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":393,"author":{"gitId":"claribelho"},"content":"     * Adds a meal to the user\u0027s current mealList, based on what the user has eaten and the serving size consumed.","lastModifiedDate":"2024-04-02"},{"lineNumber":394,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":395,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by the user, containing the meal they ate and its serving size","lastModifiedDate":"2024-04-02"},{"lineNumber":396,"author":{"gitId":"claribelho"},"content":"     * @throws IncompleteMealException if the user did not comply with the required format","lastModifiedDate":"2024-04-02"},{"lineNumber":397,"author":{"gitId":"claribelho"},"content":"     * @throws UnregisteredMealException if the user has inputted a meal that was not pre-defined","lastModifiedDate":"2024-04-02"},{"lineNumber":398,"author":{"gitId":"claribelho"},"content":"     * @throws NegativeValueException if the provided serving size is a negative value","lastModifiedDate":"2024-04-02"},{"lineNumber":399,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":400,"author":{"gitId":"jasonlienardi"},"content":"    public void handleMeal(String command) throws IncompleteMealException, UnregisteredMealException,","lastModifiedDate":"2024-04-01"},{"lineNumber":401,"author":{"gitId":"claribelho"},"content":"            NegativeValueException {","lastModifiedDate":"2024-03-30"},{"lineNumber":402,"author":{"gitId":"claribelho"},"content":"        Parser.parseMeal(command);","lastModifiedDate":"2024-03-18"},{"lineNumber":403,"author":{"gitId":"claribelho"},"content":"        String mealName \u003d Parser.mealDescription;","lastModifiedDate":"2024-03-18"},{"lineNumber":404,"author":{"gitId":"claribelho"},"content":"        int servingSize \u003d Parser.mealSize;","lastModifiedDate":"2024-03-18"},{"lineNumber":405,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":406,"author":{"gitId":"claribelho"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2024-03-28"},{"lineNumber":407,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":408,"author":{"gitId":"claribelho"},"content":"        mealList.add(new Meal(mealName, servingSize, currentDate.getDate()));","lastModifiedDate":"2024-03-28"},{"lineNumber":409,"author":{"gitId":"claribelho"},"content":"        assert !mealList.isEmpty(): \"failed to add meal\";","lastModifiedDate":"2024-03-19"},{"lineNumber":410,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":411,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Added \" + servingSize + \" serving of \" + mealName);","lastModifiedDate":"2024-03-18"},{"lineNumber":412,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":413,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":414,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":415,"author":{"gitId":"claribelho"},"content":"     * Adds a drink to the user\u0027s current drinkList, based on what the user has drank and the serving size consumed.","lastModifiedDate":"2024-04-02"},{"lineNumber":416,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":417,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by the user, containing the drink they consumed and its serving size","lastModifiedDate":"2024-04-02"},{"lineNumber":418,"author":{"gitId":"claribelho"},"content":"     * @throws IncompleteDrinkException if the user did not comply with the required format","lastModifiedDate":"2024-04-02"},{"lineNumber":419,"author":{"gitId":"claribelho"},"content":"     * @throws UnregisteredDrinkException if the user has inputted a drink that was not pre-defined","lastModifiedDate":"2024-04-02"},{"lineNumber":420,"author":{"gitId":"claribelho"},"content":"     * @throws NegativeValueException if the provided serving size is a negative value","lastModifiedDate":"2024-04-02"},{"lineNumber":421,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":422,"author":{"gitId":"claribelho"},"content":"    public void handleDrink(String command) throws IncompleteDrinkException, UnregisteredDrinkException,","lastModifiedDate":"2024-03-28"},{"lineNumber":423,"author":{"gitId":"claribelho"},"content":"            NegativeValueException {","lastModifiedDate":"2024-03-30"},{"lineNumber":424,"author":{"gitId":"claribelho"},"content":"        Parser.parseDrink(command);","lastModifiedDate":"2024-03-18"},{"lineNumber":425,"author":{"gitId":"claribelho"},"content":"        String drinkName \u003d Parser.drinkDescription;","lastModifiedDate":"2024-03-18"},{"lineNumber":426,"author":{"gitId":"claribelho"},"content":"        int servingSize \u003d Parser.drinkSize;","lastModifiedDate":"2024-03-18"},{"lineNumber":427,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":428,"author":{"gitId":"claribelho"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2024-03-28"},{"lineNumber":429,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":430,"author":{"gitId":"BryanCastorius"},"content":"        boolean waterExist \u003d false; //Water intake for today does not exist flag","lastModifiedDate":"2024-03-31"},{"lineNumber":431,"author":{"gitId":"BryanCastorius"},"content":"        if (drinkName.equals(\"water\")) {","lastModifiedDate":"2024-03-26"},{"lineNumber":432,"author":{"gitId":"BryanCastorius"},"content":"            for (Water water: waterList) {","lastModifiedDate":"2024-03-31"},{"lineNumber":433,"author":{"gitId":"BryanCastorius"},"content":"                if (currentDate.getDate().equals(water.getDate())) {","lastModifiedDate":"2024-03-31"},{"lineNumber":434,"author":{"gitId":"BryanCastorius"},"content":"                    water.addWaterIntake(servingSize);","lastModifiedDate":"2024-03-31"},{"lineNumber":435,"author":{"gitId":"BryanCastorius"},"content":"                    waterExist \u003d true;","lastModifiedDate":"2024-03-31"},{"lineNumber":436,"author":{"gitId":"BryanCastorius"},"content":"                }","lastModifiedDate":"2024-03-31"},{"lineNumber":437,"author":{"gitId":"BryanCastorius"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":438,"author":{"gitId":"BryanCastorius"},"content":"            if (!waterExist) {","lastModifiedDate":"2024-03-31"},{"lineNumber":439,"author":{"gitId":"BryanCastorius"},"content":"                waterList.add(new Water(servingSize, currentDate.getDate()));","lastModifiedDate":"2024-03-31"},{"lineNumber":440,"author":{"gitId":"BryanCastorius"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":441,"author":{"gitId":"BryanCastorius"},"content":"        } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":442,"author":{"gitId":"claribelho"},"content":"            drinkList.add(new Drink(drinkName, servingSize, currentDate.getDate()));","lastModifiedDate":"2024-03-28"},{"lineNumber":443,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":444,"author":{"gitId":"BryanCastorius"},"content":"        System.out.println(\"Added \" + servingSize + \" ml of \" + drinkName);","lastModifiedDate":"2024-03-26"},{"lineNumber":445,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":446,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":447,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":448,"author":{"gitId":"claribelho"},"content":"     * Prints the user\u0027s total calorie intake of the day.","lastModifiedDate":"2024-04-02"},{"lineNumber":449,"author":{"gitId":"claribelho"},"content":"     * The method sums up the calories from meals and drinks, and subtracts calories burnt from exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":450,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":451,"author":{"gitId":"jasonlienardi"},"content":"    public void handleViewCalories() {","lastModifiedDate":"2024-03-18"},{"lineNumber":452,"author":{"gitId":"claribelho"},"content":"        int caloriesCount \u003d 0;","lastModifiedDate":"2024-03-18"},{"lineNumber":453,"author":{"gitId":"claribelho"},"content":"        for (Meal meal: mealList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":454,"author":{"gitId":"claribelho"},"content":"            caloriesCount +\u003d meal.getCalories();","lastModifiedDate":"2024-03-18"},{"lineNumber":455,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":456,"author":{"gitId":"claribelho"},"content":"        for (Drink drink: drinkList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":457,"author":{"gitId":"claribelho"},"content":"            caloriesCount +\u003d drink.getCalories();","lastModifiedDate":"2024-03-18"},{"lineNumber":458,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":459,"author":{"gitId":"claribelho"},"content":"        for (Exercise exercise: exerciseList) {","lastModifiedDate":"2024-03-30"},{"lineNumber":460,"author":{"gitId":"claribelho"},"content":"            caloriesCount -\u003d exercise.getCaloriesBurnt();","lastModifiedDate":"2024-03-30"},{"lineNumber":461,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":462,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Total Calories: \" + caloriesCount);","lastModifiedDate":"2024-03-18"},{"lineNumber":463,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":464,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":465,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":466,"author":{"gitId":"claribelho"},"content":"     * Prints the user\u0027s total carbohydrate intake of the day.","lastModifiedDate":"2024-04-02"},{"lineNumber":467,"author":{"gitId":"claribelho"},"content":"     * The method sums up the carbohydrates from meals and drinks.","lastModifiedDate":"2024-04-02"},{"lineNumber":468,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":469,"author":{"gitId":"jasonlienardi"},"content":"    public void handleViewCarbohydrates() {","lastModifiedDate":"2024-03-18"},{"lineNumber":470,"author":{"gitId":"claribelho"},"content":"        int carbohydratesCount \u003d 0;","lastModifiedDate":"2024-03-18"},{"lineNumber":471,"author":{"gitId":"claribelho"},"content":"        for (Meal meal: mealList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":472,"author":{"gitId":"claribelho"},"content":"            carbohydratesCount +\u003d meal.getCarbs();","lastModifiedDate":"2024-03-18"},{"lineNumber":473,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":474,"author":{"gitId":"claribelho"},"content":"        for (Drink drink: drinkList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":475,"author":{"gitId":"claribelho"},"content":"            carbohydratesCount +\u003d drink.getCarbs();","lastModifiedDate":"2024-03-18"},{"lineNumber":476,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":477,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Total Carbohydrates: \" + carbohydratesCount + \" grams\");","lastModifiedDate":"2024-04-01"},{"lineNumber":478,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":479,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":480,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":481,"author":{"gitId":"claribelho"},"content":"     * Prints the user\u0027s total protein intake of the day.","lastModifiedDate":"2024-04-02"},{"lineNumber":482,"author":{"gitId":"claribelho"},"content":"     * The method sums up the protein from meals and drinks.","lastModifiedDate":"2024-04-02"},{"lineNumber":483,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":484,"author":{"gitId":"jasonlienardi"},"content":"    public void handleViewProteins() {","lastModifiedDate":"2024-03-18"},{"lineNumber":485,"author":{"gitId":"claribelho"},"content":"        int proteinCount \u003d 0;","lastModifiedDate":"2024-03-18"},{"lineNumber":486,"author":{"gitId":"claribelho"},"content":"        for (Meal meal: mealList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":487,"author":{"gitId":"claribelho"},"content":"            proteinCount +\u003d meal.getProtein();","lastModifiedDate":"2024-03-18"},{"lineNumber":488,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":489,"author":{"gitId":"claribelho"},"content":"        for (Drink drink: drinkList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":490,"author":{"gitId":"claribelho"},"content":"            proteinCount +\u003d drink.getProtein();","lastModifiedDate":"2024-03-18"},{"lineNumber":491,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":492,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Total Proteins: \" + proteinCount + \" grams\");","lastModifiedDate":"2024-04-01"},{"lineNumber":493,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":494,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":495,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":496,"author":{"gitId":"claribelho"},"content":"     * Prints the user\u0027s total water intake of the day.","lastModifiedDate":"2024-04-02"},{"lineNumber":497,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":498,"author":{"gitId":"jasonlienardi"},"content":"    public void handleViewWaterIntake() {","lastModifiedDate":"2024-03-18"},{"lineNumber":499,"author":{"gitId":"jasonlienardi"},"content":"        int waterIntake \u003d 0;","lastModifiedDate":"2024-03-18"},{"lineNumber":500,"author":{"gitId":"BryanCastorius"},"content":"        for (Water water: waterList) {","lastModifiedDate":"2024-03-31"},{"lineNumber":501,"author":{"gitId":"BryanCastorius"},"content":"            waterIntake +\u003d water.getWater();","lastModifiedDate":"2024-03-31"},{"lineNumber":502,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":503,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Total water intake today: \" + waterIntake + \" ml\");","lastModifiedDate":"2024-04-02"},{"lineNumber":504,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":505,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":506,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":507,"author":{"gitId":"claribelho"},"content":"     * Prints the user\u0027s total fiber intake of the day.","lastModifiedDate":"2024-04-02"},{"lineNumber":508,"author":{"gitId":"claribelho"},"content":"     * The method sums up the fiber from meals.","lastModifiedDate":"2024-04-02"},{"lineNumber":509,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":510,"author":{"gitId":"jasonlienardi"},"content":"    public void handleViewFiber() {","lastModifiedDate":"2024-03-27"},{"lineNumber":511,"author":{"gitId":"claribelho"},"content":"        int fibreCount \u003d 0;","lastModifiedDate":"2024-03-18"},{"lineNumber":512,"author":{"gitId":"claribelho"},"content":"        for (Meal meal: mealList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":513,"author":{"gitId":"claribelho"},"content":"            fibreCount +\u003d meal.getFiber();","lastModifiedDate":"2024-03-18"},{"lineNumber":514,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":515,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Total Fiber: \" + fibreCount + \" grams\");","lastModifiedDate":"2024-04-01"},{"lineNumber":516,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":517,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":518,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":519,"author":{"gitId":"claribelho"},"content":"     * Prints the user\u0027s total fat intake of the day.","lastModifiedDate":"2024-04-02"},{"lineNumber":520,"author":{"gitId":"claribelho"},"content":"     * The method sums up the fat from meals and drinks.","lastModifiedDate":"2024-04-02"},{"lineNumber":521,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":522,"author":{"gitId":"jasonlienardi"},"content":"    public void handleViewFat() {","lastModifiedDate":"2024-03-18"},{"lineNumber":523,"author":{"gitId":"jasonlienardi"},"content":"        int fatCount \u003d 0;","lastModifiedDate":"2024-03-18"},{"lineNumber":524,"author":{"gitId":"jasonlienardi"},"content":"        for (Meal meal: mealList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":525,"author":{"gitId":"jasonlienardi"},"content":"            fatCount +\u003d meal.getFat();","lastModifiedDate":"2024-03-18"},{"lineNumber":526,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":527,"author":{"gitId":"jasonlienardi"},"content":"        for (Drink drink: drinkList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":528,"author":{"gitId":"jasonlienardi"},"content":"            fatCount +\u003d drink.getFat();","lastModifiedDate":"2024-03-18"},{"lineNumber":529,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":530,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Total Fat: \" + fatCount + \" grams\");","lastModifiedDate":"2024-04-01"},{"lineNumber":531,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":532,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":533,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":534,"author":{"gitId":"claribelho"},"content":"     * Prints the user\u0027s total sugar intake of the day.","lastModifiedDate":"2024-04-02"},{"lineNumber":535,"author":{"gitId":"claribelho"},"content":"     * The method sums up the sugar from meals and drinks.","lastModifiedDate":"2024-04-02"},{"lineNumber":536,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":537,"author":{"gitId":"jasonlienardi"},"content":"    public void handleViewSugar() {","lastModifiedDate":"2024-03-18"},{"lineNumber":538,"author":{"gitId":"jasonlienardi"},"content":"        int sugarCount \u003d 0;","lastModifiedDate":"2024-03-18"},{"lineNumber":539,"author":{"gitId":"jasonlienardi"},"content":"        for (Meal meal: mealList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":540,"author":{"gitId":"jasonlienardi"},"content":"            sugarCount +\u003d meal.getSugar();","lastModifiedDate":"2024-03-18"},{"lineNumber":541,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":542,"author":{"gitId":"jasonlienardi"},"content":"        for (Drink drink: drinkList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":543,"author":{"gitId":"jasonlienardi"},"content":"            sugarCount +\u003d drink.getSugar();","lastModifiedDate":"2024-03-18"},{"lineNumber":544,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":545,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Total Sugar: \" + sugarCount + \" grams\");","lastModifiedDate":"2024-04-01"},{"lineNumber":546,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":547,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":548,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":549,"author":{"gitId":"claribelho"},"content":"     * Prints all the meals in the mealListToPrint,","lastModifiedDate":"2024-04-02"},{"lineNumber":550,"author":{"gitId":"claribelho"},"content":"     * inclusive of the serving size and date.","lastModifiedDate":"2024-04-02"},{"lineNumber":551,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":552,"author":{"gitId":"claribelho"},"content":"     * @param startIndex starting integer value when printing the list, where startIndex \u003e\u003d 1","lastModifiedDate":"2024-04-02"},{"lineNumber":553,"author":{"gitId":"claribelho"},"content":"     * @param mealListToPrint arraylist containing the meals that should be printed","lastModifiedDate":"2024-04-02"},{"lineNumber":554,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":555,"author":{"gitId":"edwardhumi"},"content":"    public void printMealList(int startIndex, ArrayList\u003cMeal\u003e mealListToPrint) {","lastModifiedDate":"2024-03-31"},{"lineNumber":556,"author":{"gitId":"edwardhumi"},"content":"        for (int i \u003d 0; i \u003c mealListToPrint.size(); i++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":557,"author":{"gitId":"edwardhumi"},"content":"            Meal currentMeal \u003d mealListToPrint.get(i);","lastModifiedDate":"2024-03-31"},{"lineNumber":558,"author":{"gitId":"claribelho"},"content":"            System.out.println((startIndex+i) + \". \" + currentMeal.getName() + \" (serving size: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":559,"author":{"gitId":"edwardhumi"},"content":"                    + currentMeal.getServingSize() + \")\" + \" | date: \" + currentMeal.getDate());","lastModifiedDate":"2024-03-31"},{"lineNumber":560,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":561,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":562,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":563,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":564,"author":{"gitId":"claribelho"},"content":"     * Prints all the exercises in the exerciseListToPrint,","lastModifiedDate":"2024-04-02"},{"lineNumber":565,"author":{"gitId":"claribelho"},"content":"     * inclusive of the duration, intensity and date.","lastModifiedDate":"2024-04-02"},{"lineNumber":566,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":567,"author":{"gitId":"claribelho"},"content":"     * @param exerciseListToPrint arraylist containing the exercises that should be printed","lastModifiedDate":"2024-04-02"},{"lineNumber":568,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":569,"author":{"gitId":"edwardhumi"},"content":"    public void printExerciseList(ArrayList\u003cExercise\u003e exerciseListToPrint) {","lastModifiedDate":"2024-04-01"},{"lineNumber":570,"author":{"gitId":"edwardhumi"},"content":"        for (int i \u003d 0; i \u003c exerciseListToPrint.size(); i++) {","lastModifiedDate":"2024-04-01"},{"lineNumber":571,"author":{"gitId":"edwardhumi"},"content":"            Exercise currentExercise \u003d exerciseListToPrint.get(i);","lastModifiedDate":"2024-04-01"},{"lineNumber":572,"author":{"gitId":"claribelho"},"content":"            System.out.println((i+1) + \". \" + currentExercise.getName() + \" | duration: \" +","lastModifiedDate":"2024-03-30"},{"lineNumber":573,"author":{"gitId":"edwardhumi"},"content":"                    currentExercise.getDuration() + \" | intensity: \" + currentExercise.getIntensity()","lastModifiedDate":"2024-04-01"},{"lineNumber":574,"author":{"gitId":"edwardhumi"},"content":"                    + \" | date: \" + currentExercise.getDate());","lastModifiedDate":"2024-04-01"},{"lineNumber":575,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":576,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":577,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":578,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":579,"author":{"gitId":"claribelho"},"content":"     * Handles when the user is listing the meals they have eaten today.","lastModifiedDate":"2024-04-02"},{"lineNumber":580,"author":{"gitId":"claribelho"},"content":"     * Method first checks if the list is empty.","lastModifiedDate":"2024-04-02"},{"lineNumber":581,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":582,"author":{"gitId":"jasonlienardi"},"content":"    public void handleListMeals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":583,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"here\u0027s what you have eaten today\");","lastModifiedDate":"2024-04-01"},{"lineNumber":584,"author":{"gitId":"claribelho"},"content":"        if (mealList.isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":585,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-03-18"},{"lineNumber":586,"author":{"gitId":"claribelho"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":587,"author":{"gitId":"edwardhumi"},"content":"            printMealList(1, mealList);","lastModifiedDate":"2024-03-31"},{"lineNumber":588,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":589,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":590,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":591,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":592,"author":{"gitId":"claribelho"},"content":"     * Handles when the user is listing all meals they have eaten, inclusive of previously saved meals.","lastModifiedDate":"2024-04-02"},{"lineNumber":593,"author":{"gitId":"claribelho"},"content":"     * Method first checks if the list is empty.","lastModifiedDate":"2024-04-02"},{"lineNumber":594,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":595,"author":{"gitId":"edwardhumi"},"content":"    public void handleListMealsAll() {","lastModifiedDate":"2024-04-01"},{"lineNumber":596,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"here\u0027s what you have eaten so far\");","lastModifiedDate":"2024-04-01"},{"lineNumber":597,"author":{"gitId":"edwardhumi"},"content":"        if (mealListAll.isEmpty() \u0026\u0026 mealList.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":598,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-03-31"},{"lineNumber":599,"author":{"gitId":"edwardhumi"},"content":"        } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":600,"author":{"gitId":"edwardhumi"},"content":"            printMealList(1, mealListAll);","lastModifiedDate":"2024-04-01"},{"lineNumber":601,"author":{"gitId":"edwardhumi"},"content":"            printMealList(1 + mealListAll.size(), mealList);","lastModifiedDate":"2024-04-01"},{"lineNumber":602,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":603,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":604,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":605,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":606,"author":{"gitId":"claribelho"},"content":"     * Handles when the user is listing the meals they have eaten on a certain date.","lastModifiedDate":"2024-04-02"},{"lineNumber":607,"author":{"gitId":"claribelho"},"content":"     * Method will first extract all meals that have this corresponding date,","lastModifiedDate":"2024-04-02"},{"lineNumber":608,"author":{"gitId":"claribelho"},"content":"     * before printing.","lastModifiedDate":"2024-04-02"},{"lineNumber":609,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":610,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by the user, containing the date of which they would like to list meals of","lastModifiedDate":"2024-04-02"},{"lineNumber":611,"author":{"gitId":"claribelho"},"content":"     * @throws InvalidDateException if the date inputted by user is invalid","lastModifiedDate":"2024-04-02"},{"lineNumber":612,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":613,"author":{"gitId":"edwardhumi"},"content":"    public void handleListMealsDate(String command) throws InvalidDateException {","lastModifiedDate":"2024-04-01"},{"lineNumber":614,"author":{"gitId":"edwardhumi"},"content":"        String date \u003d Parser.parseListDate(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":615,"author":{"gitId":"edwardhumi"},"content":"        ArrayList\u003cMeal\u003e mealListDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":616,"author":{"gitId":"edwardhumi"},"content":"        for (Meal m : mealListAll) {","lastModifiedDate":"2024-04-01"},{"lineNumber":617,"author":{"gitId":"edwardhumi"},"content":"            if (m.getDate().equals(date)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":618,"author":{"gitId":"edwardhumi"},"content":"                mealListDate.add(m);","lastModifiedDate":"2024-04-01"},{"lineNumber":619,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":620,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":621,"author":{"gitId":"edwardhumi"},"content":"        for (Meal m : mealList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":622,"author":{"gitId":"edwardhumi"},"content":"            if (m.getDate().equals(date)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":623,"author":{"gitId":"edwardhumi"},"content":"                mealListDate.add(m);","lastModifiedDate":"2024-04-01"},{"lineNumber":624,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":625,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":626,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"here\u0027s what you have eaten on \" + date);","lastModifiedDate":"2024-04-01"},{"lineNumber":627,"author":{"gitId":"edwardhumi"},"content":"        if (mealListDate.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":628,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-03-31"},{"lineNumber":629,"author":{"gitId":"edwardhumi"},"content":"        } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":630,"author":{"gitId":"edwardhumi"},"content":"            printMealList(1, mealListDate);","lastModifiedDate":"2024-04-01"},{"lineNumber":631,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":632,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":633,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":634,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":635,"author":{"gitId":"claribelho"},"content":"     * Prints all the drinks in the drinkListToPrint,","lastModifiedDate":"2024-04-02"},{"lineNumber":636,"author":{"gitId":"claribelho"},"content":"     * inclusive of the volume consumed and date.","lastModifiedDate":"2024-04-02"},{"lineNumber":637,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":638,"author":{"gitId":"claribelho"},"content":"     * @param startIndex starting integer value when printing the list, where startIndex \u003e\u003d 1","lastModifiedDate":"2024-04-02"},{"lineNumber":639,"author":{"gitId":"claribelho"},"content":"     * @param drinkListToPrint arraylist containing the drinks that should be printed","lastModifiedDate":"2024-04-02"},{"lineNumber":640,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":641,"author":{"gitId":"edwardhumi"},"content":"    public void printDrinkList(int startIndex, ArrayList\u003cDrink\u003e drinkListToPrint) {","lastModifiedDate":"2024-03-31"},{"lineNumber":642,"author":{"gitId":"edwardhumi"},"content":"        for (int i \u003d 0; i \u003c drinkListToPrint.size(); i++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":643,"author":{"gitId":"edwardhumi"},"content":"            Drink currentDrink \u003d drinkListToPrint.get(i);","lastModifiedDate":"2024-03-31"},{"lineNumber":644,"author":{"gitId":"BryanCastorius"},"content":"            System.out.println((startIndex+i) + \". \" + currentDrink.getName() + \" (volume: \"","lastModifiedDate":"2024-03-26"},{"lineNumber":645,"author":{"gitId":"edwardhumi"},"content":"                    + currentDrink.getDrinkVolumeSize() + \"ml)\" + \" | date: \" + currentDrink.getDate());","lastModifiedDate":"2024-03-31"},{"lineNumber":646,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":647,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":648,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":649,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":650,"author":{"gitId":"claribelho"},"content":"     * Handles when the user is listing the drinks they have consumed today.","lastModifiedDate":"2024-04-02"},{"lineNumber":651,"author":{"gitId":"claribelho"},"content":"     * Method first checks if the list is empty.","lastModifiedDate":"2024-04-02"},{"lineNumber":652,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":653,"author":{"gitId":"edwardhumi"},"content":"    public void handleListDrinks() {","lastModifiedDate":"2024-04-01"},{"lineNumber":654,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"here\u0027s what you have drank today\");","lastModifiedDate":"2024-03-18"},{"lineNumber":655,"author":{"gitId":"edwardhumi"},"content":"        int totalWater \u003d 0;","lastModifiedDate":"2024-04-01"},{"lineNumber":656,"author":{"gitId":"edwardhumi"},"content":"        for (Water water : waterList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":657,"author":{"gitId":"edwardhumi"},"content":"            totalWater +\u003d water.getWater();","lastModifiedDate":"2024-04-01"},{"lineNumber":658,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":659,"author":{"gitId":"edwardhumi"},"content":"        if (drinkList.isEmpty() \u0026\u0026 totalWater \u003d\u003d 0) {","lastModifiedDate":"2024-04-01"},{"lineNumber":660,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-03-31"},{"lineNumber":661,"author":{"gitId":"edwardhumi"},"content":"        } else if (drinkList.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":662,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-03-31"},{"lineNumber":663,"author":{"gitId":"edwardhumi"},"content":"            handleViewWaterIntake();","lastModifiedDate":"2024-04-01"},{"lineNumber":664,"author":{"gitId":"edwardhumi"},"content":"        } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":665,"author":{"gitId":"edwardhumi"},"content":"            printDrinkList(1, drinkList);","lastModifiedDate":"2024-04-01"},{"lineNumber":666,"author":{"gitId":"edwardhumi"},"content":"            System.out.println();","lastModifiedDate":"2024-03-31"},{"lineNumber":667,"author":{"gitId":"edwardhumi"},"content":"            handleViewWaterIntake();","lastModifiedDate":"2024-03-31"},{"lineNumber":668,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":669,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":670,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":671,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":672,"author":{"gitId":"claribelho"},"content":"     * Handles when the user is listing all drinks they have consumed, inclusive of previously saved drinks.","lastModifiedDate":"2024-04-02"},{"lineNumber":673,"author":{"gitId":"claribelho"},"content":"     * Method first checks if the list is empty.","lastModifiedDate":"2024-04-02"},{"lineNumber":674,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":675,"author":{"gitId":"edwardhumi"},"content":"    public void handleListDrinksAll() {","lastModifiedDate":"2024-04-01"},{"lineNumber":676,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"here\u0027s what you have drank so far\");","lastModifiedDate":"2024-03-31"},{"lineNumber":677,"author":{"gitId":"BryanCastorius"},"content":"        int totalWater \u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":678,"author":{"gitId":"BryanCastorius"},"content":"        for (Water water : waterList) {","lastModifiedDate":"2024-03-31"},{"lineNumber":679,"author":{"gitId":"BryanCastorius"},"content":"            totalWater +\u003d water.getWater();","lastModifiedDate":"2024-03-31"},{"lineNumber":680,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":681,"author":{"gitId":"edwardhumi"},"content":"        if (drinkListAll.isEmpty() \u0026\u0026 drinkList.isEmpty() \u0026\u0026 totalWater \u003d\u003d 0) {","lastModifiedDate":"2024-04-01"},{"lineNumber":682,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-03-18"},{"lineNumber":683,"author":{"gitId":"edwardhumi"},"content":"        } else if (drinkListAll.isEmpty() \u0026\u0026 drinkList.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":684,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-03-30"},{"lineNumber":685,"author":{"gitId":"claribelho"},"content":"            handleViewWaterIntake();","lastModifiedDate":"2024-03-30"},{"lineNumber":686,"author":{"gitId":"claribelho"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":687,"author":{"gitId":"edwardhumi"},"content":"            printDrinkList(1, drinkListAll);","lastModifiedDate":"2024-04-01"},{"lineNumber":688,"author":{"gitId":"edwardhumi"},"content":"            printDrinkList(1 + drinkListAll.size(), drinkList);","lastModifiedDate":"2024-04-01"},{"lineNumber":689,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println();","lastModifiedDate":"2024-03-18"},{"lineNumber":690,"author":{"gitId":"BryanCastorius"},"content":"            handleViewWaterIntake();","lastModifiedDate":"2024-03-18"},{"lineNumber":691,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":692,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":693,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":694,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":695,"author":{"gitId":"claribelho"},"content":"     * Handles when the user is listing the drinks they have consumed on a certain date.","lastModifiedDate":"2024-04-02"},{"lineNumber":696,"author":{"gitId":"claribelho"},"content":"     * Method will first extract all drinks that have this corresponding date,","lastModifiedDate":"2024-04-02"},{"lineNumber":697,"author":{"gitId":"claribelho"},"content":"     * before printing.","lastModifiedDate":"2024-04-02"},{"lineNumber":698,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":699,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by the user, containing the date of which they would like to list drinks of","lastModifiedDate":"2024-04-02"},{"lineNumber":700,"author":{"gitId":"claribelho"},"content":"     * @throws InvalidDateException if the date inputted by user is invalid","lastModifiedDate":"2024-04-02"},{"lineNumber":701,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":702,"author":{"gitId":"edwardhumi"},"content":"    public void handleListDrinksDate(String command) throws InvalidDateException {","lastModifiedDate":"2024-04-01"},{"lineNumber":703,"author":{"gitId":"edwardhumi"},"content":"        String date \u003d Parser.parseListDate(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":704,"author":{"gitId":"edwardhumi"},"content":"        ArrayList\u003cDrink\u003e drinkListDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":705,"author":{"gitId":"edwardhumi"},"content":"        for (Drink d : drinkListAll) {","lastModifiedDate":"2024-04-01"},{"lineNumber":706,"author":{"gitId":"edwardhumi"},"content":"            if (d.getDate().equals(date)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":707,"author":{"gitId":"edwardhumi"},"content":"                drinkListDate.add(d);","lastModifiedDate":"2024-04-01"},{"lineNumber":708,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":709,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":710,"author":{"gitId":"edwardhumi"},"content":"        for (Drink d : drinkList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":711,"author":{"gitId":"edwardhumi"},"content":"            if (d.getDate().equals(date)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":712,"author":{"gitId":"edwardhumi"},"content":"                drinkListDate.add(d);","lastModifiedDate":"2024-04-01"},{"lineNumber":713,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":714,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":715,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"here\u0027s what you have drank on \" + date);","lastModifiedDate":"2024-04-01"},{"lineNumber":716,"author":{"gitId":"edwardhumi"},"content":"        if (drinkListDate.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":717,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-04-01"},{"lineNumber":718,"author":{"gitId":"edwardhumi"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":719,"author":{"gitId":"edwardhumi"},"content":"            printDrinkList(1, drinkListDate);","lastModifiedDate":"2024-04-01"},{"lineNumber":720,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":721,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":722,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":723,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":724,"author":{"gitId":"claribelho"},"content":"     * Handles when the user is listing the exercises they have done today.","lastModifiedDate":"2024-04-02"},{"lineNumber":725,"author":{"gitId":"claribelho"},"content":"     * Method first checks if the list is empty.","lastModifiedDate":"2024-04-02"},{"lineNumber":726,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":727,"author":{"gitId":"claribelho"},"content":"    public void handleListExercises() {","lastModifiedDate":"2024-03-30"},{"lineNumber":728,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"here\u0027s the exercises you\u0027ve done today\");","lastModifiedDate":"2024-03-30"},{"lineNumber":729,"author":{"gitId":"claribelho"},"content":"        if (exerciseList.isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":730,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-03-30"},{"lineNumber":731,"author":{"gitId":"claribelho"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":732,"author":{"gitId":"edwardhumi"},"content":"            printExerciseList(exerciseList);","lastModifiedDate":"2024-04-01"},{"lineNumber":733,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":734,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":735,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":736,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":737,"author":{"gitId":"claribelho"},"content":"     * Handles when the user is listing all exercises they have done, inclusive of previously saved exercises.","lastModifiedDate":"2024-04-02"},{"lineNumber":738,"author":{"gitId":"claribelho"},"content":"     * Method first checks if the list is empty.","lastModifiedDate":"2024-04-02"},{"lineNumber":739,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":740,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":741,"author":{"gitId":"edwardhumi"},"content":"    public void handleListExercisesAll() {","lastModifiedDate":"2024-04-01"},{"lineNumber":742,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"here\u0027s the exercises you\u0027ve done so far\");","lastModifiedDate":"2024-04-01"},{"lineNumber":743,"author":{"gitId":"edwardhumi"},"content":"        if (exerciseListAll.isEmpty() \u0026\u0026 exerciseList.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":744,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-04-01"},{"lineNumber":745,"author":{"gitId":"edwardhumi"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":746,"author":{"gitId":"edwardhumi"},"content":"            ArrayList\u003cExercise\u003e appendedExerciseList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":747,"author":{"gitId":"edwardhumi"},"content":"            appendedExerciseList.addAll(exerciseListAll);","lastModifiedDate":"2024-04-01"},{"lineNumber":748,"author":{"gitId":"edwardhumi"},"content":"            appendedExerciseList.addAll(exerciseList);","lastModifiedDate":"2024-04-01"},{"lineNumber":749,"author":{"gitId":"edwardhumi"},"content":"            printExerciseList(appendedExerciseList);","lastModifiedDate":"2024-04-01"},{"lineNumber":750,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":751,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":752,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":753,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":754,"author":{"gitId":"claribelho"},"content":"     * Handles when the user is listing the exercises they have done on a certain date.","lastModifiedDate":"2024-04-02"},{"lineNumber":755,"author":{"gitId":"claribelho"},"content":"     * Method will first extract all exercises that have this corresponding date,","lastModifiedDate":"2024-04-02"},{"lineNumber":756,"author":{"gitId":"claribelho"},"content":"     * before printing.","lastModifiedDate":"2024-04-02"},{"lineNumber":757,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":758,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by the user, containing the date of which they would like to list exercises of","lastModifiedDate":"2024-04-02"},{"lineNumber":759,"author":{"gitId":"claribelho"},"content":"     * @throws InvalidDateException if the date inputted by user is invalid","lastModifiedDate":"2024-04-02"},{"lineNumber":760,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":761,"author":{"gitId":"edwardhumi"},"content":"    public void handleListExercisesDate(String command) throws InvalidDateException {","lastModifiedDate":"2024-04-01"},{"lineNumber":762,"author":{"gitId":"edwardhumi"},"content":"        String date \u003d Parser.parseListDate(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":763,"author":{"gitId":"edwardhumi"},"content":"        ArrayList\u003cExercise\u003e exercisesListDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":764,"author":{"gitId":"edwardhumi"},"content":"        for (Exercise e : exerciseListAll) {","lastModifiedDate":"2024-04-01"},{"lineNumber":765,"author":{"gitId":"edwardhumi"},"content":"            if (e.getDate().equals(date)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":766,"author":{"gitId":"edwardhumi"},"content":"                exercisesListDate.add(e);","lastModifiedDate":"2024-04-01"},{"lineNumber":767,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":768,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":769,"author":{"gitId":"edwardhumi"},"content":"        for (Exercise e : exerciseList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":770,"author":{"gitId":"edwardhumi"},"content":"            if (e.getDate().equals(date)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":771,"author":{"gitId":"edwardhumi"},"content":"                exercisesListDate.add(e);","lastModifiedDate":"2024-04-01"},{"lineNumber":772,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":773,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":774,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"here\u0027s the exercises you\u0027ve done on \" + date);","lastModifiedDate":"2024-04-01"},{"lineNumber":775,"author":{"gitId":"edwardhumi"},"content":"        if (exercisesListDate.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":776,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-04-01"},{"lineNumber":777,"author":{"gitId":"edwardhumi"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":778,"author":{"gitId":"edwardhumi"},"content":"            printExerciseList(exercisesListDate);","lastModifiedDate":"2024-04-01"},{"lineNumber":779,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":780,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":781,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":782,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":783,"author":{"gitId":"claribelho"},"content":"     * Handles when the user is listing all meals and drinks they have inputted today.","lastModifiedDate":"2024-04-02"},{"lineNumber":784,"author":{"gitId":"claribelho"},"content":"     * Method first checks if the lists is empty.","lastModifiedDate":"2024-04-02"},{"lineNumber":785,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":786,"author":{"gitId":"jasonlienardi"},"content":"    public void handleListEverything() {","lastModifiedDate":"2024-03-18"},{"lineNumber":787,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"here\u0027s what you have consumed today\");","lastModifiedDate":"2024-04-01"},{"lineNumber":788,"author":{"gitId":"claribelho"},"content":"        if (drinkList.isEmpty() \u0026\u0026 mealList.isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":789,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-03-18"},{"lineNumber":790,"author":{"gitId":"BryanCastorius"},"content":"            System.out.println();","lastModifiedDate":"2024-03-27"},{"lineNumber":791,"author":{"gitId":"BryanCastorius"},"content":"            handleViewWaterIntake();","lastModifiedDate":"2024-03-27"},{"lineNumber":792,"author":{"gitId":"claribelho"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":793,"author":{"gitId":"edwardhumi"},"content":"            printMealList(1, mealList);","lastModifiedDate":"2024-03-31"},{"lineNumber":794,"author":{"gitId":"edwardhumi"},"content":"            printDrinkList(mealList.size()+1, drinkList);","lastModifiedDate":"2024-03-31"},{"lineNumber":795,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println();","lastModifiedDate":"2024-03-18"},{"lineNumber":796,"author":{"gitId":"edwardhumi"},"content":"            handleViewWaterIntake();","lastModifiedDate":"2024-03-31"},{"lineNumber":797,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":798,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":799,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"       ~~~\");","lastModifiedDate":"2024-03-31"},{"lineNumber":800,"author":{"gitId":"edwardhumi"},"content":"        handleListExercises();","lastModifiedDate":"2024-03-31"},{"lineNumber":801,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":802,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":803,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":804,"author":{"gitId":"claribelho"},"content":"     * Handles when the user is listing all meals and drinks they have inputted,","lastModifiedDate":"2024-04-02"},{"lineNumber":805,"author":{"gitId":"claribelho"},"content":"     * inclusive of previously saved meals and drinks.","lastModifiedDate":"2024-04-02"},{"lineNumber":806,"author":{"gitId":"claribelho"},"content":"     * Method first checks if the lists is empty.","lastModifiedDate":"2024-04-02"},{"lineNumber":807,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":808,"author":{"gitId":"edwardhumi"},"content":"    public void handleListEverythingAll() {","lastModifiedDate":"2024-04-01"},{"lineNumber":809,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"here\u0027s what you have consumed so far\");","lastModifiedDate":"2024-04-01"},{"lineNumber":810,"author":{"gitId":"edwardhumi"},"content":"        if (drinkListAll.isEmpty() \u0026\u0026 mealListAll.isEmpty() \u0026\u0026 drinkList.isEmpty() \u0026\u0026 mealList.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":811,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-03-31"},{"lineNumber":812,"author":{"gitId":"edwardhumi"},"content":"            System.out.println();","lastModifiedDate":"2024-03-31"},{"lineNumber":813,"author":{"gitId":"edwardhumi"},"content":"            handleViewWaterIntake();","lastModifiedDate":"2024-03-31"},{"lineNumber":814,"author":{"gitId":"edwardhumi"},"content":"        } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":815,"author":{"gitId":"edwardhumi"},"content":"            printMealList(1, mealListAll);","lastModifiedDate":"2024-04-01"},{"lineNumber":816,"author":{"gitId":"edwardhumi"},"content":"            printMealList(mealListAll.size() + 1, mealList);","lastModifiedDate":"2024-04-01"},{"lineNumber":817,"author":{"gitId":"edwardhumi"},"content":"            printDrinkList(mealListAll.size() + mealList.size() + 1, drinkListAll);","lastModifiedDate":"2024-04-01"},{"lineNumber":818,"author":{"gitId":"edwardhumi"},"content":"            printDrinkList(mealListAll.size() + mealList.size() + drinkListAll.size() + 1, drinkList);","lastModifiedDate":"2024-04-01"},{"lineNumber":819,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println();","lastModifiedDate":"2024-03-18"},{"lineNumber":820,"author":{"gitId":"BryanCastorius"},"content":"            handleViewWaterIntake();","lastModifiedDate":"2024-03-18"},{"lineNumber":821,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":822,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":823,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"       ~~~\");","lastModifiedDate":"2024-03-30"},{"lineNumber":824,"author":{"gitId":"edwardhumi"},"content":"        handleListExercisesAll();","lastModifiedDate":"2024-04-01"},{"lineNumber":825,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":826,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":827,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":828,"author":{"gitId":"claribelho"},"content":"     * Handles when the user is listing all meals and drinks they have consumed on a certain date.","lastModifiedDate":"2024-04-02"},{"lineNumber":829,"author":{"gitId":"claribelho"},"content":"     * Method will first extract all meals and drinks that have this corresponding date,","lastModifiedDate":"2024-04-02"},{"lineNumber":830,"author":{"gitId":"claribelho"},"content":"     * before printing.","lastModifiedDate":"2024-04-02"},{"lineNumber":831,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":832,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by the user, containing the date of which they would like to list","lastModifiedDate":"2024-04-02"},{"lineNumber":833,"author":{"gitId":"claribelho"},"content":"     * @throws InvalidDateException if the date inputted by user is invalid","lastModifiedDate":"2024-04-02"},{"lineNumber":834,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":835,"author":{"gitId":"edwardhumi"},"content":"    public void handleListEverythingDate(String command) throws InvalidDateException {","lastModifiedDate":"2024-04-01"},{"lineNumber":836,"author":{"gitId":"edwardhumi"},"content":"        String date \u003d Parser.parseListDate(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":837,"author":{"gitId":"edwardhumi"},"content":"        ArrayList\u003cMeal\u003e mealListDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":838,"author":{"gitId":"edwardhumi"},"content":"        for (Meal m : mealListAll) {","lastModifiedDate":"2024-04-01"},{"lineNumber":839,"author":{"gitId":"edwardhumi"},"content":"            if (m.getDate().equals(date)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":840,"author":{"gitId":"edwardhumi"},"content":"                mealListDate.add(m);","lastModifiedDate":"2024-04-01"},{"lineNumber":841,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":842,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":843,"author":{"gitId":"edwardhumi"},"content":"        for (Meal m : mealList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":844,"author":{"gitId":"edwardhumi"},"content":"            if (m.getDate().equals(date)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":845,"author":{"gitId":"edwardhumi"},"content":"                mealListDate.add(m);","lastModifiedDate":"2024-04-01"},{"lineNumber":846,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":847,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":848,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":849,"author":{"gitId":"edwardhumi"},"content":"        ArrayList\u003cDrink\u003e drinkListDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":850,"author":{"gitId":"edwardhumi"},"content":"        for (Drink d : drinkListAll) {","lastModifiedDate":"2024-04-01"},{"lineNumber":851,"author":{"gitId":"edwardhumi"},"content":"            if (d.getDate().equals(date)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":852,"author":{"gitId":"edwardhumi"},"content":"                drinkListDate.add(d);","lastModifiedDate":"2024-04-01"},{"lineNumber":853,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":854,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":855,"author":{"gitId":"edwardhumi"},"content":"        for (Drink d : drinkList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":856,"author":{"gitId":"edwardhumi"},"content":"            if (d.getDate().equals(date)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":857,"author":{"gitId":"edwardhumi"},"content":"                drinkListDate.add(d);","lastModifiedDate":"2024-04-01"},{"lineNumber":858,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":859,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":860,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":861,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"here\u0027s what you have consumed on \" + date);","lastModifiedDate":"2024-04-01"},{"lineNumber":862,"author":{"gitId":"edwardhumi"},"content":"        if (mealListDate.isEmpty() \u0026\u0026 drinkListDate.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":863,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-04-01"},{"lineNumber":864,"author":{"gitId":"edwardhumi"},"content":"            System.out.println();","lastModifiedDate":"2024-04-01"},{"lineNumber":865,"author":{"gitId":"edwardhumi"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":866,"author":{"gitId":"edwardhumi"},"content":"            printMealList(1, mealListDate);","lastModifiedDate":"2024-04-01"},{"lineNumber":867,"author":{"gitId":"edwardhumi"},"content":"            printDrinkList(1 + mealListDate.size(), drinkListDate);","lastModifiedDate":"2024-04-01"},{"lineNumber":868,"author":{"gitId":"edwardhumi"},"content":"            System.out.println();","lastModifiedDate":"2024-04-01"},{"lineNumber":869,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":870,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":871,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"       ~~~\");","lastModifiedDate":"2024-04-01"},{"lineNumber":872,"author":{"gitId":"edwardhumi"},"content":"        handleListExercisesDate(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":873,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":874,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":875,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":876,"author":{"gitId":"claribelho"},"content":"     * Handles when the user would like to edit the serving size of a previously inputted meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":877,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":878,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by the user, containing the index of the meal to edit and the new serving size","lastModifiedDate":"2024-04-02"},{"lineNumber":879,"author":{"gitId":"claribelho"},"content":"     * @throws InvalidListIndexException if the provided index is not a valid index in mealList","lastModifiedDate":"2024-04-02"},{"lineNumber":880,"author":{"gitId":"claribelho"},"content":"     * @throws NegativeValueException if the provided serving size is a negative value","lastModifiedDate":"2024-04-02"},{"lineNumber":881,"author":{"gitId":"claribelho"},"content":"     * @throws IncompleteEditException if the user did not comply with the required command format","lastModifiedDate":"2024-04-02"},{"lineNumber":882,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":883,"author":{"gitId":"jasonlienardi"},"content":"    public void handleEditMealServingSize(String command) throws InvalidListIndexException,","lastModifiedDate":"2024-04-01"},{"lineNumber":884,"author":{"gitId":"claribelho"},"content":"            NegativeValueException, IncompleteEditException {","lastModifiedDate":"2024-03-30"},{"lineNumber":885,"author":{"gitId":"claribelho"},"content":"        Parser.parseEditMeal(command); //Parser handles the index, so index can be \u003d 0","lastModifiedDate":"2024-03-29"},{"lineNumber":886,"author":{"gitId":"claribelho"},"content":"        if (Parser.editMealIndex \u003e\u003d mealList.size() || Parser.editMealIndex \u003c 0) {","lastModifiedDate":"2024-03-29"},{"lineNumber":887,"author":{"gitId":"claribelho"},"content":"            throw new InvalidListIndexException();","lastModifiedDate":"2024-03-29"},{"lineNumber":888,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":889,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":890,"author":{"gitId":"claribelho"},"content":"        String mealName \u003d mealList.get(Parser.editMealIndex).getName();","lastModifiedDate":"2024-03-19"},{"lineNumber":891,"author":{"gitId":"claribelho"},"content":"        String mealDate \u003d mealList.get(Parser.editMealIndex).getDate();","lastModifiedDate":"2024-03-28"},{"lineNumber":892,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":893,"author":{"gitId":"claribelho"},"content":"        Meal updatedMeal \u003d new Meal(mealName, Parser.editMealSize, mealDate);","lastModifiedDate":"2024-03-28"},{"lineNumber":894,"author":{"gitId":"claribelho"},"content":"        mealList.set(Parser.editMealIndex, updatedMeal);","lastModifiedDate":"2024-03-19"},{"lineNumber":895,"author":{"gitId":"claribelho"},"content":"        System.out.println(mealName + \" has been edited to \" + Parser.editMealSize + \" serving(s)\");","lastModifiedDate":"2024-03-19"},{"lineNumber":896,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":897,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":898,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":899,"author":{"gitId":"claribelho"},"content":"     * Handles when the user would like to edit the serving size of a previously inputted drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":900,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":901,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by the user, containing the index of the drink to edit and the new serving size","lastModifiedDate":"2024-04-02"},{"lineNumber":902,"author":{"gitId":"claribelho"},"content":"     * @throws InvalidListIndexException if the provided index is not a valid index in drinkList","lastModifiedDate":"2024-04-02"},{"lineNumber":903,"author":{"gitId":"claribelho"},"content":"     * @throws NegativeValueException if the provided serving size is a negative value","lastModifiedDate":"2024-04-02"},{"lineNumber":904,"author":{"gitId":"claribelho"},"content":"     * @throws IncompleteEditException if the user did not comply with the required command format","lastModifiedDate":"2024-04-02"},{"lineNumber":905,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":906,"author":{"gitId":"jasonlienardi"},"content":"    public void handleEditDrinkServingSize(String command) throws InvalidListIndexException,","lastModifiedDate":"2024-04-01"},{"lineNumber":907,"author":{"gitId":"claribelho"},"content":"            NegativeValueException, IncompleteEditException {","lastModifiedDate":"2024-03-30"},{"lineNumber":908,"author":{"gitId":"claribelho"},"content":"        Parser.parseEditDrink(command);","lastModifiedDate":"2024-03-19"},{"lineNumber":909,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":910,"author":{"gitId":"claribelho"},"content":"        if (Parser.editDrinkIndex \u003e\u003d drinkList.size() || Parser.editDrinkIndex \u003c 0) {","lastModifiedDate":"2024-03-29"},{"lineNumber":911,"author":{"gitId":"claribelho"},"content":"            throw new InvalidListIndexException();","lastModifiedDate":"2024-03-29"},{"lineNumber":912,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":913,"author":{"gitId":"claribelho"},"content":"        String drinkName \u003d drinkList.get(Parser.editDrinkIndex).getName();","lastModifiedDate":"2024-03-19"},{"lineNumber":914,"author":{"gitId":"claribelho"},"content":"        String drinkDate \u003d drinkList.get(Parser.editDrinkIndex).getDate();","lastModifiedDate":"2024-03-28"},{"lineNumber":915,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":916,"author":{"gitId":"claribelho"},"content":"        Drink updatedDrink \u003d new Drink(drinkName, Parser.editDrinkSize, drinkDate);","lastModifiedDate":"2024-03-28"},{"lineNumber":917,"author":{"gitId":"claribelho"},"content":"        drinkList.set(Parser.editDrinkIndex, updatedDrink);","lastModifiedDate":"2024-03-19"},{"lineNumber":918,"author":{"gitId":"claribelho"},"content":"        System.out.println(drinkName + \" has been edited to \" + Parser.editDrinkSize + \" ml\");","lastModifiedDate":"2024-03-19"},{"lineNumber":919,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":920,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":921,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":922,"author":{"gitId":"claribelho"},"content":"     * Handles when the user would like to edit the total volume of the water they consumed today.","lastModifiedDate":"2024-04-02"},{"lineNumber":923,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":924,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by the user, containing the new total volume of water","lastModifiedDate":"2024-04-02"},{"lineNumber":925,"author":{"gitId":"claribelho"},"content":"     * @throws NegativeValueException if the provided serving size is a negative value","lastModifiedDate":"2024-04-02"},{"lineNumber":926,"author":{"gitId":"claribelho"},"content":"     * @throws IncompleteEditException if the user did not comply with the required command format","lastModifiedDate":"2024-04-02"},{"lineNumber":927,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":928,"author":{"gitId":"claribelho"},"content":"    public void handleEditWaterIntake(String command) throws NegativeValueException, IncompleteEditException {","lastModifiedDate":"2024-04-02"},{"lineNumber":929,"author":{"gitId":"BryanCastorius"},"content":"        Parser.parseEditWater(command);","lastModifiedDate":"2024-03-27"},{"lineNumber":930,"author":{"gitId":"BryanCastorius"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2024-03-31"},{"lineNumber":931,"author":{"gitId":"BryanCastorius"},"content":"        for (Water water: waterList) {","lastModifiedDate":"2024-03-31"},{"lineNumber":932,"author":{"gitId":"BryanCastorius"},"content":"            if (water.getDate().equals(currentDate.getDate())) {","lastModifiedDate":"2024-03-31"},{"lineNumber":933,"author":{"gitId":"BryanCastorius"},"content":"                water.editWaterIntake(Parser.editWaterSize);","lastModifiedDate":"2024-03-31"},{"lineNumber":934,"author":{"gitId":"BryanCastorius"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":935,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":936,"author":{"gitId":"BryanCastorius"},"content":"        System.out.println(\"Total water intake has been edited to \" + Parser.editWaterSize + \" ml\");","lastModifiedDate":"2024-03-27"},{"lineNumber":937,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":938,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":939,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":940,"author":{"gitId":"claribelho"},"content":"     * Handles when the user would like to delete a previously inputted meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":941,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":942,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by the user, containing the index of the meal to delete","lastModifiedDate":"2024-04-02"},{"lineNumber":943,"author":{"gitId":"claribelho"},"content":"     * @throws InvalidListIndexException if the provided index is not a valid index in mealList","lastModifiedDate":"2024-04-02"},{"lineNumber":944,"author":{"gitId":"claribelho"},"content":"     * @throws IncompleteDeleteException if the user did not comply with the required command format","lastModifiedDate":"2024-04-02"},{"lineNumber":945,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":946,"author":{"gitId":"claribelho"},"content":"    public void handleDeleteMeal(String command) throws InvalidListIndexException, IncompleteDeleteException {","lastModifiedDate":"2024-03-30"},{"lineNumber":947,"author":{"gitId":"claribelho"},"content":"        if (command.length() \u003c 12) {","lastModifiedDate":"2024-03-30"},{"lineNumber":948,"author":{"gitId":"claribelho"},"content":"            throw new IncompleteDeleteException();","lastModifiedDate":"2024-03-30"},{"lineNumber":949,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":950,"author":{"gitId":"claribelho"},"content":"        int mealIndex \u003d Integer.parseInt(command.substring(11).trim()) - 1;","lastModifiedDate":"2024-03-30"},{"lineNumber":951,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":952,"author":{"gitId":"claribelho"},"content":"        if (mealIndex \u003e\u003d mealList.size() || mealIndex \u003c 0) {","lastModifiedDate":"2024-03-29"},{"lineNumber":953,"author":{"gitId":"claribelho"},"content":"            throw new InvalidListIndexException();","lastModifiedDate":"2024-03-29"},{"lineNumber":954,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":955,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":956,"author":{"gitId":"claribelho"},"content":"        String mealName \u003d mealList.get(mealIndex).getName();","lastModifiedDate":"2024-03-18"},{"lineNumber":957,"author":{"gitId":"claribelho"},"content":"        mealList.remove(mealIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":958,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Removed \" + mealName + \" from meals\");","lastModifiedDate":"2024-03-19"},{"lineNumber":959,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":960,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":961,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":962,"author":{"gitId":"claribelho"},"content":"     * Handles when the user would like to delete a previously inputted drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":963,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":964,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by the user, containing the index of the drink to delete","lastModifiedDate":"2024-04-02"},{"lineNumber":965,"author":{"gitId":"claribelho"},"content":"     * @throws InvalidListIndexException if the provided index is not a valid index in drinkList","lastModifiedDate":"2024-04-02"},{"lineNumber":966,"author":{"gitId":"claribelho"},"content":"     * @throws IncompleteDeleteException if the user did not comply with the required command format","lastModifiedDate":"2024-04-02"},{"lineNumber":967,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":968,"author":{"gitId":"claribelho"},"content":"    public void handleDeleteDrink(String command) throws InvalidListIndexException, IncompleteDeleteException {","lastModifiedDate":"2024-03-30"},{"lineNumber":969,"author":{"gitId":"claribelho"},"content":"        if (command.length() \u003c 13) {","lastModifiedDate":"2024-03-30"},{"lineNumber":970,"author":{"gitId":"claribelho"},"content":"            throw new IncompleteDeleteException();","lastModifiedDate":"2024-03-30"},{"lineNumber":971,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":972,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":973,"author":{"gitId":"claribelho"},"content":"        int drinkIndex \u003d Integer.parseInt(command.substring(12).trim()) - 1;","lastModifiedDate":"2024-03-30"},{"lineNumber":974,"author":{"gitId":"claribelho"},"content":"        if (drinkIndex \u003e\u003d drinkList.size() || drinkIndex \u003c 0) {","lastModifiedDate":"2024-03-29"},{"lineNumber":975,"author":{"gitId":"claribelho"},"content":"            throw new InvalidListIndexException();","lastModifiedDate":"2024-03-29"},{"lineNumber":976,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":977,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":978,"author":{"gitId":"claribelho"},"content":"        String drinkName \u003d drinkList.get(drinkIndex).getName();","lastModifiedDate":"2024-03-18"},{"lineNumber":979,"author":{"gitId":"claribelho"},"content":"        drinkList.remove(drinkIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":980,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Removed \" + drinkName + \" from drinks\");","lastModifiedDate":"2024-03-19"},{"lineNumber":981,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":982,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":983,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":984,"author":{"gitId":"claribelho"},"content":"     * Handles when the user would like to delete a previously inputted exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":985,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":986,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by the user, containing the index of the exercise to delete","lastModifiedDate":"2024-04-02"},{"lineNumber":987,"author":{"gitId":"claribelho"},"content":"     * @throws InvalidListIndexException if the provided index is not a valid index in exerciseList","lastModifiedDate":"2024-04-02"},{"lineNumber":988,"author":{"gitId":"claribelho"},"content":"     * @throws IncompleteDeleteException if the user did not comply with the required command format","lastModifiedDate":"2024-04-02"},{"lineNumber":989,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":990,"author":{"gitId":"claribelho"},"content":"    public void handleDeleteExercise(String command) throws InvalidListIndexException, IncompleteDeleteException {","lastModifiedDate":"2024-03-30"},{"lineNumber":991,"author":{"gitId":"claribelho"},"content":"        if (command.length() \u003c 16) {","lastModifiedDate":"2024-03-30"},{"lineNumber":992,"author":{"gitId":"claribelho"},"content":"            throw new IncompleteDeleteException();","lastModifiedDate":"2024-03-30"},{"lineNumber":993,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":994,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":995,"author":{"gitId":"claribelho"},"content":"        int exerciseIndex \u003d Integer.parseInt(command.substring(15).trim()) - 1;","lastModifiedDate":"2024-03-30"},{"lineNumber":996,"author":{"gitId":"claribelho"},"content":"        if (exerciseIndex \u003e\u003d exerciseList.size() || exerciseIndex \u003c 0) {","lastModifiedDate":"2024-03-30"},{"lineNumber":997,"author":{"gitId":"claribelho"},"content":"            throw new InvalidListIndexException();","lastModifiedDate":"2024-03-30"},{"lineNumber":998,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":999,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":1000,"author":{"gitId":"claribelho"},"content":"        String exerciseName \u003d exerciseList.get(exerciseIndex).getName();","lastModifiedDate":"2024-03-30"},{"lineNumber":1001,"author":{"gitId":"claribelho"},"content":"        exerciseList.remove(exerciseIndex);","lastModifiedDate":"2024-03-30"},{"lineNumber":1002,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Removed \" + exerciseName + \" from exercises done\");","lastModifiedDate":"2024-03-30"},{"lineNumber":1003,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":1004,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":1005,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":1006,"author":{"gitId":"claribelho"},"content":"     * Adds an exercise to the user\u0027s current exerciseList, based on what exercise the user has done,","lastModifiedDate":"2024-04-02"},{"lineNumber":1007,"author":{"gitId":"claribelho"},"content":"     * its duration and intensity.","lastModifiedDate":"2024-04-02"},{"lineNumber":1008,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":1009,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by the user, containing the exercise they have done, its duration and","lastModifiedDate":"2024-04-02"},{"lineNumber":1010,"author":{"gitId":"claribelho"},"content":"     *                intensity.","lastModifiedDate":"2024-04-02"},{"lineNumber":1011,"author":{"gitId":"claribelho"},"content":"     * @throws IncompleteExerciseException if the user did not comply with the required format","lastModifiedDate":"2024-04-02"},{"lineNumber":1012,"author":{"gitId":"claribelho"},"content":"     * @throws UnregisteredExerciseException if the user has inputted an exercise that was not pre-defined","lastModifiedDate":"2024-04-02"},{"lineNumber":1013,"author":{"gitId":"claribelho"},"content":"     * @throws NegativeValueException if the provided exercise duration is a negative value","lastModifiedDate":"2024-04-02"},{"lineNumber":1014,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":1015,"author":{"gitId":"claribelho"},"content":"    public void handleExercise(String command) throws IncompleteExerciseException, UnregisteredExerciseException,","lastModifiedDate":"2024-03-30"},{"lineNumber":1016,"author":{"gitId":"claribelho"},"content":"            NegativeValueException {","lastModifiedDate":"2024-03-30"},{"lineNumber":1017,"author":{"gitId":"jasonlienardi"},"content":"        Parser.parseExercise(command);","lastModifiedDate":"2024-03-27"},{"lineNumber":1018,"author":{"gitId":"jasonlienardi"},"content":"        String exerciseType \u003d Parser.exerciseDescription;","lastModifiedDate":"2024-03-27"},{"lineNumber":1019,"author":{"gitId":"jasonlienardi"},"content":"        int duration \u003d Parser.exerciseDuration;","lastModifiedDate":"2024-03-27"},{"lineNumber":1020,"author":{"gitId":"jasonlienardi"},"content":"        ExerciseIntensity intensity \u003d Parser.exerciseIntensity;","lastModifiedDate":"2024-03-27"},{"lineNumber":1021,"author":{"gitId":"BryanCastorius"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2024-04-01"},{"lineNumber":1022,"author":{"gitId":"BryanCastorius"},"content":"        exerciseList.add(new Exercise(exerciseType, duration, intensity, currentDate.getDate()));","lastModifiedDate":"2024-04-01"},{"lineNumber":1023,"author":{"gitId":"jasonlienardi"},"content":"        assert !exerciseList.isEmpty(): \"failed to track exercise\";","lastModifiedDate":"2024-03-27"},{"lineNumber":1024,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":1025,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Tracked \" + duration + \" minutes of \" + exerciseType);","lastModifiedDate":"2024-03-27"},{"lineNumber":1026,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":1027,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":1028,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":1029,"author":{"gitId":"claribelho"},"content":"     * Handle when user would like to clear all entries from today.","lastModifiedDate":"2024-04-02"},{"lineNumber":1030,"author":{"gitId":"claribelho"},"content":"     * This includes all meals, drinks and exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":1031,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":1032,"author":{"gitId":"jasonlienardi"},"content":"    public void handleClear() {","lastModifiedDate":"2024-03-18"},{"lineNumber":1033,"author":{"gitId":"claribelho"},"content":"        mealList.clear();","lastModifiedDate":"2024-03-18"},{"lineNumber":1034,"author":{"gitId":"claribelho"},"content":"        drinkList.clear();","lastModifiedDate":"2024-03-18"},{"lineNumber":1035,"author":{"gitId":"BryanCastorius"},"content":"        waterList.clear();","lastModifiedDate":"2024-03-31"},{"lineNumber":1036,"author":{"gitId":"claribelho"},"content":"        exerciseList.clear();","lastModifiedDate":"2024-03-30"},{"lineNumber":1037,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":1038,"author":{"gitId":"claribelho"},"content":"        assert mealList.isEmpty(): \"clearing of meal list failed\";","lastModifiedDate":"2024-03-19"},{"lineNumber":1039,"author":{"gitId":"claribelho"},"content":"        assert drinkList.isEmpty(): \"clearing of drink list failed\";","lastModifiedDate":"2024-03-19"},{"lineNumber":1040,"author":{"gitId":"claribelho"},"content":"        assert exerciseList.isEmpty(): \"clearing of exercise list failed\";","lastModifiedDate":"2024-03-30"},{"lineNumber":1041,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":1042,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"All entries have been deleted\");","lastModifiedDate":"2024-03-18"},{"lineNumber":1043,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":1044,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":1045,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":1046,"author":{"gitId":"claribelho"},"content":"     * Prints the number of calories the user has burnt today.","lastModifiedDate":"2024-04-02"},{"lineNumber":1047,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":1048,"author":{"gitId":"jasonlienardi"},"content":"    public void handleCaloriesBurnt() {","lastModifiedDate":"2024-03-27"},{"lineNumber":1049,"author":{"gitId":"jasonlienardi"},"content":"        int caloriesBurnt \u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":1050,"author":{"gitId":"jasonlienardi"},"content":"        for (Exercise exercise: exerciseList) {","lastModifiedDate":"2024-03-27"},{"lineNumber":1051,"author":{"gitId":"jasonlienardi"},"content":"            caloriesBurnt +\u003d exercise.getCaloriesBurnt();","lastModifiedDate":"2024-03-27"},{"lineNumber":1052,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":1053,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Total calories burnt: \" + caloriesBurnt);","lastModifiedDate":"2024-03-27"},{"lineNumber":1054,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":1055,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":1056,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":1057,"author":{"gitId":"claribelho"},"content":"     * Handles when user would like to see what is recommended to them,","lastModifiedDate":"2024-04-02"},{"lineNumber":1058,"author":{"gitId":"claribelho"},"content":"     * only regarding the calorie and water intake.","lastModifiedDate":"2024-04-02"},{"lineNumber":1059,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":1060,"author":{"gitId":"BryanCastorius"},"content":"    public void handleRecommendations() {","lastModifiedDate":"2024-04-02"},{"lineNumber":1061,"author":{"gitId":"BryanCastorius"},"content":"        int waterIntake \u003d 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":1062,"author":{"gitId":"BryanCastorius"},"content":"        for (Water water: waterList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":1063,"author":{"gitId":"BryanCastorius"},"content":"            waterIntake +\u003d water.getWater();","lastModifiedDate":"2024-04-02"},{"lineNumber":1064,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":1065,"author":{"gitId":"BryanCastorius"},"content":"        int waterDifference \u003d RECOMMEND_WATER_INTAKE -waterIntake;","lastModifiedDate":"2024-04-02"},{"lineNumber":1066,"author":{"gitId":"BryanCastorius"},"content":"        if (waterIntake \u003c RECOMMEND_WATER_INTAKE) {","lastModifiedDate":"2024-04-02"},{"lineNumber":1067,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"We recommend drinking more water. Please drink \" +","lastModifiedDate":"2024-04-02"},{"lineNumber":1068,"author":{"gitId":"claribelho"},"content":"                    waterDifference + \" ml more water to hit the daily water intake goal :)\");","lastModifiedDate":"2024-04-02"},{"lineNumber":1069,"author":{"gitId":"BryanCastorius"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":1070,"author":{"gitId":"BryanCastorius"},"content":"            System.out.println(\"Great! You are on track with the water intake!\");","lastModifiedDate":"2024-04-02"},{"lineNumber":1071,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":1072,"author":{"gitId":"BryanCastorius"},"content":"        System.out.println(\"    ~~\");","lastModifiedDate":"2024-04-02"},{"lineNumber":1073,"author":{"gitId":"BryanCastorius"},"content":"        int caloriesCount \u003d 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":1074,"author":{"gitId":"BryanCastorius"},"content":"        for (Meal meal: mealList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":1075,"author":{"gitId":"BryanCastorius"},"content":"            caloriesCount +\u003d meal.getCalories();","lastModifiedDate":"2024-04-02"},{"lineNumber":1076,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":1077,"author":{"gitId":"BryanCastorius"},"content":"        for (Drink drink: drinkList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":1078,"author":{"gitId":"BryanCastorius"},"content":"            caloriesCount +\u003d drink.getCalories();","lastModifiedDate":"2024-04-02"},{"lineNumber":1079,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":1080,"author":{"gitId":"BryanCastorius"},"content":"        for (Exercise exercise: exerciseList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":1081,"author":{"gitId":"BryanCastorius"},"content":"            caloriesCount -\u003d exercise.getCaloriesBurnt();","lastModifiedDate":"2024-04-02"},{"lineNumber":1082,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":1083,"author":{"gitId":"BryanCastorius"},"content":"        int caloriesDifference \u003d RECOMMEND_CALORIE_INTAKE - caloriesCount;","lastModifiedDate":"2024-04-02"},{"lineNumber":1084,"author":{"gitId":"BryanCastorius"},"content":"        if (caloriesCount \u003c RECOMMEND_CALORIE_INTAKE) {","lastModifiedDate":"2024-04-02"},{"lineNumber":1085,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"We recommend eating more food. Please eat \" + caloriesDifference + \" more calories\");","lastModifiedDate":"2024-04-02"},{"lineNumber":1086,"author":{"gitId":"BryanCastorius"},"content":"        } else if (caloriesCount \u003e RECOMMEND_CALORIE_INTAKE \u0026\u0026 caloriesCount \u003c RECOMMEND_CALORIE_INTAKE + 200) {","lastModifiedDate":"2024-04-02"},{"lineNumber":1087,"author":{"gitId":"BryanCastorius"},"content":"            System.out.println(\"Great! You are on track with the calorie intake!\");","lastModifiedDate":"2024-04-02"},{"lineNumber":1088,"author":{"gitId":"BryanCastorius"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":1089,"author":{"gitId":"BryanCastorius"},"content":"            System.out.println(\"You are \" + -caloriesDifference","lastModifiedDate":"2024-04-02"},{"lineNumber":1090,"author":{"gitId":"claribelho"},"content":"                    + \" calories above the recommended calorie amount, consider exercising!\");","lastModifiedDate":"2024-04-02"},{"lineNumber":1091,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":1092,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":1093,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"edwardhumi":370,"jasonlienardi":140,"BryanCastorius":115,"claribelho":468}},{"path":"src/main/java/seedu/fitnus/validator/IntegerValidation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.validator;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.NegativeValueException;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" * Validates whether an integer value complies with the condition stated.","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"public class IntegerValidation {","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"     * Validates whether the integer value is a positive integer.","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"     * @param value integer value to check","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"     * @throws NegativeValueException if the value is less than or equals to zero","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"    public static void checkIntegerGreaterThanZero (int value) throws NegativeValueException {","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"        if (value \u003c\u003d 0) {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"            throw new NegativeValueException();","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"jasonlienardi"},"content":"    public static void checkIntegerGreaterOrEqualThanZero (int value) throws NegativeValueException {","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"jasonlienardi"},"content":"        if (value \u003c 0) {","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"jasonlienardi"},"content":"            throw new NegativeValueException();","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"jasonlienardi":6,"claribelho":21}},{"path":"src/test/java/seedu/fitnus/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"edwardhumi"},"content":"package seedu.fitnus.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"edwardhumi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.exception.IncompleteEditException;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.exception.IncompleteInfoException;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.exception.UnregisteredDrinkException;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.NegativeValueException;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.UnregisteredMealException;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.UnregisteredExerciseException;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.IncompleteExerciseException;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.InvalidDateException;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.ExerciseIntensity;","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"edwardhumi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"edwardhumi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"edwardhumi"},"content":"public class ParserTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"    public void parseInfoMeal_unregisteredMeal_exceptionThrown() throws IncompleteInfoException {","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"edwardhumi"},"content":"        String command \u003d \"infoMeal blablabla\";","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"edwardhumi"},"content":"            Parser.parseInfoMeal(command);","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"edwardhumi"},"content":"        } catch (UnregisteredMealException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"edwardhumi"},"content":"            assertTrue(true);","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"edwardhumi"},"content":"    public void parseInfoExercise_unregisteredExercise_exceptionThrown() throws IncompleteInfoException {","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"edwardhumi"},"content":"        String command \u003d \"infoExercise blabla\";","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"edwardhumi"},"content":"            String infoExercise \u003d Parser.parseInfoExercise(command);","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"edwardhumi"},"content":"        } catch (UnregisteredExerciseException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"edwardhumi"},"content":"            assertTrue(true);","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"edwardhumi"},"content":"    public void parseInfoDrink_unregisteredDrink_exceptionThrown() throws IncompleteInfoException {","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"edwardhumi"},"content":"        String command \u003d \"infoDrink blabla\";","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"edwardhumi"},"content":"            String infoDrink \u003d Parser.parseInfoDrink(command);","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"edwardhumi"},"content":"        } catch (UnregisteredDrinkException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"edwardhumi"},"content":"            assertTrue(true);","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"edwardhumi"},"content":"    public void parseEditMeal_validInputs_success() throws IncompleteEditException, NegativeValueException {","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"edwardhumi"},"content":"        String command \u003d \"editMeal 3 s/120\";","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"edwardhumi"},"content":"        Parser.parseEditMeal(command);","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"edwardhumi"},"content":"        // Meal list starts from 1, however the array index starts from 0, hence the n - 1","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(2, Parser.editMealIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(120, Parser.editMealSize);","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"edwardhumi"},"content":"    public void parseEditDrink_validInputs_success() throws IncompleteEditException, NegativeValueException {","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"edwardhumi"},"content":"        String command \u003d \"editDrink 1 s/500\";","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"edwardhumi"},"content":"        Parser.parseEditDrink(command);","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"edwardhumi"},"content":"        // Drink list starts from 1, however the array index starts from 0, hence the n - 1","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(0, Parser.editDrinkIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(500, Parser.editDrinkSize);","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"BryanCastorius"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"BryanCastorius"},"content":"    public void parseEditDrink_unregisteredMeal_exceptionThrown() throws NegativeValueException {","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"BryanCastorius"},"content":"        String command \u003d \"editDrink s/100\";","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"BryanCastorius"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"BryanCastorius"},"content":"            Parser.parseEditDrink(command);","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"BryanCastorius"},"content":"        } catch (IncompleteEditException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"BryanCastorius"},"content":"            assertTrue(true);","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"edwardhumi"},"content":"    public void parseEditWater_validInputs_success() throws IncompleteEditException, NegativeValueException {","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"edwardhumi"},"content":"        String command \u003d \"editWater s/500\";","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"edwardhumi"},"content":"        Parser.parseEditWater(command);","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(500, Parser.editWaterSize);","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"edwardhumi"},"content":"    public void parseMealStorage_validInputs_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"edwardhumi"},"content":"        String data \u003d \"chicken rice,1,12-02-2024\";","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"edwardhumi"},"content":"        Parser.parseMealStorage(data);","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"chicken rice\", Parser.mealStorageDescription);","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(1, Parser.mealStorageSize);","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"12-02-2024\", Parser.mealStorageDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"edwardhumi"},"content":"    public void parseDrinkStorage_validInputs_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"edwardhumi"},"content":"        String data \u003d \"milo,200,12-02-2024\";","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"edwardhumi"},"content":"        Parser.parseDrinkStorage(data);","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"milo\", Parser.drinkStorageDescription);","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(200, Parser.drinkStorageSize);","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"12-02-2024\", Parser.drinkStorageDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"edwardhumi"},"content":"    public void parseExerciseStorage_validInputs_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"edwardhumi"},"content":"        String data \u003d \"cycling,100,LOW,29-02-2024\";","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"edwardhumi"},"content":"        Parser.parseExerciseStorage(data);","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"cycling\", Parser.exerciseStorageDescription);","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(100, Parser.exerciseStorageDuration);","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(ExerciseIntensity.LOW, Parser.exerciseStorageIntensity);","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"29-02-2024\", Parser.exerciseStorageDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"edwardhumi"},"content":"    public void parseExercise_validInputs_success() throws IncompleteExerciseException, NegativeValueException,","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"edwardhumi"},"content":"            UnregisteredExerciseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"edwardhumi"},"content":"        String command \u003d \"exercise e/cycling d/100 i/LOW\";","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"edwardhumi"},"content":"        Parser.parseExercise(command);","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"cycling\", Parser.exerciseDescription);","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(100, Parser.exerciseDuration);","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(ExerciseIntensity.LOW, Parser.exerciseIntensity);","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"jasonlienardi"},"content":"    public void parseMealNutrient_validInputs_success() throws NegativeValueException {","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"edwardhumi"},"content":"        String data \u003d \"fried rice,100,10,9,8,7,6\";","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"edwardhumi"},"content":"        Parser.parseMealNutrient(data);","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"fried rice\", Parser.mealNutrientDescription);","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(100, Parser.mealNutrientCalories);","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(10, Parser.mealNutrientCarbs);","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(9, Parser.mealNutrientProtein);","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(8, Parser.mealNutrientFat);","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(7, Parser.mealNutrientFiber);","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(6, Parser.mealNutrientSugar);","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"jasonlienardi"},"content":"    public void parseDrinkNutrient_validInputs_success() throws NegativeValueException {","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"edwardhumi"},"content":"        String data \u003d \"Guava Juice,143,38,10,9,5\";","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"edwardhumi"},"content":"        Parser.parseDrinkNutrient(data);","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"guava juice\", Parser.drinkNutrientDescription);","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(143, Parser.drinkNutrientCalories);","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(38, Parser.drinkNutrientCarbs);","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(10, Parser.drinkNutrientSugar);","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(9, Parser.drinkNutrientProtein);","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(5, Parser.drinkNutrientFat);","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"edwardhumi"},"content":"    public void parseExerciseCalories_validInputs_success() {","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"edwardhumi"},"content":"        String data \u003d \"Running,14,10,7\";","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"edwardhumi"},"content":"        Parser.parseExerciseCalories(data);","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"running\", Parser.exerciseCaloriesDescription);","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(14, Parser.exerciseCaloriesHigh);","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(10, Parser.exerciseCaloriesMedium);","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(7, Parser.exerciseCaloriesLow);","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"edwardhumi"},"content":"    public void parseListDate_validInputs_success() throws InvalidDateException {","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"edwardhumi"},"content":"        String command \u003d \"listMeals d/12-02-2024\";","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"edwardhumi"},"content":"        String date \u003d Parser.parseListDate(command);","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"12-02-2024\", date);","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"edwardhumi"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"edwardhumi":145,"jasonlienardi":2,"BryanCastorius":15,"claribelho":2}},{"path":"src/test/java/seedu/fitnus/user/UserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.user;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.Date;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.Drink;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.Exercise;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.ExerciseIntensity;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.Meal;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.Water;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.IncompleteDeleteException;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.IncompleteDrinkException;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.IncompleteEditException;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.IncompleteExerciseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.IncompleteMealException;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.InvalidListIndexException;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.NegativeValueException;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.UnregisteredDrinkException;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.UnregisteredExerciseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.UnregisteredMealException;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.storage.Storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"//import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"jasonlienardi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"jasonlienardi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"public class UserTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"    User testUser;","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"    String todayDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"    ArrayList\u003cMeal\u003e testMealList;","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"    ArrayList\u003cDrink\u003e testDrinkList;","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"BryanCastorius"},"content":"    ArrayList\u003cWater\u003e testWaterList;","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"    ArrayList\u003cExercise\u003e testExerciseList;","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"    private Storage testMealStorage;","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"    private Storage testDrinkStorage;","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"BryanCastorius"},"content":"    private Storage testExerciseStorage;","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"    private Storage mealNutrientStorage \u003d new Storage(\"./db\", \"./db/Meal_db.csv\");","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"    private Storage drinkNutrientStorage \u003d new Storage(\"./db\", \"./db/Drink_db.csv\");","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"edwardhumi"},"content":"    private Storage exerciseCaloriesStorage \u003d new Storage(\"./db\", \"./db/Exercise_db.csv\");","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"    public void setUp() throws UnregisteredExerciseException {","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"        testMealStorage \u003d new Storage(\"./src/test/resources\", \"src/test/resources/MealList.txt\");","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"        testDrinkStorage \u003d new Storage(\"./src/test/resources\", \"src/test/resources/DrinkList.txt\");","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"BryanCastorius"},"content":"        testExerciseStorage \u003d new Storage(\"./src/test/resources\", \"src/test/resources/ExerciseList.txt\");","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"edwardhumi"},"content":"        testUser \u003d new User(testMealStorage, testDrinkStorage, testExerciseStorage, mealNutrientStorage,","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"edwardhumi"},"content":"                drinkNutrientStorage, exerciseCaloriesStorage);","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"        testMealList \u003d testUser.mealList;","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"        testDrinkList \u003d testUser.drinkList;","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"        testExerciseList \u003d testUser.exerciseList;","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"BryanCastorius"},"content":"        testWaterList \u003d testUser.waterList;","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"        todayDate \u003d currentDate.getDate();","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"        testMealList.add(new Meal(\"kaya toast\", 4, todayDate));","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"        testMealList.add(new Meal(\"laksa\", 10, todayDate));","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"        testDrinkList.add(new Drink(\"kopi\", 100, todayDate));","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"BryanCastorius"},"content":"        testWaterList.add(new Water( 100, todayDate));","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"BryanCastorius"},"content":"        testExerciseList.add(new Exercise(\"swimming\", 20, ExerciseIntensity.HIGH, \"30-01-2024\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"claribelho"},"content":"    public void handleMeal_validInputs_correctlyAddMeal() throws IncompleteMealException, UnregisteredMealException,","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"            NegativeValueException {","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"        String command \u003d \"eat m/kaya toast s/3\";","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"        testUser.handleMeal(command);","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"        assertFalse(testMealList.isEmpty());","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"claribelho"},"content":"        assertEquals(\"kaya toast\", testMealList.get(2).getName());","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"claribelho"},"content":"        assertEquals(3, testMealList.get(2).getServingSize());","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"claribelho"},"content":"    public void handleDrink_validInputs_correctlyAddDrink() throws IncompleteDrinkException,","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"claribelho"},"content":"            UnregisteredDrinkException, NegativeValueException {","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"claribelho"},"content":"        String command \u003d \"drink d/kopi s/500\";","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"claribelho"},"content":"        testUser.handleDrink(command);","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"claribelho"},"content":"        assertEquals(\"kopi\", testDrinkList.get(1).getName());","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"claribelho"},"content":"        assertEquals(500, testDrinkList.get(1).getDrinkVolumeSize());","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"jasonlienardi"},"content":"    public void handleExercise_validInputs_correctlyAddExercise() throws IncompleteExerciseException,","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"jasonlienardi"},"content":"            UnregisteredExerciseException, NegativeValueException {","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"jasonlienardi"},"content":"        String command \u003d \"exercise e/running d/30 i/HIGH\";","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleExercise(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(\"running\", testExerciseList.get(1).getName());","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(30, testExerciseList.get(1).getDuration());","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(ExerciseIntensity.HIGH, testExerciseList.get(1).getIntensity());","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"jasonlienardi"},"content":"    public void handleViewCalories_correctCalorieCalculation_viewCaloriesAccurate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleViewCalories();","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"jasonlienardi"},"content":"        String expectedOutput \u003d \"Total Calories: 5507\";","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"jasonlienardi"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"jasonlienardi"},"content":"    public void handleViewCarbohydrates_correctCarbsCalculation_viewCarbsAccurate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleViewCarbohydrates();","lastModifiedDate":"2024-04-01"},{"lineNumber":122,"author":{"gitId":"jasonlienardi"},"content":"        String expectedOutput \u003d \"Total Carbohydrates: 912 grams\";","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"jasonlienardi"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2024-04-01"},{"lineNumber":126,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":127,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":128,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":129,"author":{"gitId":"jasonlienardi"},"content":"    public void handleViewProtein_correctProteinCalculation_viewProteinAccurate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":130,"author":{"gitId":"jasonlienardi"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-04-01"},{"lineNumber":131,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":132,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleViewProteins();","lastModifiedDate":"2024-04-01"},{"lineNumber":133,"author":{"gitId":"jasonlienardi"},"content":"        String expectedOutput \u003d \"Total Proteins: 215 grams\";","lastModifiedDate":"2024-04-01"},{"lineNumber":134,"author":{"gitId":"jasonlienardi"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":135,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2024-04-01"},{"lineNumber":136,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":137,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":138,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":139,"author":{"gitId":"jasonlienardi"},"content":"    public void handleViewWaterIntake_correctWaterCalculation_viewWaterAccurate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":140,"author":{"gitId":"jasonlienardi"},"content":"        testWaterList.add(new Water (500, todayDate));","lastModifiedDate":"2024-04-01"},{"lineNumber":141,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":142,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleViewWaterIntake();","lastModifiedDate":"2024-04-01"},{"lineNumber":143,"author":{"gitId":"jasonlienardi"},"content":"        String expectedOutput \u003d \"Total water intake today: 600 ml\";","lastModifiedDate":"2024-04-01"},{"lineNumber":144,"author":{"gitId":"jasonlienardi"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":145,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2024-04-01"},{"lineNumber":146,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":148,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"jasonlienardi"},"content":"    public void handleViewFiber_correctFiberCalculation_viewFiberAccurate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"jasonlienardi"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":152,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleViewFiber();","lastModifiedDate":"2024-04-01"},{"lineNumber":153,"author":{"gitId":"jasonlienardi"},"content":"        String expectedOutput \u003d \"Total Fiber: 80 grams\";","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"jasonlienardi"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":155,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":156,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2024-04-01"},{"lineNumber":157,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":158,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":159,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":160,"author":{"gitId":"jasonlienardi"},"content":"    public void handleViewFat_correctFatCalculation_viewFatAccurate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":161,"author":{"gitId":"jasonlienardi"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-04-01"},{"lineNumber":162,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":163,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleViewFat();","lastModifiedDate":"2024-04-01"},{"lineNumber":164,"author":{"gitId":"jasonlienardi"},"content":"        String expectedOutput \u003d \"Total Fat: 129 grams\";","lastModifiedDate":"2024-04-01"},{"lineNumber":165,"author":{"gitId":"jasonlienardi"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":166,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":167,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2024-04-01"},{"lineNumber":168,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":169,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":170,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":171,"author":{"gitId":"jasonlienardi"},"content":"    public void handleViewSugar_correctSugarCalculation_viewSugarAccurate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"jasonlienardi"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":174,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleViewSugar();","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"jasonlienardi"},"content":"        String expectedOutput \u003d \"Total Sugar: 106 grams\";","lastModifiedDate":"2024-04-01"},{"lineNumber":176,"author":{"gitId":"jasonlienardi"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":177,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2024-04-01"},{"lineNumber":179,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":180,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":181,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":182,"author":{"gitId":"jasonlienardi"},"content":"    public void handleViewCaloriesBurnt_correctCalorieBurntCalculation_viewCaloriesBurntAccurate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":183,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleCaloriesBurnt();","lastModifiedDate":"2024-04-01"},{"lineNumber":184,"author":{"gitId":"jasonlienardi"},"content":"        String expectedOutput \u003d \"Total calories burnt: 240\";","lastModifiedDate":"2024-04-01"},{"lineNumber":185,"author":{"gitId":"jasonlienardi"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":186,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":187,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2024-04-01"},{"lineNumber":188,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":189,"author":{"gitId":"jasonlienardi"},"content":"    ","lastModifiedDate":"2024-04-01"},{"lineNumber":190,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":191,"author":{"gitId":"jasonlienardi"},"content":"    public void handleListMeals_emptyList_printListAccurate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":192,"author":{"gitId":"jasonlienardi"},"content":"        testMealList.clear();","lastModifiedDate":"2024-04-01"},{"lineNumber":193,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleListMeals();","lastModifiedDate":"2024-04-01"},{"lineNumber":194,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":195,"author":{"gitId":"jasonlienardi"},"content":"        String expectedOutput \u003d \"here\u0027s what you have eaten today\" + System.lineSeparator() +","lastModifiedDate":"2024-04-01"},{"lineNumber":196,"author":{"gitId":"jasonlienardi"},"content":"                \"  \u003e\u003e nothing so far :o\";","lastModifiedDate":"2024-04-01"},{"lineNumber":197,"author":{"gitId":"jasonlienardi"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":198,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":199,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-01"},{"lineNumber":200,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":201,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":202,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":203,"author":{"gitId":"jasonlienardi"},"content":"    public void handleListMeals_validList_printListAccurate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":204,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleListMeals();","lastModifiedDate":"2024-04-01"},{"lineNumber":205,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":206,"author":{"gitId":"jasonlienardi"},"content":"        String expectedOutput \u003d \"here\u0027s what you have eaten today\" + System.lineSeparator() +","lastModifiedDate":"2024-04-01"},{"lineNumber":207,"author":{"gitId":"jasonlienardi"},"content":"                \"1. kaya toast (serving size: 4) | date: \" + todayDate + System.lineSeparator() +","lastModifiedDate":"2024-04-01"},{"lineNumber":208,"author":{"gitId":"jasonlienardi"},"content":"                \"2. laksa (serving size: 10) | date: \" + todayDate ;","lastModifiedDate":"2024-04-01"},{"lineNumber":209,"author":{"gitId":"jasonlienardi"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":210,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":211,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-01"},{"lineNumber":212,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":213,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":214,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":215,"author":{"gitId":"jasonlienardi"},"content":"    public void handleListDrinks_emptyList_printListAccurate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":216,"author":{"gitId":"jasonlienardi"},"content":"        testDrinkList.clear();","lastModifiedDate":"2024-04-01"},{"lineNumber":217,"author":{"gitId":"jasonlienardi"},"content":"        testWaterList.clear();","lastModifiedDate":"2024-04-01"},{"lineNumber":218,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleListDrinks();","lastModifiedDate":"2024-04-01"},{"lineNumber":219,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":220,"author":{"gitId":"jasonlienardi"},"content":"        String expectedOutput \u003d \"here\u0027s what you have drank today\" + System.lineSeparator()  +","lastModifiedDate":"2024-04-01"},{"lineNumber":221,"author":{"gitId":"jasonlienardi"},"content":"                \"  \u003e\u003e nothing so far :o\";","lastModifiedDate":"2024-04-01"},{"lineNumber":222,"author":{"gitId":"jasonlienardi"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":223,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":224,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-01"},{"lineNumber":225,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":226,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":227,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":228,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":229,"author":{"gitId":"jasonlienardi"},"content":"    public void handleListDrinks_validList_printListAccurate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":230,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleListDrinks();","lastModifiedDate":"2024-04-01"},{"lineNumber":231,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":232,"author":{"gitId":"jasonlienardi"},"content":"        String expectedOutput \u003d \"here\u0027s what you have drank today\" + System.lineSeparator() +","lastModifiedDate":"2024-04-01"},{"lineNumber":233,"author":{"gitId":"jasonlienardi"},"content":"                \"1. kopi (volume: 100ml) | date: \" + todayDate + System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2024-04-01"},{"lineNumber":234,"author":{"gitId":"jasonlienardi"},"content":"                \"Total water intake today: 100 ml\";","lastModifiedDate":"2024-04-01"},{"lineNumber":235,"author":{"gitId":"jasonlienardi"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":236,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":237,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-01"},{"lineNumber":238,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":239,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":240,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":241,"author":{"gitId":"jasonlienardi"},"content":"    public void handleListExercise_emptyList_printListAccurate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":242,"author":{"gitId":"jasonlienardi"},"content":"        testExerciseList.clear();","lastModifiedDate":"2024-04-01"},{"lineNumber":243,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleListExercises();","lastModifiedDate":"2024-04-01"},{"lineNumber":244,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":245,"author":{"gitId":"jasonlienardi"},"content":"        String expectedOutput \u003d \"here\u0027s the exercises you\u0027ve done today\" + System.lineSeparator()  +","lastModifiedDate":"2024-04-01"},{"lineNumber":246,"author":{"gitId":"jasonlienardi"},"content":"                \"  \u003e\u003e nothing so far :o\";","lastModifiedDate":"2024-04-01"},{"lineNumber":247,"author":{"gitId":"jasonlienardi"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":248,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":249,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-01"},{"lineNumber":250,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":251,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":252,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":253,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":254,"author":{"gitId":"jasonlienardi"},"content":"    public void handleListExercise_validList_printListAccurate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":255,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleListExercises();","lastModifiedDate":"2024-04-01"},{"lineNumber":256,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":257,"author":{"gitId":"jasonlienardi"},"content":"        String expectedOutput \u003d \"here\u0027s the exercises you\u0027ve done today\" + System.lineSeparator() +","lastModifiedDate":"2024-04-01"},{"lineNumber":258,"author":{"gitId":"jasonlienardi"},"content":"                \"1. swimming | duration: 20 | intensity: HIGH | date: 30-01-2024\";","lastModifiedDate":"2024-04-01"},{"lineNumber":259,"author":{"gitId":"jasonlienardi"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":260,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":261,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-01"},{"lineNumber":262,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":263,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":264,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":265,"author":{"gitId":"jasonlienardi"},"content":"    public void handleListEverything_allEmptyLists_printListAccurate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":266,"author":{"gitId":"jasonlienardi"},"content":"        testMealList.clear();","lastModifiedDate":"2024-04-01"},{"lineNumber":267,"author":{"gitId":"jasonlienardi"},"content":"        testDrinkList.clear();","lastModifiedDate":"2024-04-01"},{"lineNumber":268,"author":{"gitId":"jasonlienardi"},"content":"        testExerciseList.clear();","lastModifiedDate":"2024-04-01"},{"lineNumber":269,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleListEverything();","lastModifiedDate":"2024-04-01"},{"lineNumber":270,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":271,"author":{"gitId":"jasonlienardi"},"content":"        String expectedOutput \u003d \"here\u0027s what you have consumed today\" + System.lineSeparator() +","lastModifiedDate":"2024-04-01"},{"lineNumber":272,"author":{"gitId":"jasonlienardi"},"content":"                \"  \u003e\u003e nothing so far :o\" + System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2024-04-01"},{"lineNumber":273,"author":{"gitId":"jasonlienardi"},"content":"                \"Total water intake today: 100 ml\" + System.lineSeparator() + \"       ~~~\" + System.lineSeparator() +","lastModifiedDate":"2024-04-01"},{"lineNumber":274,"author":{"gitId":"jasonlienardi"},"content":"                \"here\u0027s the exercises you\u0027ve done today\" + System.lineSeparator() +","lastModifiedDate":"2024-04-01"},{"lineNumber":275,"author":{"gitId":"jasonlienardi"},"content":"                \"  \u003e\u003e nothing so far :o\";","lastModifiedDate":"2024-04-01"},{"lineNumber":276,"author":{"gitId":"jasonlienardi"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":277,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":278,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-01"},{"lineNumber":279,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":280,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":281,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":282,"author":{"gitId":"jasonlienardi"},"content":"    public void handleListEverything_validList_printListAccurate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":283,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleListEverything();","lastModifiedDate":"2024-04-01"},{"lineNumber":284,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":285,"author":{"gitId":"jasonlienardi"},"content":"        String expectedOutput \u003d \"here\u0027s what you have consumed today\" + System.lineSeparator() +","lastModifiedDate":"2024-04-01"},{"lineNumber":286,"author":{"gitId":"jasonlienardi"},"content":"                \"1. kaya toast (serving size: 4) | date: \" + todayDate + System.lineSeparator() +","lastModifiedDate":"2024-04-01"},{"lineNumber":287,"author":{"gitId":"jasonlienardi"},"content":"                \"2. laksa (serving size: 10) | date: \" + todayDate + System.lineSeparator() +","lastModifiedDate":"2024-04-01"},{"lineNumber":288,"author":{"gitId":"jasonlienardi"},"content":"                \"3. kopi (volume: 100ml) | date: \" + todayDate + System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2024-04-01"},{"lineNumber":289,"author":{"gitId":"jasonlienardi"},"content":"                \"Total water intake today: 100 ml\" + System.lineSeparator() + \"       ~~~\" + System.lineSeparator() +","lastModifiedDate":"2024-04-01"},{"lineNumber":290,"author":{"gitId":"jasonlienardi"},"content":"                \"here\u0027s the exercises you\u0027ve done today\" + System.lineSeparator() +","lastModifiedDate":"2024-04-01"},{"lineNumber":291,"author":{"gitId":"jasonlienardi"},"content":"                \"1. swimming | duration: 20 | intensity: HIGH | date: 30-01-2024\";","lastModifiedDate":"2024-04-01"},{"lineNumber":292,"author":{"gitId":"jasonlienardi"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-01"},{"lineNumber":293,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-01"},{"lineNumber":294,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":295,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":296,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":297,"author":{"gitId":"jasonlienardi"},"content":"    public void handleEditMealServingSize_invalidMealIndex_exceptionThrown() throws InvalidListIndexException {","lastModifiedDate":"2024-04-01"},{"lineNumber":298,"author":{"gitId":"jasonlienardi"},"content":"        Exception exception \u003d assertThrows(InvalidListIndexException.class, () -\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":299,"author":{"gitId":"jasonlienardi"},"content":"            String command \u003d \"editMeal 5 s/10\";","lastModifiedDate":"2024-04-01"},{"lineNumber":300,"author":{"gitId":"jasonlienardi"},"content":"            testUser.handleEditMealServingSize(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":301,"author":{"gitId":"jasonlienardi"},"content":"        });","lastModifiedDate":"2024-04-01"},{"lineNumber":302,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":303,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":304,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":305,"author":{"gitId":"jasonlienardi"},"content":"    public void handleEditMealServingSize_validCommand_editMealSuccessful() throws InvalidListIndexException,","lastModifiedDate":"2024-04-01"},{"lineNumber":306,"author":{"gitId":"jasonlienardi"},"content":"            NegativeValueException, IncompleteEditException {","lastModifiedDate":"2024-04-01"},{"lineNumber":307,"author":{"gitId":"jasonlienardi"},"content":"        String command \u003d \"editMeal 2 s/100000000\";","lastModifiedDate":"2024-04-01"},{"lineNumber":308,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleEditMealServingSize(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":309,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":310,"author":{"gitId":"jasonlienardi"},"content":"        int mealIndex \u003d 2 - 1;","lastModifiedDate":"2024-04-01"},{"lineNumber":311,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(\"laksa\", testMealList.get(mealIndex).getName());","lastModifiedDate":"2024-04-01"},{"lineNumber":312,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(100000000, testMealList.get(mealIndex).getServingSize());","lastModifiedDate":"2024-04-01"},{"lineNumber":313,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":314,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":315,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":316,"author":{"gitId":"jasonlienardi"},"content":"    public void handleEditDrinkServingSize_validCommand_editDrinkSuccessful() throws InvalidListIndexException,","lastModifiedDate":"2024-04-01"},{"lineNumber":317,"author":{"gitId":"jasonlienardi"},"content":"            NegativeValueException, IncompleteEditException {","lastModifiedDate":"2024-04-01"},{"lineNumber":318,"author":{"gitId":"jasonlienardi"},"content":"        String command \u003d \"editDrink 1 s/100000000\";","lastModifiedDate":"2024-04-01"},{"lineNumber":319,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleEditDrinkServingSize(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":320,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":321,"author":{"gitId":"jasonlienardi"},"content":"        int drinkIndex \u003d 0;","lastModifiedDate":"2024-04-01"},{"lineNumber":322,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(\"kopi\", testDrinkList.get(drinkIndex).getName());","lastModifiedDate":"2024-04-01"},{"lineNumber":323,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(100000000, testDrinkList.get(drinkIndex).getDrinkVolumeSize());","lastModifiedDate":"2024-04-01"},{"lineNumber":324,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":325,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":326,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":327,"author":{"gitId":"jasonlienardi"},"content":"    public void handleDeleteMeal_noIndexInput_exceptionThrown() throws InvalidListIndexException,","lastModifiedDate":"2024-04-01"},{"lineNumber":328,"author":{"gitId":"jasonlienardi"},"content":"            IncompleteDeleteException {","lastModifiedDate":"2024-04-01"},{"lineNumber":329,"author":{"gitId":"jasonlienardi"},"content":"        Exception exception \u003d assertThrows(IncompleteDeleteException.class, () -\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":330,"author":{"gitId":"jasonlienardi"},"content":"            String command \u003d \"deleteMeal \";","lastModifiedDate":"2024-04-01"},{"lineNumber":331,"author":{"gitId":"jasonlienardi"},"content":"            testUser.handleDeleteMeal(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":332,"author":{"gitId":"jasonlienardi"},"content":"        });","lastModifiedDate":"2024-04-01"},{"lineNumber":333,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":334,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":335,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":336,"author":{"gitId":"jasonlienardi"},"content":"    public void handleDeleteMeal_noIntegerInput_exceptionThrown() throws InvalidListIndexException,","lastModifiedDate":"2024-04-01"},{"lineNumber":337,"author":{"gitId":"jasonlienardi"},"content":"            IncompleteDeleteException {","lastModifiedDate":"2024-04-01"},{"lineNumber":338,"author":{"gitId":"jasonlienardi"},"content":"        Exception exception \u003d assertThrows(NumberFormatException.class, () -\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":339,"author":{"gitId":"jasonlienardi"},"content":"            String command \u003d \"deleteMeal         \";","lastModifiedDate":"2024-04-01"},{"lineNumber":340,"author":{"gitId":"jasonlienardi"},"content":"            testUser.handleDeleteMeal(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":341,"author":{"gitId":"jasonlienardi"},"content":"        });","lastModifiedDate":"2024-04-01"},{"lineNumber":342,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":343,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":344,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":345,"author":{"gitId":"jasonlienardi"},"content":"    public void handleDeleteMeal_validCommand_deleteMealSuccessful() throws InvalidListIndexException,","lastModifiedDate":"2024-04-01"},{"lineNumber":346,"author":{"gitId":"jasonlienardi"},"content":"            IncompleteDeleteException {","lastModifiedDate":"2024-04-01"},{"lineNumber":347,"author":{"gitId":"jasonlienardi"},"content":"        String command \u003d \"deleteMeal 1\";","lastModifiedDate":"2024-04-01"},{"lineNumber":348,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleDeleteMeal(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":349,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(1, testMealList.size());","lastModifiedDate":"2024-04-01"},{"lineNumber":350,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(\"laksa\", testMealList.get(0).getName());","lastModifiedDate":"2024-04-01"},{"lineNumber":351,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":352,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":353,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":354,"author":{"gitId":"jasonlienardi"},"content":"    public void handleDeleteDrink_invalidDrinkIndex_exceptionThrown() throws InvalidListIndexException {","lastModifiedDate":"2024-04-01"},{"lineNumber":355,"author":{"gitId":"jasonlienardi"},"content":"        Exception exception \u003d assertThrows(InvalidListIndexException.class, () -\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":356,"author":{"gitId":"jasonlienardi"},"content":"            String command \u003d \"deleteDrink 5\";","lastModifiedDate":"2024-04-01"},{"lineNumber":357,"author":{"gitId":"jasonlienardi"},"content":"            testUser.handleDeleteDrink(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":358,"author":{"gitId":"jasonlienardi"},"content":"        });","lastModifiedDate":"2024-04-01"},{"lineNumber":359,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":360,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":361,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":362,"author":{"gitId":"jasonlienardi"},"content":"    public void handleDeleteDrink_validCommand_deleteDrinkSuccessful() throws InvalidListIndexException,","lastModifiedDate":"2024-04-01"},{"lineNumber":363,"author":{"gitId":"jasonlienardi"},"content":"            IncompleteDeleteException {","lastModifiedDate":"2024-04-01"},{"lineNumber":364,"author":{"gitId":"jasonlienardi"},"content":"        String command \u003d \"deleteDrink 1\";","lastModifiedDate":"2024-04-01"},{"lineNumber":365,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleDeleteDrink(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":366,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(0, testDrinkList.size());","lastModifiedDate":"2024-04-01"},{"lineNumber":367,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":368,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":369,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":370,"author":{"gitId":"jasonlienardi"},"content":"    public void handleDeleteExercise_validCommand_deleteMealSuccessful() throws InvalidListIndexException,","lastModifiedDate":"2024-04-01"},{"lineNumber":371,"author":{"gitId":"jasonlienardi"},"content":"            IncompleteDeleteException {","lastModifiedDate":"2024-04-01"},{"lineNumber":372,"author":{"gitId":"jasonlienardi"},"content":"        String command \u003d \"deleteExercise 1\";","lastModifiedDate":"2024-04-01"},{"lineNumber":373,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleDeleteExercise(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":374,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(0, testExerciseList.size());","lastModifiedDate":"2024-04-01"},{"lineNumber":375,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":376,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":377,"author":{"gitId":"jasonlienardi"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":378,"author":{"gitId":"jasonlienardi"},"content":"    public void handleClear_validCommand_clearListsSuccessful() {","lastModifiedDate":"2024-04-01"},{"lineNumber":379,"author":{"gitId":"jasonlienardi"},"content":"        testUser.handleClear();","lastModifiedDate":"2024-04-01"},{"lineNumber":380,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(0, testMealList.size());","lastModifiedDate":"2024-04-01"},{"lineNumber":381,"author":{"gitId":"jasonlienardi"},"content":"        assertEquals(0, testDrinkList.size());","lastModifiedDate":"2024-04-01"},{"lineNumber":382,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":383,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"edwardhumi":3,"jasonlienardi":300,"BryanCastorius":6,"claribelho":74}}]
