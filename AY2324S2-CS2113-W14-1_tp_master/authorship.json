[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"# FitNUS","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"## Project Introduction","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"FitNUS is a CLI application that aims to help combat diabetes and the overconsumption of calories, sugar, and","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"carbohydrates. Our vision is to promote healthy lifestyle amongst NUS students.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"Users are able to track the meals, drinks, and exercises they have in a day and even past records.","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"Useful links:","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"jasonlienardi"},"content":"* [User Guide](docs/UserGuide.md)","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"jasonlienardi"},"content":"* [Developer Guide](docs/DeveloperGuide.md)","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"jasonlienardi"},"content":"* [About Us](docs/AboutUs.md)","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"---  ","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"## Setup","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"To use the app please follow the setup procedures below:","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"1. Download the JAR file.","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"2. Place it into an empty folder.","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"3. Navigate to the folder you just created.","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"4. Run the JAR file with the following command:","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"-$ java -jar FitNUS.jar","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"---  ","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"## Features List","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"### 1 Information for users","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"1. View all possible commands: `help`","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"2. View all pre-defined meals. These meals will have their nutritional content defined per serving size and can","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"   be inputted immediately: `allMeals`","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"3. View all pre-defined drinks. These drinks will have their nutritional content defined per 100ml","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"   and can be inputted immediately: `allDrinks`","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"4. Viewing all pre-defined exercises. These exercises will have the number of calories burnt for a","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"   high/medium/low intensity workout defined per minute and can be inputted immediately: `allExercises`","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"### 2 For user to add data","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"1. Adds a meal to the list of meals consumed today: `eat`","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"2. Add a drink to the list of drinks consumed today: `drink`","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"3. Add an exercise to the list of exercises done: `exercise`","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"4. Add a custom new meal on top of pre-defined meals: `newMeal`","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"5. Add a custom new drink on top of pre-defined drink: `newDrink`","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"6. Add a custom new exercise on top of pre-defined exercises: `newExercise`","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"### 3 For user to retrieve data","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"1. Find nutritional content about a certain meal: `infoMeal`","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"2. Find nutritional content about a certain drink: `infoDrink`","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"3. Find the calories burnt per minute from a certain exercise: `infoExercise`","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"4. View daily net calorie count: `calories`","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"5. View daily carbohydrates consumed: `carbs`","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"6. View daily proteins consumed: `protein`","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"7. View daily fat consumed: `fat`","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"8. View daily sugar consumed: `sugar`","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"9. View daily fiber consumed: `fiber`","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"BryanCastorius"},"content":"10. View daily water consumption: `water`","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"11. View daily calories burnt: `caloriesBurnt`","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"12. View daily calories and water intake recommendation, based on current intake: `recommend`","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"### 4 For users to view their lists and data","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"1. List today\u0027s meal intakes: `listMeals`","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"2. List today\u0027s drink intake: `listDrinks`","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"3. List today\u0027s exercises done: `listExercises`","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"4. List everything inputted today, inclusive of all meals, drinks and exercises: `listEverything`","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"5. List entire app\u0027s lifecycle meals intake, inclusive of previously inputted meals and their dates: `listMealsAll`","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"6. List entire app\u0027s lifecycle drinks intake, inclusive of previously inputted drinks and their dates: `listDrinksAll`","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"7. List entire app\u0027s lifecycle exercises done, inclusive of previously inputted exercises and their dates: `listExercisesAll`","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"8. List everything inputted for the entire app\u0027s lifecycle: `listEverythingAll`","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"9. List meal intake for a certain date: `listMeals d/[DATE]`","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"10. List drink intake for a certain date: `listDrinks d/[DATE]`","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"11. List exercise done for a certain date: `listExercises d/[DATE]`","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"12. List entire food intake and exercise done for a certain date: `listEverything d/[DATE]`","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"### 5 For users to edit existing data","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"1. Edit the serving size of a meal that was inputted in the day: `editMeal`","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"2. Edit the volume of a drink that was inputted in the day: `editDrink`","lastModifiedDate":"2024-04-15"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"3. Edit total water intake of the day: `editWater`","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"### 6 For users to delete existing data","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"claribelho"},"content":"1. Delete a meal entry: `deleteMeal`","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"2. Delete a drink entry: `deleteDrink`","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"3. Delete an exercise entry: `deleteExercise`","lastModifiedDate":"2024-04-15"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":81,"author":{"gitId":"claribelho"},"content":"### 7 For users to clear all data","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"1. Clear all entries of meals, drinks and exercise: `clear`","lastModifiedDate":"2024-04-15"},{"lineNumber":83,"author":{"gitId":"claribelho"},"content":"---  ","lastModifiedDate":"2024-04-15"},{"lineNumber":84,"author":{"gitId":"claribelho"},"content":"## Exit the program","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"claribelho"},"content":"Close the application and save all the changes made: `exit`","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"jasonlienardi":5,"BryanCastorius":1,"claribelho":79}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"    mainClass.set(\"seedu.fitnus.FitNus\")","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"    archiveBaseName.set(\"fitnus\")","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"claribelho":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |         Name          |               Github Profile                | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"BryanCastorius"},"content":"--------|:---------------------:|:-------------------------------------------:|:---------:","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"jasonlienardi"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |    Edward Humianto    |   [Github](https://github.com/edwardhumi)   | [Portfolio](team/edwardhumi.md)","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"jasonlienardi"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |    Jason Lienardi     | [Github](https://github.com/jasonlienardi)  | [Portfolio](team/jasonlienardi.md)","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"jasonlienardi"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto)  |      Claribel Ho      |  [Github](https://github.com/claribelho)   | [Portfolio](team/claribelho.md)","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Bryan Castorius Halim | [Github](https://github.com/BryanCastorius) | [Portfolio](team/bryancastorius.md)","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"jasonlienardi":4,"BryanCastorius":1,"-":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BryanCastorius"},"content":"\u003clink rel\u003d\"stylesheet\" href\u003d\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"BryanCastorius"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"## Table of Contents","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"BryanCastorius"},"content":"* [Acknowledgements](#acknowledgements)","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"BryanCastorius"},"content":"* [Design](#design)","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"BryanCastorius"},"content":"  * [Architecture](#architecture)","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"BryanCastorius"},"content":"  * [Ui Component](#ui-component)","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"BryanCastorius"},"content":"  * [Storage Component](#storage-component)","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"BryanCastorius"},"content":"  * [User Component](#user-component)","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"BryanCastorius"},"content":"  * [Exercise Component](#exercise-component)","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"BryanCastorius"},"content":"  * [Drink Component](#drink-component)","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"BryanCastorius"},"content":"  * [Meal Component](#meal-component)","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"BryanCastorius"},"content":"* [Implementation](#implementation)","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"BryanCastorius"},"content":"  * [Information on a Particular Meal Command](#information-on-a-particular-meal-command)","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"BryanCastorius"},"content":"  * [Eat Command](#eat-command)","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"BryanCastorius"},"content":"  * [Edit Meal Command](#edit-meal-command)","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"BryanCastorius"},"content":"  * [New Meal Command](#new-meal-command)","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"BryanCastorius"},"content":"* [Product Scope](#product-scope)","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"BryanCastorius"},"content":"* [User Stories](#user-stories)","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"BryanCastorius"},"content":"* [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"BryanCastorius"},"content":"* [Instructions for Manual Testing](#instructions-for-manual-testing)","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"BryanCastorius"},"content":"* [Missing/Corrupted Data Files](#missingcorrupted-data-files)","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"BryanCastorius"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"BryanCastorius"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"BryanCastorius"},"content":"Below are the references used on the project:","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"1. The general idea for the project stemmed from the ip project: [ip](https://nus-cs2113-ay2324s2.github.io/website/admin/ip-overview.html)","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"BryanCastorius"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"BryanCastorius"},"content":"## Design","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"BryanCastorius"},"content":"### Architecture","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"BryanCastorius"},"content":"The architecture diagram belows shows the overall design of our FitNUS CLI app and how each component interact with each other.","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"BryanCastorius"},"content":"![Architecture Diagram](diagrams/diagrams_png/ArchitectureDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"BryanCastorius"},"content":"**Main Components of The Architecture**","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"BryanCastorius"},"content":"- `FitNUS`: FitNUS main code which runs the program until termination","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"BryanCastorius"},"content":"- `Ui`: The user interface of the app that reads in user input","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"edwardhumi"},"content":"- `Storage`: Handles storage of all `meal`, `drink` and `exercise` that the user has input","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"BryanCastorius"},"content":"- `Parser`: Parses user input","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"BryanCastorius"},"content":"- `User`: Handles user input and stores the `Exercise`, `Drink`, `Meal`, and `Water` created by user","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"BryanCastorius"},"content":"- `Date`: Handles user\u0027s local machine date","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"BryanCastorius"},"content":"- `ExerciseList`: Exercises completed and its duration created by user","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"BryanCastorius"},"content":"- `DrinkList`: Drinks intake (including water) and its nutritional values created by user","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"BryanCastorius"},"content":"- `MealList`: Meals intake and its nutritional values created by user","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"### Ui Component","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"#### Sequence Diagram","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"_Note: The following sequence diagrams captures the interactions only between the Fitnus, Ui and Parser classes_","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"BryanCastorius"},"content":"![Ui Sequence Diagram](diagrams/diagrams_png/ParserSequenceDiagram.png)         ","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"When the user first starts the application, the Ui class will be constructed. Within the Ui class, Scanner and Parser ","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"similarly will be constructed.","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"The Ui class will continuously read the user input:","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"- If the user input DOES NOT correspond to \"exit\", Ui will pass the user input to Parser class. Parser class will both ","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"  parse and handle the command.","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"- Else if the user input corresponds to \"exit\", Ui will handle the exit.","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"### Storage Component","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"edwardhumi"},"content":"#### Description","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"edwardhumi"},"content":"The Ui component will create a `StorageManager` to manage the reading and writing of the `Storage` (meal, drink, and exercise).","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"edwardhumi"},"content":"There are two types of data being stored, one to keep track of what the user has inputted to the app, and one to keep track","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"edwardhumi"},"content":"of the nutritional information of the known meal/drinks/exercise.","lastModifiedDate":"2024-04-14"},{"lineNumber":77,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"edwardhumi"},"content":"#### Implementation","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"edwardhumi"},"content":"- File Location:","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"edwardhumi"},"content":"  - The user\u0027s meal, drinks, and exercise data is stored into text files in ","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"edwardhumi"},"content":"  `./data/MealList.txt`, `./data/DrinkList.txt`, and `./data/ExerciseList.txt`, respectively. ","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"edwardhumi"},"content":"  - The nutritional information of all available meals, drinks, and exercises is stored into csv files in","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"edwardhumi"},"content":"  `./db/Meal_db.csv`, `./db/Drink_db.csv`, `./db/Exercise_db.csv`, respectively.","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"edwardhumi"},"content":"- Format:","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"edwardhumi"},"content":"  - All `Meal` objects in `MealList` will be formatted and stored in a string format of \"`MEAL_NAME`,`SERVING_SIZE`,`DATE`\"","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"edwardhumi"},"content":"  - All `Drink` objects in `DrinkList` will be formatted and stored in a string format of \"`DRINK_NAME`,`SERVING_VOLUME`,`DATE`\"","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"edwardhumi"},"content":"  - All `Exercise` objects in `ExerciseList` will be formatted and stored in a string format of \"`EXERCISE_NAME`,`DURATION`,`INTENSITY`,`DATE`\"","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"edwardhumi"},"content":"  - All meal nutrients are stored in the format of \"`MEAL_NAME`,`CALORIES`,`CARBS`,`PROTEIN`,`FAT`,`FIBER`,`SUGAR`\"","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"edwardhumi"},"content":"  - All drink nutrients are stored in the format of \"`DRINK_NAME`,`CALORIES`,`CARBS`,`SUGAR`,`PROTEIN`,`FAT`\"","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"edwardhumi"},"content":"  - All exercise information is stored in the format of \"`EXERCISE_NAME`,`HIGH_INTENSITY`,`MEDIUM_INTENSITY`,`LOW_INTENSITY`\"","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"edwardhumi"},"content":"- Loading: When the app starts, the `StorageManager` will load and parse all the nutrient information from the csv files and put it into ","lastModifiedDate":"2024-04-14"},{"lineNumber":92,"author":{"gitId":"edwardhumi"},"content":"a HashMap in the `Meal`, `Drink`, and `Exercise` class. However, if the csv files are not found, it will create a new csv file","lastModifiedDate":"2024-04-14"},{"lineNumber":93,"author":{"gitId":"edwardhumi"},"content":"and store some pre-defined contents. Then, `StorageManager` will load and parse all the user data from the txt files and append it","lastModifiedDate":"2024-04-14"},{"lineNumber":94,"author":{"gitId":"edwardhumi"},"content":"into list in the `MealList`, `DrinkList`, and `ExerciseList`. If the txt files are not found, it will create a new txt file.","lastModifiedDate":"2024-04-14"},{"lineNumber":95,"author":{"gitId":"edwardhumi"},"content":"- Writing: When the user enter the `exit` command, the `StorageManager` will retrieve all the `Meal`, `Drink`, and `Exercise` objects","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"edwardhumi"},"content":"from the list and format it into string. Then, it will append all the strings and write the files to the corresponding `Storage`.","lastModifiedDate":"2024-04-14"},{"lineNumber":97,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"edwardhumi"},"content":"#### Class Diagram","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"BryanCastorius"},"content":"![Storage Class Diagram](diagrams/diagrams_png/StorageClassDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":100,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"claribelho"},"content":"#### Sequence Diagram","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"claribelho"},"content":"_Note: The following sequence diagram captures the interactions only between the Ui, Storage and StorageManager ","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"claribelho"},"content":"classes when loading and saving data.  ","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"claribelho"},"content":"XYZ is used as a placeholder for Meal / Drink / Exercise for diagram simplicity._ ","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"claribelho"},"content":"**_Sequence Diagram_**: When **loading** saved data upon starting the application:","lastModifiedDate":"2024-04-15"},{"lineNumber":107,"author":{"gitId":"claribelho"},"content":"\u003cimg src\u003d\"diagrams/diagrams_png/StorageManagerLoadingSequenceDiagram.png\" alt\u003d\"drawing\" width\u003d\"900\" style\u003d\"display:block; margin: 0 auto\"/\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":108,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":109,"author":{"gitId":"claribelho"},"content":"Storage Manager has to load both the stored nutritional content/calories burnt and any user saved data.   ","lastModifiedDate":"2024-04-15"},{"lineNumber":110,"author":{"gitId":"claribelho"},"content":"Exceptions are caught if the file to load is not found and if the file to load has been manipulated.  ","lastModifiedDate":"2024-04-15"},{"lineNumber":111,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":112,"author":{"gitId":"claribelho"},"content":"**_Sequence Diagram_**: When **saving** data upon exiting the application:","lastModifiedDate":"2024-04-15"},{"lineNumber":113,"author":{"gitId":"claribelho"},"content":"\u003cimg src\u003d\"diagrams/diagrams_png/StorageManagerSavingSequenceDiagram.png\" alt\u003d\"drawing\" width\u003d\"985\" style\u003d\"display:block; margin: 0 auto\"/\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":114,"author":{"gitId":"claribelho"},"content":"Storage Manager has to save both the updated nutritional content/calories burnt and any user inputted data.","lastModifiedDate":"2024-04-15"},{"lineNumber":115,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"claribelho"},"content":"### User Component","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"claribelho"},"content":"#### Description","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"claribelho"},"content":"The User component will create MealList, DrinkList and ExerciseList for the user to track their data. ","lastModifiedDate":"2024-04-15"},{"lineNumber":119,"author":{"gitId":"claribelho"},"content":"Otherwise, this component is only in-charge of handling view, listEverything, recommend and clear commands.","lastModifiedDate":"2024-04-15"},{"lineNumber":120,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":121,"author":{"gitId":"claribelho"},"content":"#### Implementation","lastModifiedDate":"2024-04-14"},{"lineNumber":122,"author":{"gitId":"BryanCastorius"},"content":"![User Class Diagram](diagrams/diagrams_png/UserClassDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":123,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":124,"author":{"gitId":"claribelho"},"content":"**_User Class:_**","lastModifiedDate":"2024-04-15"},{"lineNumber":125,"author":{"gitId":"claribelho"},"content":"- Attributes:","lastModifiedDate":"2024-04-15"},{"lineNumber":126,"author":{"gitId":"claribelho"},"content":"  - `myMealList:` Represents the user\u0027s class that managers the meal lists. Multiplicity \u003d 1.","lastModifiedDate":"2024-04-15"},{"lineNumber":127,"author":{"gitId":"claribelho"},"content":"  - `myDrinkList:` Represents the user\u0027s class that managers the drink lists. Multiplicity \u003d 1.","lastModifiedDate":"2024-04-15"},{"lineNumber":128,"author":{"gitId":"claribelho"},"content":"  - `myExerciseList:` Represents the user\u0027s class that managers the exercise lists. Multiplicity \u003d 1.","lastModifiedDate":"2024-04-15"},{"lineNumber":129,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":130,"author":{"gitId":"claribelho"},"content":"- Constructor:","lastModifiedDate":"2024-04-15"},{"lineNumber":131,"author":{"gitId":"claribelho"},"content":"  - `User()`: A MealList, DrinkList and ExerciseList is initialised for the user to","lastModifiedDate":"2024-04-15"},{"lineNumber":132,"author":{"gitId":"claribelho"},"content":"    track their data. However, methods to handle these lists will be handled in the respective MealList, DrinkList and","lastModifiedDate":"2024-04-15"},{"lineNumber":133,"author":{"gitId":"claribelho"},"content":"    ExerciseList classes.","lastModifiedDate":"2024-04-15"},{"lineNumber":134,"author":{"gitId":"claribelho"},"content":"- Methods:","lastModifiedDate":"2024-04-14"},{"lineNumber":135,"author":{"gitId":"claribelho"},"content":"  - `handleViewCalories()`: Prints the user\u0027s net calorie intake of the day.","lastModifiedDate":"2024-04-14"},{"lineNumber":136,"author":{"gitId":"claribelho"},"content":"  - `handleViewCarbohydrates()`: Prints the user\u0027s total carbohydrates intake of the day.","lastModifiedDate":"2024-04-14"},{"lineNumber":137,"author":{"gitId":"claribelho"},"content":"  - `handleViewProteins()`: Prints the user\u0027s total protein intake of the day.","lastModifiedDate":"2024-04-14"},{"lineNumber":138,"author":{"gitId":"claribelho"},"content":"  - `handleViewFiber()`: Prints the user\u0027s total fiber intake of the day.","lastModifiedDate":"2024-04-14"},{"lineNumber":139,"author":{"gitId":"claribelho"},"content":"  - `handleViewFat()`: Prints the user\u0027s total fat intake of the day.","lastModifiedDate":"2024-04-14"},{"lineNumber":140,"author":{"gitId":"claribelho"},"content":"  - `handleViewSugar()`: Prints the user\u0027s total sugar intake of the day.","lastModifiedDate":"2024-04-14"},{"lineNumber":141,"author":{"gitId":"claribelho"},"content":"  - `handleListEverything()`: Prints all meals and drinks that the user has inputted today.","lastModifiedDate":"2024-04-14"},{"lineNumber":142,"author":{"gitId":"claribelho"},"content":"  - `handleListEverythingAll()`: Prints all meals and drinks that the user has inputted of all-time.","lastModifiedDate":"2024-04-14"},{"lineNumber":143,"author":{"gitId":"claribelho"},"content":"  - `handleListEverythingDate()`: Prints all meals and drinks that the user has inputted on a specified date.","lastModifiedDate":"2024-04-14"},{"lineNumber":144,"author":{"gitId":"claribelho"},"content":"  - `handleClear()`: Clears all user\u0027s entries of the day.","lastModifiedDate":"2024-04-14"},{"lineNumber":145,"author":{"gitId":"claribelho"},"content":"  - `handleRecommendations()`: Give recommendations to the user based on their calorie and water intake.","lastModifiedDate":"2024-04-14"},{"lineNumber":146,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":147,"author":{"gitId":"claribelho"},"content":"#### Sequence Diagram","lastModifiedDate":"2024-04-14"},{"lineNumber":148,"author":{"gitId":"claribelho"},"content":"For diagram simplicity, the following choice was made when creating the diagram:","lastModifiedDate":"2024-04-15"},{"lineNumber":149,"author":{"gitId":"claribelho"},"content":"- For the method where the user would like to view their nutrional content (handleViewXYZ), XYZ is used as a ","lastModifiedDate":"2024-04-15"},{"lineNumber":150,"author":{"gitId":"claribelho"},"content":"  placeholder for the specified nutritional content (e.g. calories, carbohydrates, protein etc.)","lastModifiedDate":"2024-04-15"},{"lineNumber":151,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":152,"author":{"gitId":"claribelho"},"content":"\u003cimg src\u003d\"diagrams/diagrams_png/UserViewXYZSequenceDiagram.png\" alt\u003d\"drawing\" width\u003d\"985\" style\u003d\"display:block; margin: 0 auto\"/\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":153,"author":{"gitId":"claribelho"},"content":"The Sequence Diagram above shows the interaction between the relevant classes when handleViewXYZ() is called by ","lastModifiedDate":"2024-04-15"},{"lineNumber":154,"author":{"gitId":"claribelho"},"content":"Parser.  ","lastModifiedDate":"2024-04-15"},{"lineNumber":155,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":156,"author":{"gitId":"claribelho"},"content":"_**How it works:**_  ","lastModifiedDate":"2024-04-15"},{"lineNumber":157,"author":{"gitId":"claribelho"},"content":"The method in User will iterate through the user\u0027s MealList, DrinkList and ExerciseList each time it is called to ","lastModifiedDate":"2024-04-15"},{"lineNumber":158,"author":{"gitId":"claribelho"},"content":"obtain the required XYZ value of each meal and/or drink and/or exercise.  ","lastModifiedDate":"2024-04-15"},{"lineNumber":159,"author":{"gitId":"claribelho"},"content":"This idea is similarly used when implementing the `handleListEverything` methods.","lastModifiedDate":"2024-04-15"},{"lineNumber":160,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":161,"author":{"gitId":"BryanCastorius"},"content":"### Exercise Component","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"BryanCastorius"},"content":"![Exercise Class Diagram](diagrams/diagrams_png/ExerciseListClassDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":163,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"BryanCastorius"},"content":"1. Upon starting up the application, User will call `loadExercise` to fetch all data from `ExerciseList.txt` and add it into `exerciseListAll`.","lastModifiedDate":"2024-04-15"},{"lineNumber":165,"author":{"gitId":"BryanCastorius"},"content":"2. A `User` class consists of zero to as many `Exercise` objects in the ArrayList.","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"BryanCastorius"},"content":"3. Each `Exercise` contains exactly one enumeration of `ExerciseIntensity`.","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"BryanCastorius"},"content":"### Drink Component","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"claribelho"},"content":"\u003cimg src\u003d\"diagrams/diagrams_png/DrinkListClassDiagram.png\" alt\u003d\"drawing\" width\u003d\"600\"/\u003e   ","lastModifiedDate":"2024-04-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"BryanCastorius"},"content":"1. Upon starting up the application, User will call `loadDrink` to fetch all data from `DrinkList.txt` and add it into `drinkListAll`.  ","lastModifiedDate":"2024-04-15"},{"lineNumber":171,"author":{"gitId":"BryanCastorius"},"content":"2. A `User` class consists of zero to as many `Drink` objects in the ArrayList and zero to as many `Water` objects in the ArrayList.   ","lastModifiedDate":"2024-04-15"},{"lineNumber":172,"author":{"gitId":"BryanCastorius"},"content":"### Meal Component","lastModifiedDate":"2024-04-14"},{"lineNumber":173,"author":{"gitId":"BryanCastorius"},"content":"![Meal Class Diagram](diagrams/diagrams_png/MealListClassDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"BryanCastorius"},"content":"1. Upon starting up the application, User will call `loadMeal` to fetch all data from `Mealist.txt` and add it into `mealListAll`.","lastModifiedDate":"2024-04-15"},{"lineNumber":176,"author":{"gitId":"BryanCastorius"},"content":"2. A `User` class consists of zero to as many `Meal` objects in the ArrayList.","lastModifiedDate":"2024-04-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":178,"author":{"gitId":"BryanCastorius"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":179,"author":{"gitId":"BryanCastorius"},"content":"## Implementation","lastModifiedDate":"2024-04-03"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":181,"author":{"gitId":"BryanCastorius"},"content":"### Information on a Particular Meal Command","lastModifiedDate":"2024-04-15"},{"lineNumber":182,"author":{"gitId":"BryanCastorius"},"content":"The `infoMeal` command allows user to obtain the nutritional values (protein, calories, carbs, etc.) of a particular ","lastModifiedDate":"2024-04-15"},{"lineNumber":183,"author":{"gitId":"BryanCastorius"},"content":"meal. The following sequence diagram shows the execution of the `infoMeal` command","lastModifiedDate":"2024-04-15"},{"lineNumber":184,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":185,"author":{"gitId":"BryanCastorius"},"content":"![InfoMeal Sequence Diagram](diagrams/diagrams_png/InfoMealSequenceDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":186,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":187,"author":{"gitId":"BryanCastorius"},"content":"1. The user inputs an `infoMeal` command of the format `infoMeal m/MEAL` in this example we use `infoMeal m/ chicken rice` which is inputted to the `ui` object","lastModifiedDate":"2024-04-15"},{"lineNumber":188,"author":{"gitId":"BryanCastorius"},"content":"2. The `ui` object calls the `parseCommand()` method of the `parser` object","lastModifiedDate":"2024-04-15"},{"lineNumber":189,"author":{"gitId":"BryanCastorius"},"content":"3. The parser parses the command and calls the appropriate method, which in this case is `handleInfoMeal()` of `Meal` class","lastModifiedDate":"2024-04-15"},{"lineNumber":190,"author":{"gitId":"BryanCastorius"},"content":"4. The `Meal` class then calls the `parseInfoMeal` method to retrieve the meal name from the command","lastModifiedDate":"2024-04-15"},{"lineNumber":191,"author":{"gitId":"BryanCastorius"},"content":"5. After obtaining the name of the meal from `parser` object, the `Meal` class will print out the nutrient details of that particular meal.","lastModifiedDate":"2024-04-15"},{"lineNumber":192,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":193,"author":{"gitId":"jasonlienardi"},"content":"### Eat Command","lastModifiedDate":"2024-04-15"},{"lineNumber":194,"author":{"gitId":"jasonlienardi"},"content":"The `eat` command is responsible for handling the tracking of meal and adding it to the Meal List. ","lastModifiedDate":"2024-04-15"},{"lineNumber":195,"author":{"gitId":"jasonlienardi"},"content":"The following sequence diagram shows the execution of the `eat` command.","lastModifiedDate":"2024-04-15"},{"lineNumber":196,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":197,"author":{"gitId":"BryanCastorius"},"content":"![Eat Command Sequence Diagram](diagrams/diagrams_png/EatCommandSequenceDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":198,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":199,"author":{"gitId":"jasonlienardi"},"content":"1. The user inputs an `eat` command of the format `eat m/MEAL s/SERVING_SIZE` into the `ui` object","lastModifiedDate":"2024-04-15"},{"lineNumber":200,"author":{"gitId":"jasonlienardi"},"content":"2. The `ui` object calls the `parseCommand()` method of the `parser` object","lastModifiedDate":"2024-04-15"},{"lineNumber":201,"author":{"gitId":"jasonlienardi"},"content":"3. The parser parses the command and calls the appropriate method, which in this case is `handleMeal()` method of `MealList`","lastModifiedDate":"2024-04-15"},{"lineNumber":202,"author":{"gitId":"jasonlienardi"},"content":"4. The `MealList` object then calls the `parseMeal` method to retrieve the information from the command such as the meal name and serving size","lastModifiedDate":"2024-04-15"},{"lineNumber":203,"author":{"gitId":"jasonlienardi"},"content":"5. With the meal details retrieved from the parser, a new `Meal` object with the given parameters (meal name, serving size) is created and returned to `MealList`","lastModifiedDate":"2024-04-15"},{"lineNumber":204,"author":{"gitId":"jasonlienardi"},"content":"6. When creating a new `Meal` object, it will call its own method `setNutrientDetails()` to set the nutrients for that specific meal using the meal name","lastModifiedDate":"2024-04-15"},{"lineNumber":205,"author":{"gitId":"jasonlienardi"},"content":"7. The newly created `Meal` object is then added to the `MealList`","lastModifiedDate":"2024-04-15"},{"lineNumber":206,"author":{"gitId":"jasonlienardi"},"content":"8. Upon successful tracking of a meal a confirmation message is printed","lastModifiedDate":"2024-04-15"},{"lineNumber":207,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":208,"author":{"gitId":"jasonlienardi"},"content":"Note: The implementation for `drink` and `exercise` command have similar sequence diagrams","lastModifiedDate":"2024-04-15"},{"lineNumber":209,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":210,"author":{"gitId":"jasonlienardi"},"content":"### Edit Meal Command","lastModifiedDate":"2024-04-15"},{"lineNumber":211,"author":{"gitId":"jasonlienardi"},"content":"The `editMeal` command allows users to edit the serving sizes of their meals that have already been added to the Meal List.","lastModifiedDate":"2024-04-15"},{"lineNumber":212,"author":{"gitId":"jasonlienardi"},"content":"The following sequence diagram shows the execution of the `editMeal` command.","lastModifiedDate":"2024-04-15"},{"lineNumber":213,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":214,"author":{"gitId":"BryanCastorius"},"content":"![Edit Meal Command Sequence Diagram](diagrams/diagrams_png/EditMealCommandSequenceDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":215,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":216,"author":{"gitId":"jasonlienardi"},"content":"1. The user inputs an `editMeal` command of the format `editMeal INDEX s/NEW_SERVING_SIZE` into the `ui` object","lastModifiedDate":"2024-04-15"},{"lineNumber":217,"author":{"gitId":"jasonlienardi"},"content":"2. The `ui` object calls the `parseCommand()` method of the `parser` object","lastModifiedDate":"2024-04-15"},{"lineNumber":218,"author":{"gitId":"jasonlienardi"},"content":"3. The parser parses the command and calls the appropriate method, which in this case is `handleEditMealServingSize()` method of `MealList`","lastModifiedDate":"2024-04-15"},{"lineNumber":219,"author":{"gitId":"jasonlienardi"},"content":"4. The `MealList` object then calls the `parseEditMeal` method to retrieve the information from the command such as the intended meal index and current serving size","lastModifiedDate":"2024-04-15"},{"lineNumber":220,"author":{"gitId":"jasonlienardi"},"content":"5. With the meal name and current serving size retrieved, the `Meallist` objects retrieves the name and nutrient details of the meal by calling the `getName()` and `getData()` methods of the `Meal` object","lastModifiedDate":"2024-04-15"},{"lineNumber":221,"author":{"gitId":"jasonlienardi"},"content":"6. A new `Meal` object with the updated serving size is created and returned to `MealList`","lastModifiedDate":"2024-04-15"},{"lineNumber":222,"author":{"gitId":"jasonlienardi"},"content":"7. The newly created `Meal` object is then replaces the meal at the specified position in this list by calling the `set()` method of `MealList`","lastModifiedDate":"2024-04-15"},{"lineNumber":223,"author":{"gitId":"jasonlienardi"},"content":"8. Upon successful tracking of a meal a confirmation message is printed","lastModifiedDate":"2024-04-15"},{"lineNumber":224,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":225,"author":{"gitId":"jasonlienardi"},"content":"Note: The implementation for `editDrink` and `editWater` command have similar sequence diagrams","lastModifiedDate":"2024-04-15"},{"lineNumber":226,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":227,"author":{"gitId":"jasonlienardi"},"content":"### New Meal Command","lastModifiedDate":"2024-04-15"},{"lineNumber":228,"author":{"gitId":"jasonlienardi"},"content":"The `newMeal` command allows users to add new meal to the list of available meals by specifying the meal name and its nutrients.","lastModifiedDate":"2024-04-15"},{"lineNumber":229,"author":{"gitId":"jasonlienardi"},"content":"The following sequence diagram shows the execution of the `newMeal` command.","lastModifiedDate":"2024-04-15"},{"lineNumber":230,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":231,"author":{"gitId":"BryanCastorius"},"content":"![New Meal Command Sequence Diagram](diagrams/diagrams_png/NewMealCommandSequenceDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":232,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":233,"author":{"gitId":"jasonlienardi"},"content":"1. The user inputs an `newMeal` command of the format `newMeal MEAL_NAME,CALORIES,CARBS,PROTEIN,FAT,FIBER,SUGAR` into the `ui` object","lastModifiedDate":"2024-04-15"},{"lineNumber":234,"author":{"gitId":"jasonlienardi"},"content":"2. The `ui` object calls the `parseCommand()` method of the `parser` object","lastModifiedDate":"2024-04-15"},{"lineNumber":235,"author":{"gitId":"jasonlienardi"},"content":"3. The parser parses the command and calls the appropriate method, which in this case is `handleAddNewMealNutrient()` method of `MealList`","lastModifiedDate":"2024-04-15"},{"lineNumber":236,"author":{"gitId":"jasonlienardi"},"content":"4. The `MealList` object then calls the `parseNewMeal` method to retrieve the information from the command such as the mean name, calories, carbs, protein, fat, fiber and sugar","lastModifiedDate":"2024-04-15"},{"lineNumber":237,"author":{"gitId":"jasonlienardi"},"content":"5. The Nutrient of the details are then stored in the `nutrientDetails` hashmap attribute of the `Meals` class using the `put()` method of the hashmap","lastModifiedDate":"2024-04-15"},{"lineNumber":238,"author":{"gitId":"jasonlienardi"},"content":"6. Upon successful tracking of a meal a confirmation message is printed","lastModifiedDate":"2024-04-15"},{"lineNumber":239,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":240,"author":{"gitId":"jasonlienardi"},"content":"Note: The implementation for `newDrink` and `newExercise` command have similar sequence diagrams","lastModifiedDate":"2024-04-15"},{"lineNumber":241,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":242,"author":{"gitId":"jasonlienardi"},"content":"### Delete Meal Command","lastModifiedDate":"2024-04-15"},{"lineNumber":243,"author":{"gitId":"jasonlienardi"},"content":"The `deleteMeal` command allows users to delete a meal from the list of meals they have consumed today by specifying the meals index in accordance with the `listMeals` command.","lastModifiedDate":"2024-04-15"},{"lineNumber":244,"author":{"gitId":"jasonlienardi"},"content":"1. The user inputs an `deleteMeal` command of the format `deleteMeal INDEX` into the `ui` object","lastModifiedDate":"2024-04-15"},{"lineNumber":245,"author":{"gitId":"jasonlienardi"},"content":"2. The `ui` object calls the `parseCommand()` method of the `parser` object","lastModifiedDate":"2024-04-15"},{"lineNumber":246,"author":{"gitId":"jasonlienardi"},"content":"3. The parser parses the command and calls the appropriate method, which in this case is `handleDeleteMeal()` method of `MealList`","lastModifiedDate":"2024-04-15"},{"lineNumber":247,"author":{"gitId":"jasonlienardi"},"content":"4. The `MealList` object then calls the `parseDeleteMeal` method to retrieve the information from the command, which is the index of the meal to be deleted.","lastModifiedDate":"2024-04-15"},{"lineNumber":248,"author":{"gitId":"jasonlienardi"},"content":"5. The meal is then removed by calling the `remove()` method of `MealList` and passing the index of the specified meal as a parameter","lastModifiedDate":"2024-04-15"},{"lineNumber":249,"author":{"gitId":"jasonlienardi"},"content":"6. Upon successful deletion of a meal a confirmation message is printed","lastModifiedDate":"2024-04-15"},{"lineNumber":250,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":251,"author":{"gitId":"BryanCastorius"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":252,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":253,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":254,"author":{"gitId":"jasonlienardi"},"content":"- Have a need to manage their dietary intake and exercise routines effectively.","lastModifiedDate":"2024-04-01"},{"lineNumber":255,"author":{"gitId":"jasonlienardi"},"content":"- Prefer desktop applications over other types of platforms.","lastModifiedDate":"2024-04-01"},{"lineNumber":256,"author":{"gitId":"jasonlienardi"},"content":"- Can type quickly and prefer typing over mouse interactions.","lastModifiedDate":"2024-04-01"},{"lineNumber":257,"author":{"gitId":"jasonlienardi"},"content":"- Are reasonably comfortable using command-line interface (CLI) applications.","lastModifiedDate":"2024-04-01"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":259,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":261,"author":{"gitId":"jasonlienardi"},"content":"The fitness app aims to help users manage their dietary habits and exercise routines more efficiently compared to traditional GUI-driven apps. ","lastModifiedDate":"2024-04-01"},{"lineNumber":262,"author":{"gitId":"BryanCastorius"},"content":"By offering a streamlined interface optimized for keyboard input and CLI interactions, users can track their meals, drinks, and exercises swiftly, allowing them to focus more on their fitness and nutritional goals and less on navigating through complex user interfaces.","lastModifiedDate":"2024-04-02"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":264,"author":{"gitId":"BryanCastorius"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":267,"author":{"gitId":"BryanCastorius"},"content":"| Version | As a ... | I want to ...                                                                                                                         | So that I can ...                                                                                                     |","lastModifiedDate":"2024-04-15"},{"lineNumber":268,"author":{"gitId":"BryanCastorius"},"content":"|---------|------|---------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-15"},{"lineNumber":269,"author":{"gitId":"BryanCastorius"},"content":"| v1.0    | new user | view all the commands on how to use the app                                                                                           | navigate through the app easily and be able to use all the features                                                   |","lastModifiedDate":"2024-04-15"},{"lineNumber":270,"author":{"gitId":"BryanCastorius"},"content":"| v1.0    | user | add my daily meals and the serving for each meal                                                                                      | keep track of what I have eaten in a day                                                                              |","lastModifiedDate":"2024-04-15"},{"lineNumber":271,"author":{"gitId":"BryanCastorius"},"content":"| v1.0    | user | add my daily drinks and the volume for each drink                                                                                     | keep track of what I have drunk in a day                                                                              |","lastModifiedDate":"2024-04-15"},{"lineNumber":272,"author":{"gitId":"BryanCastorius"},"content":"| v1.0    | user | add and view my daily water intake                                                                                                    | keep track of my water intake for the day                                                                             |","lastModifiedDate":"2024-04-15"},{"lineNumber":273,"author":{"gitId":"BryanCastorius"},"content":"| v1.0    | user | list the meals I ate today                                                                                                            | view all the foods I have eaten in a day                                                                              |","lastModifiedDate":"2024-04-15"},{"lineNumber":274,"author":{"gitId":"BryanCastorius"},"content":"| v1.0    | user | list the drinks I drank today                                                                                                         | view all the drinks I have drunk in a day                                                                             |","lastModifiedDate":"2024-04-15"},{"lineNumber":275,"author":{"gitId":"BryanCastorius"},"content":"| v1.0    | user | view the nutritional information about every food and drink                                                                           | choose to stay away or consume that particular food or drink                                                          |","lastModifiedDate":"2024-04-15"},{"lineNumber":276,"author":{"gitId":"BryanCastorius"},"content":"| v1.0    | user | view all my macronutrients (protein, carbs, fat) intake for today                                                                     | make sure that I am getting enough macronutrient and not exceeding the recommended level per day                      |","lastModifiedDate":"2024-04-15"},{"lineNumber":277,"author":{"gitId":"BryanCastorius"},"content":"| v1.0    | diabetic user | view the sugar intake from my foods and drinks consumed for today                                                                     | keep track and not exacerbate my diabetes condition and damage my nerves                                              |","lastModifiedDate":"2024-04-15"},{"lineNumber":278,"author":{"gitId":"BryanCastorius"},"content":"| v1.0    | user | view my calorie intake for today                                                                                                      | increase or decrease my food/drink intake accordingly                                                                 |","lastModifiedDate":"2024-04-15"},{"lineNumber":279,"author":{"gitId":"BryanCastorius"},"content":"| v2.0    | user | add and view the exercises I have done for today                                                                                      | keep my self active and exercise frequently                                                                           |","lastModifiedDate":"2024-04-15"},{"lineNumber":280,"author":{"gitId":"BryanCastorius"},"content":"| v2.0    | user | view the calories I burned through exercising for today                                                                               | keep track of my total calorie intake and expenditure for today                                                       |","lastModifiedDate":"2024-04-15"},{"lineNumber":281,"author":{"gitId":"BryanCastorius"},"content":"| v2.0    | user | view the recommended water and calories intake for today                                                                              | easily add or decreasy my needs without having to count manually                                                      |","lastModifiedDate":"2024-04-15"},{"lineNumber":282,"author":{"gitId":"BryanCastorius"},"content":"| v2.0    | user | delete a particular drink/meal/exercise I have done for today                                                                         | delete the stuffs that I actually did not do or consume for today                                                     |","lastModifiedDate":"2024-04-15"},{"lineNumber":283,"author":{"gitId":"BryanCastorius"},"content":"| v2.0    | user | edit the serving size of a particular meal I have eaten for today                                                                     | correct mistakes I made when I added a food                                                                           |","lastModifiedDate":"2024-04-15"},{"lineNumber":284,"author":{"gitId":"BryanCastorius"},"content":"| v2.0    | user | edit the volume intake of a particular drink I have drunk for today                                                                   | correct mistakes I made when I added a drink                                                                          |","lastModifiedDate":"2024-04-15"},{"lineNumber":285,"author":{"gitId":"BryanCastorius"},"content":"| v2.0    | user | edit the water intake for today                                                                                                       | correct mistakes I made when I added water                                                                            |","lastModifiedDate":"2024-04-15"},{"lineNumber":286,"author":{"gitId":"BryanCastorius"},"content":"| v2.0    | user | add a new drink to the available drinks                                                                                               | add drinks that the app did not recognize                                                                             |","lastModifiedDate":"2024-04-15"},{"lineNumber":287,"author":{"gitId":"BryanCastorius"},"content":"| v2.0    | user | add a new meal to the available drinks                                                                                                | add meals that the app did not recognize                                                                              |","lastModifiedDate":"2024-04-15"},{"lineNumber":288,"author":{"gitId":"BryanCastorius"},"content":"| v2.0    | user | add a new exercise to the available drinks                                                                                            | add exercises that the app did not recognize                                                                          |","lastModifiedDate":"2024-04-15"},{"lineNumber":289,"author":{"gitId":"BryanCastorius"},"content":"| v2.0    | user | store and load all the meals and drinks I have consumed and also the exercises I have done throughout the entire lifecycle of the app | view all of the existing data even after I close the app                                                              |","lastModifiedDate":"2024-04-15"},{"lineNumber":290,"author":{"gitId":"BryanCastorius"},"content":"| v2.0    | user | view all the meals and drinks I have consumed and also the exercises I have done throughtout the entire lifecycle of the app          | keep a record of my exercises, macronutrients and calories I have done and consumed for a week, a month, or even more |","lastModifiedDate":"2024-04-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":294,"author":{"gitId":"BryanCastorius"},"content":"1. Should work on any mainstream OS (Linux, Windows, MacOS) as long as it has Java 11 or above installed.","lastModifiedDate":"2024-04-02"},{"lineNumber":295,"author":{"gitId":"jasonlienardi"},"content":"2. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-04-01"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":297,"author":{"gitId":"BryanCastorius"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":300,"author":{"gitId":"jasonlienardi"},"content":"* *meal* - Any food consumed.","lastModifiedDate":"2024-04-01"},{"lineNumber":301,"author":{"gitId":"jasonlienardi"},"content":"* *drink* - Any beverage consumed.","lastModifiedDate":"2024-04-01"},{"lineNumber":302,"author":{"gitId":"jasonlienardi"},"content":"* *exercise* - Any physical activity performed.","lastModifiedDate":"2024-04-01"},{"lineNumber":303,"author":{"gitId":"jasonlienardi"},"content":"* *calories* - Measure of energy derived from food.","lastModifiedDate":"2024-04-01"},{"lineNumber":304,"author":{"gitId":"jasonlienardi"},"content":"* *carbohydrates* - Macronutrient providing energy.","lastModifiedDate":"2024-04-01"},{"lineNumber":305,"author":{"gitId":"jasonlienardi"},"content":"* *proteins* - Macronutrient essential for growth and repair.","lastModifiedDate":"2024-04-01"},{"lineNumber":306,"author":{"gitId":"jasonlienardi"},"content":"* *fat* - Macronutrient important for energy storage and insulation.","lastModifiedDate":"2024-04-01"},{"lineNumber":307,"author":{"gitId":"jasonlienardi"},"content":"* *sugar* - Simple carbohydrate often added to food for sweetness.","lastModifiedDate":"2024-04-01"},{"lineNumber":308,"author":{"gitId":"jasonlienardi"},"content":"* *fiber* - Indigestible plant material aiding digestion.","lastModifiedDate":"2024-04-01"},{"lineNumber":309,"author":{"gitId":"jasonlienardi"},"content":"* *water* - Essential liquid for hydration and bodily functions.","lastModifiedDate":"2024-04-01"},{"lineNumber":310,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":311,"author":{"gitId":"BryanCastorius"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":312,"author":{"gitId":"BryanCastorius"},"content":"## Instructions for Manual Testing","lastModifiedDate":"2024-04-15"},{"lineNumber":313,"author":{"gitId":"BryanCastorius"},"content":"Given below are instructions to test the app on your own device.","lastModifiedDate":"2024-04-02"},{"lineNumber":314,"author":{"gitId":"BryanCastorius"},"content":"### Launch and Shutdown","lastModifiedDate":"2024-04-02"},{"lineNumber":315,"author":{"gitId":"BryanCastorius"},"content":"1. Initial Launch","lastModifiedDate":"2024-04-02"},{"lineNumber":316,"author":{"gitId":"BryanCastorius"},"content":"   1. Create an empty folder, download the jar file, and place the file inside the folder.","lastModifiedDate":"2024-04-02"},{"lineNumber":317,"author":{"gitId":"BryanCastorius"},"content":"   2. Open the terminal and navigate to the folder you just created.","lastModifiedDate":"2024-04-02"},{"lineNumber":318,"author":{"gitId":"BryanCastorius"},"content":"   3. Type `java -jar [name of the jar]`, e.g.`(java -jar FitNUS.jar)` on the CLI.","lastModifiedDate":"2024-04-02"},{"lineNumber":319,"author":{"gitId":"BryanCastorius"},"content":"2. Window Preference","lastModifiedDate":"2024-04-02"},{"lineNumber":320,"author":{"gitId":"BryanCastorius"},"content":"   1. Resize the window to an optimum size. Ideally full screen, as some text might not be displayed correctly.","lastModifiedDate":"2024-04-02"},{"lineNumber":321,"author":{"gitId":"BryanCastorius"},"content":"3. App Features and Commands","lastModifiedDate":"2024-04-02"},{"lineNumber":322,"author":{"gitId":"BryanCastorius"},"content":"4. Save and Shutdown","lastModifiedDate":"2024-04-02"},{"lineNumber":323,"author":{"gitId":"BryanCastorius"},"content":"   1. Type `exit` to shut down the FitNUS app.","lastModifiedDate":"2024-04-02"},{"lineNumber":324,"author":{"gitId":"BryanCastorius"},"content":"   2. Upon exiting, all entries inputted will be updated to the database locally.","lastModifiedDate":"2024-04-02"},{"lineNumber":325,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":326,"author":{"gitId":"claribelho"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":327,"author":{"gitId":"BryanCastorius"},"content":"### Basic Features","lastModifiedDate":"2024-04-15"},{"lineNumber":328,"author":{"gitId":"BryanCastorius"},"content":"Given below are the basic features of our FitNUS, do note that it\u0027s not the complete list of commands.","lastModifiedDate":"2024-04-15"},{"lineNumber":329,"author":{"gitId":"BryanCastorius"},"content":"Please refer to our User Guide for the full list of our features.","lastModifiedDate":"2024-04-15"},{"lineNumber":330,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":331,"author":{"gitId":"BryanCastorius"},"content":"#### \u003ci class\u003d\"fas fa-star\"\u003e\u003c/i\u003e Add a meal eaten: `eat`","lastModifiedDate":"2024-04-15"},{"lineNumber":332,"author":{"gitId":"BryanCastorius"},"content":"Adds a meal to the list of meals consumed today.","lastModifiedDate":"2024-04-15"},{"lineNumber":333,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":334,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `eat m/MEAL s/SERVING_SIZE`  ","lastModifiedDate":"2024-04-15"},{"lineNumber":335,"author":{"gitId":"BryanCastorius"},"content":"**Sample Input**: `eat m/Chicken Rice s/1`  ","lastModifiedDate":"2024-04-15"},{"lineNumber":336,"author":{"gitId":"BryanCastorius"},"content":"**Expected Output**:","lastModifiedDate":"2024-04-15"},{"lineNumber":337,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-15"},{"lineNumber":338,"author":{"gitId":"BryanCastorius"},"content":"Added 1 serving of chicken rice","lastModifiedDate":"2024-04-15"},{"lineNumber":339,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-15"},{"lineNumber":340,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":341,"author":{"gitId":"BryanCastorius"},"content":"#### \u003ci class\u003d\"fas fa-star\"\u003e\u003c/i\u003e Find the information about a certain meal: `infoMeal`","lastModifiedDate":"2024-04-15"},{"lineNumber":342,"author":{"gitId":"BryanCastorius"},"content":"For the specified meal, display its nutritional content **per serving** to the user.","lastModifiedDate":"2024-04-15"},{"lineNumber":343,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":344,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `infoMeal MEAL`  ","lastModifiedDate":"2024-04-15"},{"lineNumber":345,"author":{"gitId":"BryanCastorius"},"content":"**Sample Input**: `infoMeal chicken rice`  ","lastModifiedDate":"2024-04-15"},{"lineNumber":346,"author":{"gitId":"BryanCastorius"},"content":"**Expected Output**:","lastModifiedDate":"2024-04-15"},{"lineNumber":347,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-15"},{"lineNumber":348,"author":{"gitId":"BryanCastorius"},"content":"Meal: chicken rice (per serving)","lastModifiedDate":"2024-04-15"},{"lineNumber":349,"author":{"gitId":"BryanCastorius"},"content":"Calories: 400 kcal","lastModifiedDate":"2024-04-15"},{"lineNumber":350,"author":{"gitId":"BryanCastorius"},"content":"Carbs: 50 g","lastModifiedDate":"2024-04-15"},{"lineNumber":351,"author":{"gitId":"BryanCastorius"},"content":"Protein: 30 g","lastModifiedDate":"2024-04-15"},{"lineNumber":352,"author":{"gitId":"BryanCastorius"},"content":"Fat: 20 g","lastModifiedDate":"2024-04-15"},{"lineNumber":353,"author":{"gitId":"BryanCastorius"},"content":"Fiber: 10 g","lastModifiedDate":"2024-04-15"},{"lineNumber":354,"author":{"gitId":"BryanCastorius"},"content":"Sugar: 5 g","lastModifiedDate":"2024-04-15"},{"lineNumber":355,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-15"},{"lineNumber":356,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":357,"author":{"gitId":"BryanCastorius"},"content":"#### \u003ci class\u003d\"fas fa-star\"\u003e\u003c/i\u003e View daily net calorie count: `calories`","lastModifiedDate":"2024-04-15"},{"lineNumber":358,"author":{"gitId":"BryanCastorius"},"content":"Display current net calorie count **in kcal**  for the day. This takes into account the calories consumed from meals","lastModifiedDate":"2024-04-15"},{"lineNumber":359,"author":{"gitId":"BryanCastorius"},"content":"and drinks,","lastModifiedDate":"2024-04-15"},{"lineNumber":360,"author":{"gitId":"BryanCastorius"},"content":"and the calories burnt from exercise.","lastModifiedDate":"2024-04-15"},{"lineNumber":361,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":362,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `calories`    ","lastModifiedDate":"2024-04-15"},{"lineNumber":363,"author":{"gitId":"BryanCastorius"},"content":"**Expected output**:","lastModifiedDate":"2024-04-15"},{"lineNumber":364,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-15"},{"lineNumber":365,"author":{"gitId":"BryanCastorius"},"content":"Total Calories: 230 kcal","lastModifiedDate":"2024-04-15"},{"lineNumber":366,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-15"},{"lineNumber":367,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":368,"author":{"gitId":"BryanCastorius"},"content":"#### \u003ci class\u003d\"fas fa-star\"\u003e\u003c/i\u003e List today\u0027s meal intake: `listMeals`","lastModifiedDate":"2024-04-15"},{"lineNumber":369,"author":{"gitId":"BryanCastorius"},"content":"Display all the meals the user has inputted today.","lastModifiedDate":"2024-04-15"},{"lineNumber":370,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":371,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `listMeals`   ","lastModifiedDate":"2024-04-15"},{"lineNumber":372,"author":{"gitId":"BryanCastorius"},"content":"**Expected output**:","lastModifiedDate":"2024-04-15"},{"lineNumber":373,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-15"},{"lineNumber":374,"author":{"gitId":"BryanCastorius"},"content":"here\u0027s what you have eaten today","lastModifiedDate":"2024-04-15"},{"lineNumber":375,"author":{"gitId":"BryanCastorius"},"content":"1. chicken rice (serving size: 1) | date: 01-04-2024","lastModifiedDate":"2024-04-15"},{"lineNumber":376,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-15"},{"lineNumber":377,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":378,"author":{"gitId":"BryanCastorius"},"content":"#### \u003ci class\u003d\"fas fa-star\"\u003e\u003c/i\u003e Delete a certain meal entry: `deleteMeal`","lastModifiedDate":"2024-04-15"},{"lineNumber":379,"author":{"gitId":"BryanCastorius"},"content":"Delete a meal that was inputted today. You may identify the meal by its index in listMeals.","lastModifiedDate":"2024-04-15"},{"lineNumber":380,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":381,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `deleteMeal INDEX`  ","lastModifiedDate":"2024-04-15"},{"lineNumber":382,"author":{"gitId":"BryanCastorius"},"content":"**Sample Input**: `deleteMeal 1`  ","lastModifiedDate":"2024-04-15"},{"lineNumber":383,"author":{"gitId":"BryanCastorius"},"content":"**Expected output**:","lastModifiedDate":"2024-04-15"},{"lineNumber":384,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-15"},{"lineNumber":385,"author":{"gitId":"BryanCastorius"},"content":"Removed chicken rice from meals","lastModifiedDate":"2024-04-15"},{"lineNumber":386,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-15"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":388,"author":{"gitId":"BryanCastorius"},"content":"#### \u003ci class\u003d\"fas fa-star\"\u003e\u003c/i\u003e Edit an existing meal after inserted: `editMeal`","lastModifiedDate":"2024-04-15"},{"lineNumber":389,"author":{"gitId":"BryanCastorius"},"content":"For a meal that was inputted in the day, edit its serving size. You may identify the meal by its index in listMeals.","lastModifiedDate":"2024-04-15"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":391,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `editMeal INDEX s/NEW_SERVING_SIZE`  ","lastModifiedDate":"2024-04-15"},{"lineNumber":392,"author":{"gitId":"BryanCastorius"},"content":"**Sample input**: `editMeal 2 s/10`  ","lastModifiedDate":"2024-04-15"},{"lineNumber":393,"author":{"gitId":"BryanCastorius"},"content":"**Expected output**:","lastModifiedDate":"2024-04-15"},{"lineNumber":394,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-15"},{"lineNumber":395,"author":{"gitId":"BryanCastorius"},"content":"chicken rice has been edited to 10 serving(s)","lastModifiedDate":"2024-04-15"},{"lineNumber":396,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-15"},{"lineNumber":397,"author":{"gitId":"claribelho"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":398,"author":{"gitId":"claribelho"},"content":"### Missing/Corrupted Data Files","lastModifiedDate":"2024-04-15"},{"lineNumber":399,"author":{"gitId":"claribelho"},"content":"Upon launch, if there has been errors with data files, FitNUS will automatically clear past data and create a new","lastModifiedDate":"2024-04-15"},{"lineNumber":400,"author":{"gitId":"claribelho"},"content":"file.  ","lastModifiedDate":"2024-04-15"},{"lineNumber":401,"author":{"gitId":"claribelho"},"content":"**For manual clearing of files (only applicable to lists):**","lastModifiedDate":"2024-04-15"},{"lineNumber":402,"author":{"gitId":"claribelho"},"content":"1. Delete the XYZList.txt file from ./data folder","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"edwardhumi":28,"jasonlienardi":72,"BryanCastorius":194,"-":26,"claribelho":82}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"edwardhumi"},"content":"# FitNUS","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"## Project Introduction","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"FitNUS is a CLI application that aims to help combat diabetes and the overconsumption of calories, sugar, and","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"carbohydrates. Our vision is to promote healthy lifestyle amongst NUS students.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"Users are able to track the meals, drinks, and exercises they have in a day and even past records. ","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"## Setup ","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"To use the app please follow the setup procedures below:","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"1. Download the JAR file. ","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"2. Place it into an empty folder. ","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"3. Navigate to the folder you just created.","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"4. Run the JAR file with the following command:","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"-$ java -jar FitNUS.jar","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"## Features List","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"### 1 Information for users","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"1. View all possible commands: `help`","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"2. View all pre-defined meals. These meals will have their nutritional content defined per serving size and can","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"be inputted immediately: `allMeals`","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"3. View all pre-defined drinks. These drinks will have their nutritional content defined per 100ml","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"and can be inputted immediately: `allDrinks`","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"BryanCastorius"},"content":"4. Viewing all pre-defined exercises. These exercises will have the number of calories burnt for a","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"high/medium/low intensity workout defined per minute and can be inputted immediately: `allExercises`","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"### 2 For user to add data","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"1. Adds a meal to the list of meals consumed today: `eat`","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"2. Add a drink to the list of drinks consumed today: `drink`","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"3. Add an exercise to the list of exercises done: `exercise`","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"4. Add a custom new meal on top of pre-defined meals: `newMeal`","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"5. Add a custom new drink on top of pre-defined drink: `newDrink`","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"6. Add a custom new exercise on top of pre-defined exercises: `newExercise`","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"### 3 For user to retrieve data","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"1. Find nutritional content about a certain meal: `infoMeal`","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"2. Find nutritional content about a certain drink: `infoDrink`","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"3. Find the calories burnt per minute from a certain exercise: `infoExercise`","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"4. View daily net calorie count: `calories`","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"5. View daily carbohydrates consumed: `carbs`","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"6. View daily proteins consumed: `protein`","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"7. View daily fat consumed: `fat`","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"8. View daily sugar consumed: `sugar`","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"9. View daily fiber consumed: `fiber`","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"BryanCastorius"},"content":"10. View daily water consumption: `water`","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"11. View daily calories burnt: `caloriesBurnt`","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"12. View daily calories and water intake recommendation, based on current intake: `recommend`","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"    ","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"### 4 For users to view their lists and data","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"1. List today\u0027s meal intakes: `listMeals`","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"2. List today\u0027s drink intake: `listDrinks`","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"3. List today\u0027s exercises done: `listExercises`","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"4. List everything inputted today, inclusive of all meals, drinks and exercises: `listEverything`","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"5. List entire app\u0027s lifecycle meals intake, inclusive of previously inputted meals and their dates: `listMealsAll`","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"6. List entire app\u0027s lifecycle drinks intake, inclusive of previously inputted drinks and their dates: `listDrinksAll`","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"7. List entire app\u0027s lifecycle exercises done, inclusive of previously inputted exercises and their dates: `listExercisesAll`","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"8. List everything inputted for the entire app\u0027s lifecycle: `listEverythingAll`","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"9. List meal intake for a certain date: `listMeals d/[DATE]`","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"10. List drink intake for a certain date: `listDrinks d/[DATE]`","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"11. List exercise done for a certain date: `listExercises d/[DATE]`","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"12. List entire food intake and exercise done for a certain date: `listEverything d/[DATE]`","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"### 5 For users to edit existing data","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"1. Edit the serving size of a meal that was inputted in the day: `editMeal`","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"2. Edit the volume of a drink that was inputted in the day: `editDrink`","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"3. Edit total water intake of the day: `editWater`","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"### 6 For users to delete existing data","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"1. Delete a meal entry: `deleteMeal`","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"2. Delete a drink entry: `deleteDrink`","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"BryanCastorius"},"content":"3. Delete an exercise entry: `deleteExercise`","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":83,"author":{"gitId":"claribelho"},"content":"### 7 For users to clear all data","lastModifiedDate":"2024-04-15"},{"lineNumber":84,"author":{"gitId":"claribelho"},"content":"1. Clear all entries of meals, drinks and exercise: `clear`","lastModifiedDate":"2024-04-15"},{"lineNumber":85,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":86,"author":{"gitId":"claribelho"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":87,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"## Exit the program","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"BryanCastorius"},"content":"Close the application and save all the changes made: `exit`","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"edwardhumi":1,"jasonlienardi":1,"BryanCastorius":4,"-":6,"claribelho":77}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"# User Guide: FitNUS","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"BryanCastorius"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"## Project Introduction","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"FitNUS is a CLI application that aims to help combat diabetes and the overconsumption of calories, sugar, and","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":"carbohydrates. Our vision is to promote healthy lifestyle amongst NUS students.","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"Users are able to track the meals, drinks, and exercises they have in a day and even view past records.","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"BryanCastorius"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"## Table of Contents","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"* [1) Setup](#1-setup)","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"* [2) Features List](#2-features-list)","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"  * [2.1 Information for users](#21-information-for-users)","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"  * [2.2 For user to add data](#22-for-user-to-add-data)","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"  * [2.3 For data retrieval](#23-for-data-retrieval)","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"  * [2.4 For listing arrays](#24-for-listing-arrays)","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"  * [2.5 For editing existing data](#25-for-editing-existing-data)","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"  * [2.6 For deleting data](#26-for-deleting-data)","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"  * [2.7 For clearing data](#27-for-clearing-data)","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"  * [2.8 Exit program](#28-exit-program)","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"* [3) Frequently Asked Questions (FAQ)](#3-faq)","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"BryanCastorius"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"## 1) Setup","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"To use the app please follow the setup procedures below:","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"1. Download the JAR file.","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"2. Place it into an empty folder.","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"3. Navigate to the folder you just created.","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"4. Run the JAR file with the following command:","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"-$ java -jar FitNUS.jar","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"```","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"**Note**:","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"1. All files under \u0027data\u0027 and \u0027db\u0027 folders should not be modified by user.","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"2. Enter `exit` to properly close the program and save the data.   ","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"## 2) Features List   ","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"* For ease of reading this guide, _**sample input**_ is only provided if input command is not the command itself, i.e. the input is not one-word.","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"## 2.1 Information for users   ","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"### 2.1.1 Viewing all commands: `help`    ","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"Shows a list of all possible command inputs recognised by the application.","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `help`   ","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"**Expected Output**:","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"jasonlienardi"},"content":"Here\u0027s all the valid commands I recognise: ","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"jasonlienardi"},"content":"Track a meal/drink/exercise: ","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"jasonlienardi"},"content":"- Track a meal eaten: eat m/MEAL s/SERVING_SIZE","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"jasonlienardi"},"content":"- Track a drink: drink d/DRINK s/VOLUME(ML)","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"jasonlienardi"},"content":"- Track an exercise: exercise e/EXERCISE d/DURATION(MINUTES) i/INTENSITY(HIGH, MEDIUM, LOW)","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"jasonlienardi"},"content":"View available meals/drinks/exercises: ","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"- View all meals that you can input: allMeals","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"- View all drinks that you can input: allDrinks","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"- View all exercises that you can input: allExercises","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"jasonlienardi"},"content":"Find information about a meal/drink/exercise: ","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"- Find the information about a certain meal: infoMeal MEAL","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"- Find the information about a certain drink: infoDrink DRINK","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"jasonlienardi"},"content":"- Find the information about a certain exercise: infoExercise EXERCISE","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":72,"author":{"gitId":"jasonlienardi"},"content":"View nutrients and calories: ","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"- View daily calories consumed: calories","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"- View daily carbohydrates consumed: carbs","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"- View daily proteins consumed: protein","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"- View daily fat consumed: fat","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"claribelho"},"content":"- View daily sugar consumed: sugar","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"- View daily fiber consumed: fiber","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"BryanCastorius"},"content":"- View daily water consumption: water","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"jasonlienardi"},"content":"- View daily calories burnt: caloriesBurnt","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":82,"author":{"gitId":"jasonlienardi"},"content":"List Commands: ","lastModifiedDate":"2024-04-12"},{"lineNumber":83,"author":{"gitId":"jasonlienardi"},"content":"- List today\u0027s meal intake: listMeals","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"jasonlienardi"},"content":"- List today\u0027s drink intake: listDrinks","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"jasonlienardi"},"content":"- List today\u0027s exercises done: listExercises","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"jasonlienardi"},"content":"- List today\u0027s entire food intake and exercises: listEverything","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"jasonlienardi"},"content":"- List all meal intake: listMealsAll","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"jasonlienardi"},"content":"- List all drink intake: listDrinksAll","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"jasonlienardi"},"content":"- List all exercises done: listExercisesAll","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"claribelho"},"content":"- List all food intake and exercises: listEverythingAll","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"jasonlienardi"},"content":"- List meal intake for certain date: listMeals d/dd-MM-yyyy","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"jasonlienardi"},"content":"- List drink intake for certain date: listDrinks d/dd-MM-yyyy","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"jasonlienardi"},"content":"- List exercises done for certain date: listExercises d/dd-MM-yyyy","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"jasonlienardi"},"content":"- List entire food intake and exercises for certain date: listEverything d/dd-MM-yyyy","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":96,"author":{"gitId":"jasonlienardi"},"content":"Edit Commands: ","lastModifiedDate":"2024-04-12"},{"lineNumber":97,"author":{"gitId":"claribelho"},"content":"- Edit an existing meal after inserted: editMeal INDEX s/NEW_SERVING_SIZE","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"claribelho"},"content":"- Edit an existing drink after inserted: editDrink INDEX s/NEW_SERVING_SIZE","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"jasonlienardi"},"content":"- Edit total water intake after inserted: editWater s/TOTAL_WATER_INTAKE","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":101,"author":{"gitId":"jasonlienardi"},"content":"Delete Commands: ","lastModifiedDate":"2024-04-12"},{"lineNumber":102,"author":{"gitId":"claribelho"},"content":"- Delete certain meal entry: deleteMeal INDEX","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"claribelho"},"content":"- Delete certain drink entry: deleteDrink INDEX","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"jasonlienardi"},"content":"- Delete certain exercise entry: deleteExercise INDEX","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":106,"author":{"gitId":"jasonlienardi"},"content":"Adding a meal/drink/exercises to available list: ","lastModifiedDate":"2024-04-12"},{"lineNumber":107,"author":{"gitId":"jasonlienardi"},"content":"- Add a new meal to available meals: newMeal MEAL_NAME,CALORIES,CARBS,PROTEIN,FAT,FIBER,SUGAR","lastModifiedDate":"2024-04-12"},{"lineNumber":108,"author":{"gitId":"jasonlienardi"},"content":"- Add a new drink to available drinks: newDrink DRINK_NAME,CALORIES,CARBS,SUGAR,PROTEIN,FAT","lastModifiedDate":"2024-04-12"},{"lineNumber":109,"author":{"gitId":"claribelho"},"content":"- Add a new exercise to available exercises: newExercise EXERCISE_NAME,CALORIES_BURNT_HIGH,CALORIES_BURNT_MEDIUM,","lastModifiedDate":"2024-04-15"},{"lineNumber":110,"author":{"gitId":"claribelho"},"content":"CALORIES_BURNT_LOW","lastModifiedDate":"2024-04-15"},{"lineNumber":111,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":112,"author":{"gitId":"jasonlienardi"},"content":"Miscellaneous: ","lastModifiedDate":"2024-04-12"},{"lineNumber":113,"author":{"gitId":"jasonlienardi"},"content":"- View daily calories and water intake recommendation: recommend","lastModifiedDate":"2024-04-12"},{"lineNumber":114,"author":{"gitId":"claribelho"},"content":"- Clear all entries: clear","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"claribelho"},"content":"- Exit the app: exit ","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"claribelho"},"content":"### 2.1.2 Viewing all pre-defined meals: `allMeals`","lastModifiedDate":"2024-04-15"},{"lineNumber":118,"author":{"gitId":"claribelho"},"content":"Shows a list of all pre-defined meals. These meals will have their nutritional content defined per serving size and can","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"claribelho"},"content":"be inputted immediately.    ","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":121,"author":{"gitId":"claribelho"},"content":"Note: If the user has added a self-defined meal previously (using `newMeal`), this self-defined meal will also be","lastModifiedDate":"2024-04-15"},{"lineNumber":122,"author":{"gitId":"claribelho"},"content":"displayed.","lastModifiedDate":"2024-04-15"},{"lineNumber":123,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":124,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `allMeals`   ","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"BryanCastorius"},"content":"**Expected Output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"BryanCastorius"},"content":"Available meals: ","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"claribelho"},"content":"- ban mian","lastModifiedDate":"2024-04-15"},{"lineNumber":129,"author":{"gitId":"claribelho"},"content":"- tau huay","lastModifiedDate":"2024-04-15"},{"lineNumber":130,"author":{"gitId":"claribelho"},"content":"- nasi goreng","lastModifiedDate":"2024-04-15"},{"lineNumber":131,"author":{"gitId":"claribelho"},"content":"- babi kecap","lastModifiedDate":"2024-04-15"},{"lineNumber":132,"author":{"gitId":"claribelho"},"content":"- soup kambeng","lastModifiedDate":"2024-04-15"},{"lineNumber":133,"author":{"gitId":"claribelho"},"content":"- nasi lemak","lastModifiedDate":"2024-04-15"},{"lineNumber":134,"author":{"gitId":"claribelho"},"content":"- pepper lunch","lastModifiedDate":"2024-04-15"},{"lineNumber":135,"author":{"gitId":"claribelho"},"content":"- char siew rice","lastModifiedDate":"2024-04-15"},{"lineNumber":136,"author":{"gitId":"claribelho"},"content":"- pork satay with satay sauce","lastModifiedDate":"2024-04-15"},{"lineNumber":137,"author":{"gitId":"claribelho"},"content":"- roti prata","lastModifiedDate":"2024-04-15"},{"lineNumber":138,"author":{"gitId":"claribelho"},"content":"- mee goreng","lastModifiedDate":"2024-04-15"},{"lineNumber":139,"author":{"gitId":"claribelho"},"content":"- chendol","lastModifiedDate":"2024-04-15"},{"lineNumber":140,"author":{"gitId":"claribelho"},"content":"- wanton mee","lastModifiedDate":"2024-04-15"},{"lineNumber":141,"author":{"gitId":"claribelho"},"content":"- oyster omlette","lastModifiedDate":"2024-04-15"},{"lineNumber":142,"author":{"gitId":"BryanCastorius"},"content":"- pizza","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"claribelho"},"content":"- ice kachang","lastModifiedDate":"2024-04-15"},{"lineNumber":144,"author":{"gitId":"BryanCastorius"},"content":"- chicken rice","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"BryanCastorius"},"content":"- fried rice","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"BryanCastorius"},"content":"- kaya toast","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"claribelho"},"content":"- mala","lastModifiedDate":"2024-04-15"},{"lineNumber":148,"author":{"gitId":"BryanCastorius"},"content":"- laksa","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"claribelho"},"content":"- hokkien prawn mee","lastModifiedDate":"2024-04-15"},{"lineNumber":150,"author":{"gitId":"claribelho"},"content":"- durian","lastModifiedDate":"2024-04-15"},{"lineNumber":151,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"claribelho"},"content":"You may also input a meal that isn\u0027t here with newMeal.","lastModifiedDate":"2024-04-15"},{"lineNumber":153,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"claribelho"},"content":"### 2.1.3 Viewing all pre-defined drinks: `allDrinks`","lastModifiedDate":"2024-04-15"},{"lineNumber":156,"author":{"gitId":"claribelho"},"content":"Shows a list of all pre-defined drinks. These drinks will have their nutritional content defined per 100ml","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"claribelho"},"content":"and can be inputted immediately.   ","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":159,"author":{"gitId":"claribelho"},"content":"Note: If the user has added a self-defined drink previously (using `newDrink`), this self-defined drink will also be","lastModifiedDate":"2024-04-15"},{"lineNumber":160,"author":{"gitId":"claribelho"},"content":"displayed.","lastModifiedDate":"2024-04-15"},{"lineNumber":161,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":162,"author":{"gitId":"claribelho"},"content":"**Format**: allDrinks  ","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"BryanCastorius"},"content":"**Expected Output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"BryanCastorius"},"content":"Available drinks: ","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"claribelho"},"content":"- water","lastModifiedDate":"2024-04-15"},{"lineNumber":167,"author":{"gitId":"BryanCastorius"},"content":"- sprite","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"BryanCastorius"},"content":"- iced lemon tea","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"claribelho"},"content":"- milo","lastModifiedDate":"2024-04-15"},{"lineNumber":170,"author":{"gitId":"jasonlienardi"},"content":"- kopi","lastModifiedDate":"2024-04-12"},{"lineNumber":171,"author":{"gitId":"claribelho"},"content":"- soursop juice","lastModifiedDate":"2024-04-15"},{"lineNumber":172,"author":{"gitId":"claribelho"},"content":"- kopi c","lastModifiedDate":"2024-04-15"},{"lineNumber":173,"author":{"gitId":"claribelho"},"content":"- kalamansi juice","lastModifiedDate":"2024-04-15"},{"lineNumber":174,"author":{"gitId":"claribelho"},"content":"- coke","lastModifiedDate":"2024-04-15"},{"lineNumber":175,"author":{"gitId":"claribelho"},"content":"- kopi o","lastModifiedDate":"2024-04-15"},{"lineNumber":176,"author":{"gitId":"claribelho"},"content":"- plum juice","lastModifiedDate":"2024-04-15"},{"lineNumber":177,"author":{"gitId":"claribelho"},"content":"- teh c bing","lastModifiedDate":"2024-04-15"},{"lineNumber":178,"author":{"gitId":"claribelho"},"content":"- guava juice","lastModifiedDate":"2024-04-15"},{"lineNumber":179,"author":{"gitId":"claribelho"},"content":"- tiger beer","lastModifiedDate":"2024-04-15"},{"lineNumber":180,"author":{"gitId":"claribelho"},"content":"- teh tarik","lastModifiedDate":"2024-04-15"},{"lineNumber":181,"author":{"gitId":"claribelho"},"content":"- sugarcane juice","lastModifiedDate":"2024-04-15"},{"lineNumber":182,"author":{"gitId":"claribelho"},"content":"- teh","lastModifiedDate":"2024-04-15"},{"lineNumber":183,"author":{"gitId":"claribelho"},"content":"- bandung","lastModifiedDate":"2024-04-15"},{"lineNumber":184,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":185,"author":{"gitId":"claribelho"},"content":"You may also input a drink that isn\u0027t here with newDrink.","lastModifiedDate":"2024-04-15"},{"lineNumber":186,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"claribelho"},"content":"### 2.1.4 Viewing all pre-defined exercises: `allExercises`","lastModifiedDate":"2024-04-15"},{"lineNumber":189,"author":{"gitId":"claribelho"},"content":"Shows a list of all pre-defined exercises. These exercises will have the number of calories burnt for a","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"claribelho"},"content":"high/medium/low intensity workout defined per minute and can be inputted immediately.  ","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":192,"author":{"gitId":"claribelho"},"content":"Note: If the user has added a self-defined exercise previously (using `newExercise`), this self-defined exercise will","lastModifiedDate":"2024-04-15"},{"lineNumber":193,"author":{"gitId":"claribelho"},"content":"also be displayed.","lastModifiedDate":"2024-04-15"},{"lineNumber":194,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":195,"author":{"gitId":"claribelho"},"content":"**Format**: allExercises  ","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"BryanCastorius"},"content":"**Expected Output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"BryanCastorius"},"content":"Available exercises: ","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"BryanCastorius"},"content":"- running","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"BryanCastorius"},"content":"- swimming","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"jasonlienardi"},"content":"- cycling","lastModifiedDate":"2024-04-12"},{"lineNumber":202,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"claribelho"},"content":"You may also input an exercise that isn\u0027t here with newExercise.","lastModifiedDate":"2024-04-15"},{"lineNumber":204,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":205,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":206,"author":{"gitId":"claribelho"},"content":"## 2.2 For user to add data","lastModifiedDate":"2024-04-15"},{"lineNumber":207,"author":{"gitId":"claribelho"},"content":"Importantly, any user-added data will only be saved to our database when you **safely exit** our application with the","lastModifiedDate":"2024-04-15"},{"lineNumber":208,"author":{"gitId":"claribelho"},"content":"command `exit`.  Any other mode of termination will result in the loss of the inputs from this use.","lastModifiedDate":"2024-04-15"},{"lineNumber":209,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":210,"author":{"gitId":"claribelho"},"content":"### 2.2.1 Add a meal eaten: `eat`","lastModifiedDate":"2024-04-15"},{"lineNumber":211,"author":{"gitId":"claribelho"},"content":"Adds a meal to the list of meals consumed today.","lastModifiedDate":"2024-04-15"},{"lineNumber":212,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":213,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `eat m/MEAL s/SERVING_SIZE`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":214,"author":{"gitId":"BryanCastorius"},"content":"**Sample Input**: `eat m/Chicken Rice s/1`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":215,"author":{"gitId":"jasonlienardi"},"content":"**Expected Output**:","lastModifiedDate":"2024-04-01"},{"lineNumber":216,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":217,"author":{"gitId":"edwardhumi"},"content":"Added 1 serving of chicken rice","lastModifiedDate":"2024-04-02"},{"lineNumber":218,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":219,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":220,"author":{"gitId":"claribelho"},"content":"### 2.2.2 Add a drink: `drink`","lastModifiedDate":"2024-04-15"},{"lineNumber":221,"author":{"gitId":"claribelho"},"content":"Adds a drink to the list of drinks consumed today.  ","lastModifiedDate":"2024-04-15"},{"lineNumber":222,"author":{"gitId":"claribelho"},"content":"This includes adding a specified volume of water to the amount of water consumed today.","lastModifiedDate":"2024-04-15"},{"lineNumber":223,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":224,"author":{"gitId":"jasonlienardi"},"content":"**Format**: `drink d/DRINK s/VOLUME(ML)`  ","lastModifiedDate":"2024-04-12"},{"lineNumber":225,"author":{"gitId":"edwardhumi"},"content":"**Sample Input**: `drink d/Iced Lemon Tea s/200`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":226,"author":{"gitId":"jasonlienardi"},"content":"**Expected Output**:","lastModifiedDate":"2024-04-01"},{"lineNumber":227,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":228,"author":{"gitId":"edwardhumi"},"content":"Added 200 ml of iced lemon tea","lastModifiedDate":"2024-04-02"},{"lineNumber":229,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":230,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":231,"author":{"gitId":"claribelho"},"content":"### 2.2.3 Add exercise: `exercise`","lastModifiedDate":"2024-04-15"},{"lineNumber":232,"author":{"gitId":"claribelho"},"content":"Adds an exercise to the list of exercises completed today.","lastModifiedDate":"2024-04-15"},{"lineNumber":233,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":234,"author":{"gitId":"edwardhumi"},"content":"**Format**: `exercise e/EXERCISE d/DURATION(MINUTES) i/INTENSITY(HIGH, MEDIUM, LOW)`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":235,"author":{"gitId":"BryanCastorius"},"content":"**Sample Input**: `exercise e/swimming d/30 i/HIGH`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":236,"author":{"gitId":"jasonlienardi"},"content":"**Expected Output**:","lastModifiedDate":"2024-04-01"},{"lineNumber":237,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":238,"author":{"gitId":"jasonlienardi"},"content":"Tracked 30 minutes of swimming","lastModifiedDate":"2024-04-01"},{"lineNumber":239,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":240,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":241,"author":{"gitId":"claribelho"},"content":"### 2.2.4 Add new meal to pre-defined meals: `newMeal`","lastModifiedDate":"2024-04-15"},{"lineNumber":242,"author":{"gitId":"claribelho"},"content":"Adds a user-defined new meal to the pre-defined meals. You would need to input the **meal name** and its","lastModifiedDate":"2024-04-15"},{"lineNumber":243,"author":{"gitId":"claribelho"},"content":"corresponding **nutritional content** (namely calories, carbohydrates content, protein, fat, fiber, sugar) per","lastModifiedDate":"2024-04-15"},{"lineNumber":244,"author":{"gitId":"claribelho"},"content":"serving of intake.","lastModifiedDate":"2024-04-15"},{"lineNumber":245,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":246,"author":{"gitId":"claribelho"},"content":"A reminder that this user-defined meal will only be saved to our database when you **safely exit** our application with","lastModifiedDate":"2024-04-15"},{"lineNumber":247,"author":{"gitId":"claribelho"},"content":"the command `exit`.","lastModifiedDate":"2024-04-15"},{"lineNumber":248,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":249,"author":{"gitId":"claribelho"},"content":"Additionally, you may use `newMeal` to override existing nutritional content data, by using the MEAL_NAME in the ","lastModifiedDate":"2024-04-15"},{"lineNumber":250,"author":{"gitId":"claribelho"},"content":"command. In short, `newMeal` will **override any past data** with the specified meal name.","lastModifiedDate":"2024-04-15"},{"lineNumber":251,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":252,"author":{"gitId":"claribelho"},"content":"Note: We are not responsible for whether the meal name and its nutrional contents are accurate.","lastModifiedDate":"2024-04-15"},{"lineNumber":253,"author":{"gitId":"claribelho"},"content":"Please verify your information before inputting.","lastModifiedDate":"2024-04-15"},{"lineNumber":254,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":255,"author":{"gitId":"jasonlienardi"},"content":"**Format**: `newMeal MEAL_NAME,CALORIES,CARBS,PROTEIN,FAT,FIBER,SUGAR`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":256,"author":{"gitId":"jasonlienardi"},"content":"**Sample Input**: `newMeal mie,607,75,25,23,2,10`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":257,"author":{"gitId":"jasonlienardi"},"content":"**Expected Output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":258,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":259,"author":{"gitId":"jasonlienardi"},"content":"Added mie to available meals","lastModifiedDate":"2024-04-02"},{"lineNumber":260,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":261,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":262,"author":{"gitId":"claribelho"},"content":"### 2.2.5 Add new drink to pre-defined drinks: `newDrink`","lastModifiedDate":"2024-04-15"},{"lineNumber":263,"author":{"gitId":"claribelho"},"content":"Adds a user-defined new drink to the pre-defined drinks. You would need to input the **drink name** and its","lastModifiedDate":"2024-04-15"},{"lineNumber":264,"author":{"gitId":"claribelho"},"content":"corresponding **nutritional content** (namely calories, carbohydrates content, sugar, protein, fat) per **100ml** of","lastModifiedDate":"2024-04-15"},{"lineNumber":265,"author":{"gitId":"claribelho"},"content":"intake.","lastModifiedDate":"2024-04-15"},{"lineNumber":266,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":267,"author":{"gitId":"claribelho"},"content":"A reminder that this user-defined drink will only be saved to our database when you **safely exit** our application","lastModifiedDate":"2024-04-15"},{"lineNumber":268,"author":{"gitId":"claribelho"},"content":"with the command `exit`.","lastModifiedDate":"2024-04-15"},{"lineNumber":269,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":270,"author":{"gitId":"claribelho"},"content":"Additionally, you may use `newDrink` to override existing nutritional content data, by using the DRINK_NAME in the","lastModifiedDate":"2024-04-15"},{"lineNumber":271,"author":{"gitId":"claribelho"},"content":"command. In short, `newDrink` will **override any past data** with the specified drink name.","lastModifiedDate":"2024-04-15"},{"lineNumber":272,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":273,"author":{"gitId":"claribelho"},"content":"Note: We are not responsible for whether the drink name and its nutrional contents are accurate.","lastModifiedDate":"2024-04-15"},{"lineNumber":274,"author":{"gitId":"claribelho"},"content":"Please verify your information before inputting.","lastModifiedDate":"2024-04-15"},{"lineNumber":275,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":276,"author":{"gitId":"jasonlienardi"},"content":"**Format**: `newDrink DRINK_NAME,CALORIES,CARBS,SUGAR,PROTEIN,FAT`   ","lastModifiedDate":"2024-04-02"},{"lineNumber":277,"author":{"gitId":"jasonlienardi"},"content":"**Sample Input**: `newDrink coke,153,32,1,2,1`   ","lastModifiedDate":"2024-04-02"},{"lineNumber":278,"author":{"gitId":"jasonlienardi"},"content":"**Expected Output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":279,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":280,"author":{"gitId":"jasonlienardi"},"content":"Added coke to available drinks","lastModifiedDate":"2024-04-02"},{"lineNumber":281,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":282,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":283,"author":{"gitId":"claribelho"},"content":"### 2.2.6 Add new exercise to pre-defined exercises: `newExercise`","lastModifiedDate":"2024-04-15"},{"lineNumber":284,"author":{"gitId":"claribelho"},"content":"Adds a user-defined new exercise to the pre-defined exercises. You would need to input the **exercise name** and its","lastModifiedDate":"2024-04-15"},{"lineNumber":285,"author":{"gitId":"claribelho"},"content":"corresponding **calories burnt** for a **1 minute** HIGH, MEDIUM and LOW intensity workout.","lastModifiedDate":"2024-04-15"},{"lineNumber":286,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":287,"author":{"gitId":"claribelho"},"content":"A reminder that this user-defined exercise will only be saved to our database when you **safely exit** our application","lastModifiedDate":"2024-04-15"},{"lineNumber":288,"author":{"gitId":"claribelho"},"content":"with the command `exit`.","lastModifiedDate":"2024-04-15"},{"lineNumber":289,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":290,"author":{"gitId":"claribelho"},"content":"Additionally, you may use `newExercise` to override existing calories burnt data, by using the EXERCISE_NAME in the","lastModifiedDate":"2024-04-15"},{"lineNumber":291,"author":{"gitId":"claribelho"},"content":"command. In short, `newExercise` will **override any past data** with the specified exercise name.","lastModifiedDate":"2024-04-15"},{"lineNumber":292,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":293,"author":{"gitId":"claribelho"},"content":"**Note**: We are not responsible for whether the exercise name and its calories burnt are accurate.","lastModifiedDate":"2024-04-15"},{"lineNumber":294,"author":{"gitId":"claribelho"},"content":"Please verify your information before inputting.","lastModifiedDate":"2024-04-15"},{"lineNumber":295,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":296,"author":{"gitId":"jasonlienardi"},"content":"**Format**: `newExercise EXERCISE_NAME, CALORIES_BURNT_HIGH, CALORIES_BURNT_MEDIUM, CALORIES_BURNT_LOW`   ","lastModifiedDate":"2024-04-12"},{"lineNumber":297,"author":{"gitId":"jasonlienardi"},"content":"**Sample Input**: `newExercise badminton,20,10,5`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":298,"author":{"gitId":"jasonlienardi"},"content":"**Expected Output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":299,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":300,"author":{"gitId":"jasonlienardi"},"content":"Added badminton to available exercises","lastModifiedDate":"2024-04-02"},{"lineNumber":301,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":302,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":303,"author":{"gitId":"claribelho"},"content":"## 2.3 For data retrieval","lastModifiedDate":"2024-04-15"},{"lineNumber":304,"author":{"gitId":"claribelho"},"content":"### 2.3.1 Find the information about a certain meal: `infoMeal`","lastModifiedDate":"2024-04-15"},{"lineNumber":305,"author":{"gitId":"claribelho"},"content":"For the specified meal, display its nutritional content **per serving** to the user.","lastModifiedDate":"2024-04-15"},{"lineNumber":306,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":307,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `infoMeal MEAL`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":308,"author":{"gitId":"BryanCastorius"},"content":"**Sample Input**: `infoMeal chicken rice`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":309,"author":{"gitId":"claribelho"},"content":"**Expected Output**:","lastModifiedDate":"2024-03-19"},{"lineNumber":310,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":311,"author":{"gitId":"claribelho"},"content":"Meal: chicken rice (per serving)","lastModifiedDate":"2024-04-15"},{"lineNumber":312,"author":{"gitId":"claribelho"},"content":"Calories: 400 kcal","lastModifiedDate":"2024-04-15"},{"lineNumber":313,"author":{"gitId":"claribelho"},"content":"Carbs: 50 g","lastModifiedDate":"2024-04-15"},{"lineNumber":314,"author":{"gitId":"claribelho"},"content":"Protein: 30 g","lastModifiedDate":"2024-04-15"},{"lineNumber":315,"author":{"gitId":"claribelho"},"content":"Fat: 20 g","lastModifiedDate":"2024-04-15"},{"lineNumber":316,"author":{"gitId":"claribelho"},"content":"Fiber: 10 g","lastModifiedDate":"2024-04-15"},{"lineNumber":317,"author":{"gitId":"claribelho"},"content":"Sugar: 5 g","lastModifiedDate":"2024-04-15"},{"lineNumber":318,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":319,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":320,"author":{"gitId":"claribelho"},"content":"### 2.3.2 Find the information about a certain drink: `infoDrink`","lastModifiedDate":"2024-04-15"},{"lineNumber":321,"author":{"gitId":"claribelho"},"content":"For the specified drink, display its nutritional content **per 100ml** to the user.","lastModifiedDate":"2024-04-15"},{"lineNumber":322,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":323,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `infoDrink DRINK`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":324,"author":{"gitId":"edwardhumi"},"content":"**Sample input**: `infoDrink milo`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":325,"author":{"gitId":"claribelho"},"content":"**Expected output**:","lastModifiedDate":"2024-03-19"},{"lineNumber":326,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":327,"author":{"gitId":"claribelho"},"content":"Drink: milo (per 100 ml)","lastModifiedDate":"2024-04-15"},{"lineNumber":328,"author":{"gitId":"claribelho"},"content":"Calories: 124 kcal","lastModifiedDate":"2024-04-15"},{"lineNumber":329,"author":{"gitId":"claribelho"},"content":"Carbs: 20 g","lastModifiedDate":"2024-04-15"},{"lineNumber":330,"author":{"gitId":"claribelho"},"content":"Sugar: 3 g","lastModifiedDate":"2024-04-15"},{"lineNumber":331,"author":{"gitId":"claribelho"},"content":"Protein: 3 g","lastModifiedDate":"2024-04-15"},{"lineNumber":332,"author":{"gitId":"claribelho"},"content":"Fat: 1 g","lastModifiedDate":"2024-04-15"},{"lineNumber":333,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":334,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":335,"author":{"gitId":"claribelho"},"content":"### 2.3.3 Find the information about a certain exercise: `infoExercise`","lastModifiedDate":"2024-04-15"},{"lineNumber":336,"author":{"gitId":"claribelho"},"content":"For the specified exercise, display its **calories burnt per minute** for different intensities (HIGH, MEDIUM, LOW) to","lastModifiedDate":"2024-04-15"},{"lineNumber":337,"author":{"gitId":"claribelho"},"content":"the user.","lastModifiedDate":"2024-04-15"},{"lineNumber":338,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":339,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `infoExercise EXERCISE`   ","lastModifiedDate":"2024-04-02"},{"lineNumber":340,"author":{"gitId":"BryanCastorius"},"content":"**Sample input**: `infoExercise swimming`   ","lastModifiedDate":"2024-04-02"},{"lineNumber":341,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**:","lastModifiedDate":"2024-04-01"},{"lineNumber":342,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":343,"author":{"gitId":"jasonlienardi"},"content":"Exercise: swimming","lastModifiedDate":"2024-04-01"},{"lineNumber":344,"author":{"gitId":"jasonlienardi"},"content":"~ Calories burnt for a 1 minute workout of ~","lastModifiedDate":"2024-04-01"},{"lineNumber":345,"author":{"gitId":"claribelho"},"content":"HIGH intensity: 12 kcal","lastModifiedDate":"2024-04-15"},{"lineNumber":346,"author":{"gitId":"claribelho"},"content":"MEDIUM intensity: 8 kcal","lastModifiedDate":"2024-04-15"},{"lineNumber":347,"author":{"gitId":"claribelho"},"content":"LOW intensity: 5 kcal","lastModifiedDate":"2024-04-15"},{"lineNumber":348,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":349,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":350,"author":{"gitId":"claribelho"},"content":"### 2.3.4 View daily net calorie count: `calories`","lastModifiedDate":"2024-04-15"},{"lineNumber":351,"author":{"gitId":"claribelho"},"content":"Display current net calorie count **in kcal**  for the day. This takes into account the calories consumed from meals","lastModifiedDate":"2024-04-15"},{"lineNumber":352,"author":{"gitId":"claribelho"},"content":"and drinks,","lastModifiedDate":"2024-04-15"},{"lineNumber":353,"author":{"gitId":"claribelho"},"content":"and the calories burnt from exercise.","lastModifiedDate":"2024-04-15"},{"lineNumber":354,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":355,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `calories`    ","lastModifiedDate":"2024-04-02"},{"lineNumber":356,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**:","lastModifiedDate":"2024-04-01"},{"lineNumber":357,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":358,"author":{"gitId":"claribelho"},"content":"Total Calories: 230 kcal","lastModifiedDate":"2024-04-15"},{"lineNumber":359,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":360,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":361,"author":{"gitId":"claribelho"},"content":"### 2.3.5 View daily carbohydrates consumed: `carbs`","lastModifiedDate":"2024-04-15"},{"lineNumber":362,"author":{"gitId":"claribelho"},"content":"Display current total carbohydrates intake **in grams**  for the day.","lastModifiedDate":"2024-04-15"},{"lineNumber":363,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":364,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `carbs`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":365,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**:","lastModifiedDate":"2024-04-01"},{"lineNumber":366,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":367,"author":{"gitId":"jasonlienardi"},"content":"Total Carbohydrates: 150 grams","lastModifiedDate":"2024-04-01"},{"lineNumber":368,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":369,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":370,"author":{"gitId":"claribelho"},"content":"### 2.3.6 View daily proteins consumed: `protein`","lastModifiedDate":"2024-04-15"},{"lineNumber":371,"author":{"gitId":"claribelho"},"content":"Display current total protein intake **in grams**  for the day.","lastModifiedDate":"2024-04-15"},{"lineNumber":372,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":373,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `protein`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":374,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**:","lastModifiedDate":"2024-04-01"},{"lineNumber":375,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":376,"author":{"gitId":"edwardhumi"},"content":"Total Proteins: 100 grams","lastModifiedDate":"2024-04-02"},{"lineNumber":377,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":378,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":379,"author":{"gitId":"claribelho"},"content":"### 2.3.7 View daily fat consumed: `fat`","lastModifiedDate":"2024-04-15"},{"lineNumber":380,"author":{"gitId":"claribelho"},"content":"Display current total fat intake **in grams**  for the day.","lastModifiedDate":"2024-04-15"},{"lineNumber":381,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":382,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `fat`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":383,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**:","lastModifiedDate":"2024-04-01"},{"lineNumber":384,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":385,"author":{"gitId":"edwardhumi"},"content":"Total Fat: 50 grams","lastModifiedDate":"2024-04-02"},{"lineNumber":386,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":387,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":388,"author":{"gitId":"claribelho"},"content":"### 2.3.8 View daily sugar consumed: `sugar`","lastModifiedDate":"2024-04-15"},{"lineNumber":389,"author":{"gitId":"claribelho"},"content":"Display current total sugar intake **in grams**  for the day.","lastModifiedDate":"2024-04-15"},{"lineNumber":390,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":391,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `sugar`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":392,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**:","lastModifiedDate":"2024-04-01"},{"lineNumber":393,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":394,"author":{"gitId":"edwardhumi"},"content":"Total Sugar: 20 grams","lastModifiedDate":"2024-04-02"},{"lineNumber":395,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":396,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":397,"author":{"gitId":"claribelho"},"content":"### 2.3.9 View daily fiber consumed: `fiber`","lastModifiedDate":"2024-04-15"},{"lineNumber":398,"author":{"gitId":"claribelho"},"content":"Display current total fiber intake **in grams** for the day.","lastModifiedDate":"2024-04-15"},{"lineNumber":399,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":400,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `fiber`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":401,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**:","lastModifiedDate":"2024-04-01"},{"lineNumber":402,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":403,"author":{"gitId":"edwardhumi"},"content":"Total Fiber: 20 grams","lastModifiedDate":"2024-04-02"},{"lineNumber":404,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":405,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":406,"author":{"gitId":"claribelho"},"content":"### 2.3.10 View daily water consumption: `water`","lastModifiedDate":"2024-04-15"},{"lineNumber":407,"author":{"gitId":"claribelho"},"content":"Display current total water intake  **in ml**  for the day.","lastModifiedDate":"2024-04-15"},{"lineNumber":408,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":409,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `water`  ","lastModifiedDate":"2024-04-14"},{"lineNumber":410,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**:","lastModifiedDate":"2024-04-01"},{"lineNumber":411,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":412,"author":{"gitId":"edwardhumi"},"content":"Total water intake today: 0 ml","lastModifiedDate":"2024-04-02"},{"lineNumber":413,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":414,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":415,"author":{"gitId":"claribelho"},"content":"### 2.3.11 View daily calories burnt: `caloriesBurnt`","lastModifiedDate":"2024-04-15"},{"lineNumber":416,"author":{"gitId":"claribelho"},"content":"Display current total calorie burnt  **in kcal** for the day.","lastModifiedDate":"2024-04-15"},{"lineNumber":417,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":418,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `caloriesBurnt`    ","lastModifiedDate":"2024-04-02"},{"lineNumber":419,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**:","lastModifiedDate":"2024-04-01"},{"lineNumber":420,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":421,"author":{"gitId":"claribelho"},"content":"Total calories burnt: 360 kcal","lastModifiedDate":"2024-04-15"},{"lineNumber":422,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":423,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":424,"author":{"gitId":"claribelho"},"content":"### 2.3.12 View daily calories and water intake recommendations: `recommend`","lastModifiedDate":"2024-04-15"},{"lineNumber":425,"author":{"gitId":"claribelho"},"content":"Display a recommendation based on the current water and calories intake.   ","lastModifiedDate":"2024-04-15"},{"lineNumber":426,"author":{"gitId":"claribelho"},"content":"Note: This is a very simplified recommendation system that takes into account that an average human being should drink","lastModifiedDate":"2024-04-15"},{"lineNumber":427,"author":{"gitId":"claribelho"},"content":"approximately 2600ml of water and 2200kcal per day.","lastModifiedDate":"2024-04-15"},{"lineNumber":428,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":429,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `recommend`    ","lastModifiedDate":"2024-04-02"},{"lineNumber":430,"author":{"gitId":"BryanCastorius"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":431,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":432,"author":{"gitId":"claribelho"},"content":"We recommend drinking more water. Please drink 2600 ml more water by the end of the","lastModifiedDate":"2024-04-15"},{"lineNumber":433,"author":{"gitId":"claribelho"},"content":"day to hit the daily water intake goal :)","lastModifiedDate":"2024-04-15"},{"lineNumber":434,"author":{"gitId":"BryanCastorius"},"content":"    ~~","lastModifiedDate":"2024-04-02"},{"lineNumber":435,"author":{"gitId":"claribelho"},"content":"We recommend eating more food. Please eat 1610 more calories by today :)","lastModifiedDate":"2024-04-15"},{"lineNumber":436,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":437,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":438,"author":{"gitId":"claribelho"},"content":"## 2.4 For listing arrays","lastModifiedDate":"2024-04-15"},{"lineNumber":439,"author":{"gitId":"claribelho"},"content":"### 2.4.1 List today\u0027s meal intake: `listMeals`","lastModifiedDate":"2024-04-15"},{"lineNumber":440,"author":{"gitId":"claribelho"},"content":"Display all the meals the user has inputted today.","lastModifiedDate":"2024-04-15"},{"lineNumber":441,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":442,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `listMeals`   ","lastModifiedDate":"2024-04-02"},{"lineNumber":443,"author":{"gitId":"claribelho"},"content":"**Expected output**:","lastModifiedDate":"2024-03-19"},{"lineNumber":444,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":445,"author":{"gitId":"jasonlienardi"},"content":"here\u0027s what you have eaten today","lastModifiedDate":"2024-04-01"},{"lineNumber":446,"author":{"gitId":"jasonlienardi"},"content":"1. chicken rice (serving size: 1) | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":447,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":448,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":449,"author":{"gitId":"claribelho"},"content":"### 2.4.2 List today\u0027s drink intake: `listDrinks`","lastModifiedDate":"2024-04-15"},{"lineNumber":450,"author":{"gitId":"claribelho"},"content":"Display all the drinks user has inputted today.","lastModifiedDate":"2024-04-15"},{"lineNumber":451,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":452,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `listDrinks`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":453,"author":{"gitId":"edwardhumi"},"content":"**Expected output**:","lastModifiedDate":"2024-03-31"},{"lineNumber":454,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":455,"author":{"gitId":"jasonlienardi"},"content":"here\u0027s what you have drank today","lastModifiedDate":"2024-04-01"},{"lineNumber":456,"author":{"gitId":"jasonlienardi"},"content":"1. sprite (volume: 100ml) | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":457,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":458,"author":{"gitId":"jasonlienardi"},"content":"Total water intake today: 0 ml","lastModifiedDate":"2024-04-01"},{"lineNumber":459,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":460,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":461,"author":{"gitId":"claribelho"},"content":"### 2.4.3 List today\u0027s exercises done: `listExercises`","lastModifiedDate":"2024-04-15"},{"lineNumber":462,"author":{"gitId":"claribelho"},"content":"Display all the exercises user tracked today.","lastModifiedDate":"2024-04-15"},{"lineNumber":463,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":464,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `listExercises`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":465,"author":{"gitId":"claribelho"},"content":"**Expected output**:","lastModifiedDate":"2024-03-19"},{"lineNumber":466,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":467,"author":{"gitId":"BryanCastorius"},"content":"here\u0027s the exercises you\u0027ve done today","lastModifiedDate":"2024-04-02"},{"lineNumber":468,"author":{"gitId":"jasonlienardi"},"content":"1. boxing | duration: 10 | intensity: LOW | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":469,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":470,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":471,"author":{"gitId":"claribelho"},"content":"### 2.4.4 List everything inputted today: `listEverything`","lastModifiedDate":"2024-04-15"},{"lineNumber":472,"author":{"gitId":"claribelho"},"content":"Display all the meals, drinks and exercises user tracked today.","lastModifiedDate":"2024-04-15"},{"lineNumber":473,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":474,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `listEverything`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":475,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**:","lastModifiedDate":"2024-04-01"},{"lineNumber":476,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":477,"author":{"gitId":"jasonlienardi"},"content":"here\u0027s what you have consumed today","lastModifiedDate":"2024-04-01"},{"lineNumber":478,"author":{"gitId":"jasonlienardi"},"content":"1. chicken rice (serving size: 1) | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":479,"author":{"gitId":"jasonlienardi"},"content":"2. sprite (volume: 100ml) | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":480,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":481,"author":{"gitId":"jasonlienardi"},"content":"Total water intake today: 100 ml","lastModifiedDate":"2024-04-01"},{"lineNumber":482,"author":{"gitId":"jasonlienardi"},"content":"       ~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":483,"author":{"gitId":"jasonlienardi"},"content":"here\u0027s the exercises you\u0027ve done today","lastModifiedDate":"2024-04-01"},{"lineNumber":484,"author":{"gitId":"jasonlienardi"},"content":"1. boxing | duration: 10 | intensity: LOW | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":485,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":486,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":487,"author":{"gitId":"claribelho"},"content":"### 2.4.5 List all meals intake from the entire app\u0027s lifecycle : `listMealsAll`","lastModifiedDate":"2024-04-15"},{"lineNumber":488,"author":{"gitId":"claribelho"},"content":"Display all the meals inputted during the entire app lifecycle.  ","lastModifiedDate":"2024-04-15"},{"lineNumber":489,"author":{"gitId":"claribelho"},"content":"Note: As mentioned, meals are only saved to our database when you **safely exit** our application with the","lastModifiedDate":"2024-04-15"},{"lineNumber":490,"author":{"gitId":"claribelho"},"content":"command `exit`.  Any other mode of termination will result in the loss of the inputs from that use.","lastModifiedDate":"2024-04-15"},{"lineNumber":491,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":492,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":493,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `listMealsAll`   ","lastModifiedDate":"2024-04-02"},{"lineNumber":494,"author":{"gitId":"jasonlienardi"},"content":"**Expected output**:","lastModifiedDate":"2024-04-01"},{"lineNumber":495,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":496,"author":{"gitId":"jasonlienardi"},"content":"here\u0027s what you have eaten so far","lastModifiedDate":"2024-04-01"},{"lineNumber":497,"author":{"gitId":"jasonlienardi"},"content":"1. mala (serving size: 2) | date: 30-03-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":498,"author":{"gitId":"jasonlienardi"},"content":"2. chicken rice (serving size: 1) | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":499,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":500,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":501,"author":{"gitId":"claribelho"},"content":"### 2.4.6 List all drinks intake from the entire app\u0027s lifecycle: `listDrinksAll`","lastModifiedDate":"2024-04-15"},{"lineNumber":502,"author":{"gitId":"claribelho"},"content":"Display all the drinks inputted during the entire app lifecycle.  ","lastModifiedDate":"2024-04-15"},{"lineNumber":503,"author":{"gitId":"claribelho"},"content":"Note: As mentioned, drinks are only saved to our database when you **safely exit** our application with the","lastModifiedDate":"2024-04-15"},{"lineNumber":504,"author":{"gitId":"claribelho"},"content":"command `exit`.  Any other mode of termination will result in the loss of the inputs from that use.","lastModifiedDate":"2024-04-15"},{"lineNumber":505,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":506,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `listDrinksAll`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":507,"author":{"gitId":"edwardhumi"},"content":"**Expected output**:","lastModifiedDate":"2024-03-31"},{"lineNumber":508,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":509,"author":{"gitId":"jasonlienardi"},"content":"here\u0027s what you have drank so far","lastModifiedDate":"2024-04-01"},{"lineNumber":510,"author":{"gitId":"jasonlienardi"},"content":"1. milo dinosaur (volume: 200ml) | date: 30-03-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":511,"author":{"gitId":"jasonlienardi"},"content":"2. sprite (volume: 100ml) | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":512,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":513,"author":{"gitId":"jasonlienardi"},"content":"Total water intake today: 100 ml","lastModifiedDate":"2024-04-01"},{"lineNumber":514,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":515,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":516,"author":{"gitId":"claribelho"},"content":"### 2.4.7 List all exercises done from the entire app\u0027s lifecycle: `listExercisesAll`","lastModifiedDate":"2024-04-15"},{"lineNumber":517,"author":{"gitId":"claribelho"},"content":"Display all the exercises inputted during the entire app lifecycle.  ","lastModifiedDate":"2024-04-15"},{"lineNumber":518,"author":{"gitId":"claribelho"},"content":"Note: As mentioned, exercises are only saved to our database when you **safely exit** our application with the","lastModifiedDate":"2024-04-15"},{"lineNumber":519,"author":{"gitId":"claribelho"},"content":"command `exit`.  Any other mode of termination will result in the loss of the inputs from that use.","lastModifiedDate":"2024-04-15"},{"lineNumber":520,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":521,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `listExercisesAll`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":522,"author":{"gitId":"claribelho"},"content":"**Expected output**:","lastModifiedDate":"2024-03-19"},{"lineNumber":523,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":524,"author":{"gitId":"jasonlienardi"},"content":"here\u0027s the exercises you\u0027ve done so far","lastModifiedDate":"2024-04-01"},{"lineNumber":525,"author":{"gitId":"jasonlienardi"},"content":"1. cycling | duration: 100 | intensity: LOW | date: 29-02-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":526,"author":{"gitId":"jasonlienardi"},"content":"2. swimming | duration: 100 | intensity: HIGH | date: 30-03-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":527,"author":{"gitId":"jasonlienardi"},"content":"3. boxing | duration: 10 | intensity: LOW | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":528,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":529,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":530,"author":{"gitId":"claribelho"},"content":"### 2.4.8 List everything inputted for the entire app\u0027s lifecycle: `listEverythingAll`","lastModifiedDate":"2024-04-15"},{"lineNumber":531,"author":{"gitId":"claribelho"},"content":"Display all the drinks, meals, and exercises inputted for the entire app lifecycle.","lastModifiedDate":"2024-04-15"},{"lineNumber":532,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":533,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `listEverythingAll`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":534,"author":{"gitId":"edwardhumi"},"content":"**Expected output**:","lastModifiedDate":"2024-03-31"},{"lineNumber":535,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":536,"author":{"gitId":"jasonlienardi"},"content":"here\u0027s what you have consumed so far","lastModifiedDate":"2024-04-01"},{"lineNumber":537,"author":{"gitId":"jasonlienardi"},"content":"1. mala (serving size: 2) | date: 30-03-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":538,"author":{"gitId":"jasonlienardi"},"content":"2. chicken rice (serving size: 1) | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":539,"author":{"gitId":"jasonlienardi"},"content":"3. milo dinosaur (volume: 200ml) | date: 30-03-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":540,"author":{"gitId":"jasonlienardi"},"content":"4. sprite (volume: 100ml) | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":541,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":542,"author":{"gitId":"jasonlienardi"},"content":"Total water intake today: 100 ml","lastModifiedDate":"2024-04-01"},{"lineNumber":543,"author":{"gitId":"jasonlienardi"},"content":"       ~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":544,"author":{"gitId":"jasonlienardi"},"content":"here\u0027s the exercises you\u0027ve done so far","lastModifiedDate":"2024-04-01"},{"lineNumber":545,"author":{"gitId":"jasonlienardi"},"content":"1. cycling | duration: 100 | intensity: LOW | date: 29-02-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":546,"author":{"gitId":"jasonlienardi"},"content":"2. swimming | duration: 100 | intensity: HIGH | date: 30-03-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":547,"author":{"gitId":"jasonlienardi"},"content":"3. boxing | duration: 10 | intensity: LOW | date: 01-04-2024","lastModifiedDate":"2024-04-01"},{"lineNumber":548,"author":{"gitId":"jasonlienardi"},"content":"~~~","lastModifiedDate":"2024-04-01"},{"lineNumber":549,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":550,"author":{"gitId":"claribelho"},"content":"### 2.4.9 List meal intake for a certain date: `listMeals d/[DATE]`","lastModifiedDate":"2024-04-15"},{"lineNumber":551,"author":{"gitId":"claribelho"},"content":"Display all the meals user inputted for the specified date, in the format **dd-MM-yyyy**. You may not view a","lastModifiedDate":"2024-04-15"},{"lineNumber":552,"author":{"gitId":"claribelho"},"content":"future date, i.e. dates from tomorrow onwards.","lastModifiedDate":"2024-04-15"},{"lineNumber":553,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":554,"author":{"gitId":"edwardhumi"},"content":"**Format**: `listMeals d/dd-MM-yyyy`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":555,"author":{"gitId":"claribelho"},"content":"**Sample input**: `listMeals d/01-04-2024`  ","lastModifiedDate":"2024-04-15"},{"lineNumber":556,"author":{"gitId":"edwardhumi"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":557,"author":{"gitId":"edwardhumi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":558,"author":{"gitId":"edwardhumi"},"content":"here\u0027s what you have eaten on 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":559,"author":{"gitId":"edwardhumi"},"content":"1. soup kambeng (serving size: 2) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":560,"author":{"gitId":"edwardhumi"},"content":"2. nasi lemak (serving size: 2) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":561,"author":{"gitId":"edwardhumi"},"content":"3. tau huay (serving size: 1) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":562,"author":{"gitId":"edwardhumi"},"content":"4. roti prata (serving size: 2) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":563,"author":{"gitId":"edwardhumi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":564,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":565,"author":{"gitId":"claribelho"},"content":"### 2.4.10 List drink intake for a certain date: `listDrinks d/[DATE]`","lastModifiedDate":"2024-04-15"},{"lineNumber":566,"author":{"gitId":"claribelho"},"content":"Display all the drinks user inputted for the specified date (excluding water), in the format **dd-MM-yyyy**. You may not view a","lastModifiedDate":"2024-04-15"},{"lineNumber":567,"author":{"gitId":"claribelho"},"content":"future date, i.e. dates from tomorrow onwards.","lastModifiedDate":"2024-04-15"},{"lineNumber":568,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":569,"author":{"gitId":"edwardhumi"},"content":"**Format**: `listDrinks d/dd-MM-yyyy`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":570,"author":{"gitId":"claribelho"},"content":"**Sample input**: `listDrinks d/01-04-2024`  ","lastModifiedDate":"2024-04-15"},{"lineNumber":571,"author":{"gitId":"edwardhumi"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":572,"author":{"gitId":"edwardhumi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":573,"author":{"gitId":"edwardhumi"},"content":"here\u0027s what you have drank on 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":574,"author":{"gitId":"edwardhumi"},"content":"1. honey lemon tea (volume: 200ml) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":575,"author":{"gitId":"edwardhumi"},"content":"2. kopi c (volume: 500ml) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":576,"author":{"gitId":"edwardhumi"},"content":"3. milo (volume: 200ml) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":577,"author":{"gitId":"edwardhumi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":578,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":579,"author":{"gitId":"claribelho"},"content":"### 2.4.11 List exercise done for a certain date: `listExercises d/[DATE]`","lastModifiedDate":"2024-04-15"},{"lineNumber":580,"author":{"gitId":"claribelho"},"content":"Display all the exercises user inputted for the specified date, in the format **dd-MM-yyyy**. You may not view a","lastModifiedDate":"2024-04-15"},{"lineNumber":581,"author":{"gitId":"claribelho"},"content":"future date, i.e. dates from tomorrow onwards.","lastModifiedDate":"2024-04-15"},{"lineNumber":582,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":583,"author":{"gitId":"edwardhumi"},"content":"**Format**: `listExercises d/dd-MM-yyyy`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":584,"author":{"gitId":"claribelho"},"content":"**Sample input**: `listExercises d/01-04-2024`  ","lastModifiedDate":"2024-04-15"},{"lineNumber":585,"author":{"gitId":"edwardhumi"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":586,"author":{"gitId":"edwardhumi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":587,"author":{"gitId":"edwardhumi"},"content":"here\u0027s the exercises you\u0027ve done on 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":588,"author":{"gitId":"edwardhumi"},"content":"1. boxing | duration: 10 | intensity: LOW | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":589,"author":{"gitId":"edwardhumi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":590,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":591,"author":{"gitId":"claribelho"},"content":"### 2.4.12 List everything inputted for a certain date: `listEverything d/[DATE]`","lastModifiedDate":"2024-04-15"},{"lineNumber":592,"author":{"gitId":"claribelho"},"content":"Display all the meals, drinks, and exercises user inputted for the specified date, in the format **dd-MM-yyyy**. You may not view a","lastModifiedDate":"2024-04-15"},{"lineNumber":593,"author":{"gitId":"claribelho"},"content":"future date, i.e. dates from tomorrow onwards.","lastModifiedDate":"2024-04-15"},{"lineNumber":594,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":595,"author":{"gitId":"edwardhumi"},"content":"**Format**: `listEverything d/dd-MM-yyyy`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":596,"author":{"gitId":"claribelho"},"content":"**Sample input**: `listEverything d/01-04-2024`  ","lastModifiedDate":"2024-04-15"},{"lineNumber":597,"author":{"gitId":"edwardhumi"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":598,"author":{"gitId":"edwardhumi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":599,"author":{"gitId":"edwardhumi"},"content":"here\u0027s what you have consumed on 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":600,"author":{"gitId":"edwardhumi"},"content":"1. soup kambeng (serving size: 2) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":601,"author":{"gitId":"edwardhumi"},"content":"2. nasi lemak (serving size: 2) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":602,"author":{"gitId":"edwardhumi"},"content":"3. tau huay (serving size: 1) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":603,"author":{"gitId":"edwardhumi"},"content":"4. roti prata (serving size: 2) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":604,"author":{"gitId":"edwardhumi"},"content":"5. honey lemon tea (volume: 200ml) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":605,"author":{"gitId":"edwardhumi"},"content":"6. kopi c (volume: 500ml) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":606,"author":{"gitId":"edwardhumi"},"content":"7. milo (volume: 200ml) | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":607,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":608,"author":{"gitId":"edwardhumi"},"content":"       ~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":609,"author":{"gitId":"edwardhumi"},"content":"here\u0027s the exercises you\u0027ve done on 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":610,"author":{"gitId":"edwardhumi"},"content":"1. boxing | duration: 10 | intensity: LOW | date: 01-04-2024","lastModifiedDate":"2024-04-02"},{"lineNumber":611,"author":{"gitId":"edwardhumi"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":612,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":613,"author":{"gitId":"claribelho"},"content":"## 2.5 For editing existing data","lastModifiedDate":"2024-04-15"},{"lineNumber":614,"author":{"gitId":"claribelho"},"content":"Note: There is no method to edit an inputted exercise of the day. If you would like to change a value in your ","lastModifiedDate":"2024-04-15"},{"lineNumber":615,"author":{"gitId":"claribelho"},"content":"exerciseList, please use `deleteExercise` and add it again as a new exercise (`exercise`).","lastModifiedDate":"2024-04-15"},{"lineNumber":616,"author":{"gitId":"claribelho"},"content":"### 2.5.1 Edit an existing meal after inserted: `editMeal`","lastModifiedDate":"2024-04-15"},{"lineNumber":617,"author":{"gitId":"claribelho"},"content":"For a meal that was inputted in the day, edit its serving size. You may identify the meal by its index in listMeals.","lastModifiedDate":"2024-04-15"},{"lineNumber":618,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":619,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `editMeal INDEX s/NEW_SERVING_SIZE`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":620,"author":{"gitId":"claribelho"},"content":"**Sample input**: `editMeal 2 s/10`  ","lastModifiedDate":"2024-04-15"},{"lineNumber":621,"author":{"gitId":"BryanCastorius"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":622,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":623,"author":{"gitId":"claribelho"},"content":"chicken rice has been edited to 10 serving(s)","lastModifiedDate":"2024-04-15"},{"lineNumber":624,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":625,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":626,"author":{"gitId":"claribelho"},"content":"### 2.5.2 Edit an existing drink after inserted: `editDrink`","lastModifiedDate":"2024-04-15"},{"lineNumber":627,"author":{"gitId":"claribelho"},"content":"For a drink that was inputted in the day, edit its intake volume. You may identify the drink by its index in","lastModifiedDate":"2024-04-15"},{"lineNumber":628,"author":{"gitId":"claribelho"},"content":"listDrinks.","lastModifiedDate":"2024-04-15"},{"lineNumber":629,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":630,"author":{"gitId":"claribelho"},"content":"**Format**: `editDrink INDEX s/NEW_VOLUME`  ","lastModifiedDate":"2024-04-15"},{"lineNumber":631,"author":{"gitId":"claribelho"},"content":"**Sample input**: `editDrink 1 s/200`  ","lastModifiedDate":"2024-04-15"},{"lineNumber":632,"author":{"gitId":"BryanCastorius"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":633,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":634,"author":{"gitId":"claribelho"},"content":"iced lemon tea has been edited to 200 ml","lastModifiedDate":"2024-04-15"},{"lineNumber":635,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":636,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":637,"author":{"gitId":"claribelho"},"content":"### 2.5.3 Edit water intake after inserted: `editWater`","lastModifiedDate":"2024-04-15"},{"lineNumber":638,"author":{"gitId":"claribelho"},"content":"Edit the total volume of water intake of the day, in ml.","lastModifiedDate":"2024-04-15"},{"lineNumber":639,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":640,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `editWater s/TOTAL_WATER_INTAKE`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":641,"author":{"gitId":"claribelho"},"content":"**Sample input**: `editWater s/200`  ","lastModifiedDate":"2024-04-15"},{"lineNumber":642,"author":{"gitId":"BryanCastorius"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":643,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":644,"author":{"gitId":"claribelho"},"content":"Total water intake has been edited to 200 ml","lastModifiedDate":"2024-04-15"},{"lineNumber":645,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":646,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":647,"author":{"gitId":"claribelho"},"content":"## 2.6 For deleting data","lastModifiedDate":"2024-04-15"},{"lineNumber":648,"author":{"gitId":"claribelho"},"content":"### 2.6.1 Delete a certain meal entry: `deleteMeal`","lastModifiedDate":"2024-04-15"},{"lineNumber":649,"author":{"gitId":"claribelho"},"content":"Delete a meal that was inputted today. You may identify the meal by its index in listMeals.","lastModifiedDate":"2024-04-15"},{"lineNumber":650,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":651,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `deleteMeal INDEX`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":652,"author":{"gitId":"BryanCastorius"},"content":"**Sample Input**: `deleteMeal 1`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":653,"author":{"gitId":"BryanCastorius"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":654,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":655,"author":{"gitId":"claribelho"},"content":"Removed chicken rice from meals","lastModifiedDate":"2024-04-15"},{"lineNumber":656,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":657,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":658,"author":{"gitId":"claribelho"},"content":"### 2.6.2 Delete a certain drink entry: `deleteDrink`","lastModifiedDate":"2024-04-15"},{"lineNumber":659,"author":{"gitId":"claribelho"},"content":"Delete a drink that was inputted today. You may identify the drink by its index in listDrinks.","lastModifiedDate":"2024-04-15"},{"lineNumber":660,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":661,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `deleteDrink INDEX`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":662,"author":{"gitId":"BryanCastorius"},"content":"**Sample input**: `deleteDrink 1`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":663,"author":{"gitId":"BryanCastorius"},"content":"**Expected output:**","lastModifiedDate":"2024-04-02"},{"lineNumber":664,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":665,"author":{"gitId":"claribelho"},"content":"Removed iced lemon tea from drinks","lastModifiedDate":"2024-04-15"},{"lineNumber":666,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":667,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":668,"author":{"gitId":"claribelho"},"content":"### 2.6.3 Delete a certain exercise entry: `deleteExercise`","lastModifiedDate":"2024-04-15"},{"lineNumber":669,"author":{"gitId":"claribelho"},"content":"Delete an exercise that was inputted today. You may identify the exercise by its index in listExercises.","lastModifiedDate":"2024-04-15"},{"lineNumber":670,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":671,"author":{"gitId":"claribelho"},"content":"**Format**: `deleteExercise INDEX`  ","lastModifiedDate":"2024-04-15"},{"lineNumber":672,"author":{"gitId":"claribelho"},"content":"**Sample input**: `deleteExercise 1`  ","lastModifiedDate":"2024-04-15"},{"lineNumber":673,"author":{"gitId":"claribelho"},"content":"**Expected output:**","lastModifiedDate":"2024-04-15"},{"lineNumber":674,"author":{"gitId":"claribelho"},"content":"~~~","lastModifiedDate":"2024-04-15"},{"lineNumber":675,"author":{"gitId":"claribelho"},"content":"Removed swimming from exercises done","lastModifiedDate":"2024-04-15"},{"lineNumber":676,"author":{"gitId":"claribelho"},"content":"~~~","lastModifiedDate":"2024-04-15"},{"lineNumber":677,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":678,"author":{"gitId":"claribelho"},"content":"## 2.7 For clearing data","lastModifiedDate":"2024-04-15"},{"lineNumber":679,"author":{"gitId":"claribelho"},"content":"### 2.7.1 Clear all entries: `clear`","lastModifiedDate":"2024-04-15"},{"lineNumber":680,"author":{"gitId":"claribelho"},"content":"Clear all entries that was added to mealList, drinkList and exerciseList **today**.  ","lastModifiedDate":"2024-04-15"},{"lineNumber":681,"author":{"gitId":"claribelho"},"content":"Note: These are meals/drinks you consumed today or exercises you have done today.","lastModifiedDate":"2024-04-15"},{"lineNumber":682,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":683,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `clear`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":684,"author":{"gitId":"BryanCastorius"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":685,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":686,"author":{"gitId":"claribelho"},"content":"All meals, drinks and exercise entries that you added to your lists today","lastModifiedDate":"2024-04-15"},{"lineNumber":687,"author":{"gitId":"claribelho"},"content":"have been deleted","lastModifiedDate":"2024-04-15"},{"lineNumber":688,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":689,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":690,"author":{"gitId":"claribelho"},"content":"## 2.8 Exit program","lastModifiedDate":"2024-04-15"},{"lineNumber":691,"author":{"gitId":"claribelho"},"content":"### 2.8.1 Exit the app: `exit`","lastModifiedDate":"2024-04-15"},{"lineNumber":692,"author":{"gitId":"claribelho"},"content":"Safely close the application. Don\u0027t worry, all your inputs will be saved while you\u0027re gone :)","lastModifiedDate":"2024-04-15"},{"lineNumber":693,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":694,"author":{"gitId":"BryanCastorius"},"content":"**Format**: `exit`  ","lastModifiedDate":"2024-04-02"},{"lineNumber":695,"author":{"gitId":"BryanCastorius"},"content":"**Expected output**:","lastModifiedDate":"2024-04-02"},{"lineNumber":696,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":697,"author":{"gitId":"BryanCastorius"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2024-04-02"},{"lineNumber":698,"author":{"gitId":"BryanCastorius"},"content":"~~~","lastModifiedDate":"2024-04-02"},{"lineNumber":699,"author":{"gitId":"BryanCastorius"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":700,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":701,"author":{"gitId":"claribelho"},"content":"## 3) FAQ","lastModifiedDate":"2024-04-15"},{"lineNumber":702,"author":{"gitId":"BryanCastorius"},"content":"**Q**: How do I save changes made in the app? ","lastModifiedDate":"2024-04-15"},{"lineNumber":703,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":704,"author":{"gitId":"BryanCastorius"},"content":"**A**: All changes will be saved once typing `exit` and terminating the program correctly. Any abrupt termination will ","lastModifiedDate":"2024-04-15"},{"lineNumber":705,"author":{"gitId":"BryanCastorius"},"content":"cause all changes within the session to be lost.","lastModifiedDate":"2024-04-15"},{"lineNumber":706,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":707,"author":{"gitId":"BryanCastorius"},"content":"**Q**: What is the difference between `listMeals` and `listMealsAll`?","lastModifiedDate":"2024-04-15"},{"lineNumber":708,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":709,"author":{"gitId":"BryanCastorius"},"content":"**A**: `listMeals` will list out all the meals you have eaten today ","lastModifiedDate":"2024-04-15"},{"lineNumber":710,"author":{"gitId":"BryanCastorius"},"content":"(with respect to the device current date). Let\u0027s say you type `listMeals` on Monday 23:59, ","lastModifiedDate":"2024-04-15"},{"lineNumber":711,"author":{"gitId":"BryanCastorius"},"content":"and then type it again on Tuesday 00:01, the list displayed will be different (empty if you have not made any changes). ","lastModifiedDate":"2024-04-15"},{"lineNumber":712,"author":{"gitId":"BryanCastorius"},"content":"`listMealsAll` will list out all the meals you have eaten throughout the lifetime of the app, it could be days ago,","lastModifiedDate":"2024-04-15"},{"lineNumber":713,"author":{"gitId":"BryanCastorius"},"content":"weeks ago, months, or even years, as long ss you have inputted and saved it correctly and did not delete the data. ","lastModifiedDate":"2024-04-15"},{"lineNumber":714,"author":{"gitId":"BryanCastorius"},"content":"The same applies for others (e.g. `listDrinks` and `listDrinksAll`)","lastModifiedDate":"2024-04-15"},{"lineNumber":715,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":716,"author":{"gitId":"BryanCastorius"},"content":"**Q**: Will `clear` erase all the entries from days ago?","lastModifiedDate":"2024-04-15"},{"lineNumber":717,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":718,"author":{"gitId":"BryanCastorius"},"content":"**A**: No. `clear` will only delete all insertions (including post edit) you have made today.","lastModifiedDate":"2024-04-15"},{"lineNumber":719,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":720,"author":{"gitId":"BryanCastorius"},"content":"**Q**: Am I able to delete or edit the entries I have inserted from days ago?","lastModifiedDate":"2024-04-15"},{"lineNumber":721,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":722,"author":{"gitId":"BryanCastorius"},"content":"**A**: No. All drinks, meals, and exercises, you have inserted from days ago will no longer be able to change. ","lastModifiedDate":"2024-04-15"},{"lineNumber":723,"author":{"gitId":"BryanCastorius"},"content":"Only changes made today can be edited/deleted, so make sure that everything is correct before the date changes!","lastModifiedDate":"2024-04-15"},{"lineNumber":724,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":725,"author":{"gitId":"BryanCastorius"},"content":"**Q**: My `listDrinks` have 3 indexes, but my `listDrinksAll` have 10 indexes, why can\u0027t I perform `deleteDrink 10`?","lastModifiedDate":"2024-04-15"},{"lineNumber":726,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":727,"author":{"gitId":"BryanCastorius"},"content":"**A**: Referring to the previous question, you can only delete/edit items made today. `listDrinks` and `listDrinksAll` ","lastModifiedDate":"2024-04-15"},{"lineNumber":728,"author":{"gitId":"BryanCastorius"},"content":"have different list indexes, please follow `listDrinks` index only. This applies to both meal and exercises.","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"edwardhumi":59,"jasonlienardi":161,"BryanCastorius":122,"-":19,"claribelho":367}},{"path":"docs/diagrams/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BryanCastorius"},"content":"@startuml","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"!include Style.puml","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"BryanCastorius"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"BryanCastorius"},"content":"!include \u003coffice/Concepts/documents\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"hide footbox","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"hide members","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"BryanCastorius"},"content":"Package \" \"{","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"BryanCastorius"},"content":"    Class Ui UI_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"BryanCastorius"},"content":"    Class FitNUS MAIN_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"BryanCastorius"},"content":"    Class Storage STORAGE_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"BryanCastorius"},"content":"    Class Parser PARSER_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"BryanCastorius"},"content":"    Class User USER_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"BryanCastorius"},"content":"    Class Date DATE_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"BryanCastorius"},"content":"    Class ExerciseList LIST_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"BryanCastorius"},"content":"    Class DrinkList LIST_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"BryanCastorius"},"content":"    Class MealList LIST_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"BryanCastorius"},"content":"Class \"\u003c$user\u003e\" as Icon PERSON_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"BryanCastorius"},"content":"Class \"\u003c$documents\u003e\" as File PERSON_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"BryanCastorius"},"content":"Icon .\u003e Ui","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"BryanCastorius"},"content":"FitNUS -\u003e Ui","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"BryanCastorius"},"content":"Ui -\u003e Parser","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"BryanCastorius"},"content":"Ui --\u003e User","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"BryanCastorius"},"content":"Ui --\u003e Storage","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"BryanCastorius"},"content":"User -\u003e Date","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"BryanCastorius"},"content":"User .\u003e Parser","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"BryanCastorius"},"content":"User .\u003e Storage","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"BryanCastorius"},"content":"User --\u003e ExerciseList","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"BryanCastorius"},"content":"User --\u003e MealList","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"BryanCastorius"},"content":"User --\u003e DrinkList","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"BryanCastorius"},"content":"Parser -\u003e User","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"BryanCastorius"},"content":"Storage .\u003e File","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"BryanCastorius"},"content":"@enduml","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"BryanCastorius":42}},{"path":"docs/diagrams/DrinkListClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BryanCastorius"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"!include style.puml","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"BryanCastorius"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"BryanCastorius"},"content":"skinparam arrowColor CLASS_ARROW_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"BryanCastorius"},"content":"skinparam classBackgroundColor CLASS_DIAGRAM_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"Class DrinkList {","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003edrinkList: ArrayList\u003cDrink\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003edrinkListAll: ArrayList\u003cDrink\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003ewaterList: ArrayList\u003cWater\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003ewaterListAll: ArrayList\u003cWater\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"BryanCastorius"},"content":"    + DrinkList()","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"BryanCastorius"},"content":"    + handleAddNewDrinkNutrient(command: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"BryanCastorius"},"content":"    + handleDrink(command: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"BryanCastorius"},"content":"    + handleViewWaterIntake(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"BryanCastorius"},"content":"    + printDrinkList(startIndex: int, drinkListToPrint: ArrayList\u003cDrink\u003e): void","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"BryanCastorius"},"content":"    + handleListDrinks(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"BryanCastorius"},"content":"    + handleListDrinksAll(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"BryanCastorius"},"content":"    + handleListDrinksDate(command: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"BryanCastorius"},"content":"    + handleEditDrinkServingSize(command: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"BryanCastorius"},"content":"    + handleEditWaterIntake (command: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"BryanCastorius"},"content":"    + handleDeleteDrink (command: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"BryanCastorius"},"content":"Class Drink {","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003enutrientDetails: HashMap \u003cString, int[]\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"BryanCastorius"},"content":"    - name: String","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"BryanCastorius"},"content":"    - dateAdded: String","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"BryanCastorius"},"content":"    - drinkVolume: int","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"BryanCastorius"},"content":"    - carbs: long","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"BryanCastorius"},"content":"    - sugar: long","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"BryanCastorius"},"content":"    - calories: long","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"BryanCastorius"},"content":"    - protein: long","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"BryanCastorius"},"content":"    - fat: long","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"BryanCastorius"},"content":"    + Drink(name: String, volume: int, currentDate: String)","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003ehandleInfoDrink (command: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003eprintAvailableExercises(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003elistAvailableDrinks(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003egetNutrientDetails(): HashMap\u003cString, int[]\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"BryanCastorius"},"content":"    + getName(): String","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"BryanCastorius"},"content":"    + getDrinkVolumeSize(): int","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"BryanCastorius"},"content":"    + getCalories(): long","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"BryanCastorius"},"content":"    + getCarbs(): long","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"BryanCastorius"},"content":"    + getSugar(): long","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"BryanCastorius"},"content":"    + getProtein(): long","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"BryanCastorius"},"content":"    + getFat(): long","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"BryanCastorius"},"content":"    + getDate(): String","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"BryanCastorius"},"content":"    - setNutrientValues(name: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"BryanCastorius"},"content":"Class Water {","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"BryanCastorius"},"content":"    - waterIntake: int","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"BryanCastorius"},"content":"    - dateAdded: String","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"BryanCastorius"},"content":"    + Water(amount: int, dateAdded: String)","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"BryanCastorius"},"content":"    + getWater(): int","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"BryanCastorius"},"content":"    + addWaterIntake(amount: int): void","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"BryanCastorius"},"content":"    + editWaterIntake(amount: int): void","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"BryanCastorius"},"content":"    + getDate(): String","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"BryanCastorius"},"content":"DrinkList -down-\u003e \"*\" Drink","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"BryanCastorius"},"content":"DrinkList --\u003e \"*\" Water","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"BryanCastorius"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"BryanCastorius":65}},{"path":"docs/diagrams/EatCommandDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jasonlienardi"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"jasonlienardi"},"content":"actor User","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"jasonlienardi"},"content":"participant \":ui\" as ui","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"jasonlienardi"},"content":"participant \":parser\" as P","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"jasonlienardi"},"content":"participant \":MealList\" as Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"jasonlienardi"},"content":"participant \"Parser\" as Foo2 \u003c\u003c class \u003e\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"jasonlienardi"},"content":"participant \":Meal\" as Foo3","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"jasonlienardi"},"content":"activate ui","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"jasonlienardi"},"content":"User -\u003e ui : input eat command","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"jasonlienardi"},"content":"ui -\u003e P : parseCommand(Command)","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"jasonlienardi"},"content":"activate P","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"jasonlienardi"},"content":"P -\u003e Foo1 : handleMeal()","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"jasonlienardi"},"content":"activate Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"jasonlienardi"},"content":"Foo1 -\u003e Foo2 : parseMeal(input)","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"jasonlienardi"},"content":"activate Foo2","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"jasonlienardi"},"content":"Foo2 --\u003e Foo1 : mealName and mealSize","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"jasonlienardi"},"content":"deactivate Foo2","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"jasonlienardi"},"content":"Foo1 -\u003e Foo3 : new Meal(mealName, servingSize, currentDate.getDate()","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"jasonlienardi"},"content":"activate Foo3","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"jasonlienardi"},"content":"Foo3 -\u003e Foo3 : setNutrientDetails(mealName)","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"jasonlienardi"},"content":"activate Foo3","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"jasonlienardi"},"content":"deactivate Foo3","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"jasonlienardi"},"content":"Foo3 --\u003e Foo1 : newMeal","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"jasonlienardi"},"content":"deactivate Foo3","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"jasonlienardi"},"content":"Foo1 -\u003e Foo1 : mealList.add(newMeal)","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"jasonlienardi"},"content":"activate Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"jasonlienardi"},"content":"deactivate Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"jasonlienardi"},"content":"Foo1 -\u003e Foo1 : print tracked meal eaten","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"jasonlienardi"},"content":"activate Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"jasonlienardi"},"content":"deactivate Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"jasonlienardi"},"content":"Foo1 --\u003e P","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"jasonlienardi"},"content":"deactivate Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"jasonlienardi"},"content":"P --\u003e ui","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"jasonlienardi"},"content":"deactivate P","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"jasonlienardi"},"content":"ui --\u003e User","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"jasonlienardi"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"jasonlienardi":44}},{"path":"docs/diagrams/EditMealCommandDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jasonlienardi"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"jasonlienardi"},"content":"actor User","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"jasonlienardi"},"content":"participant \":ui\" as ui","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"jasonlienardi"},"content":"participant \":parser\" as P","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"jasonlienardi"},"content":"participant \":MealList\" as Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"jasonlienardi"},"content":"participant \":handleEditMealServingSize\" as Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"jasonlienardi"},"content":"participant \"Parser\" as Foo2 \u003c\u003c class \u003e\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"participant \":MealList\" as Foo3","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"jasonlienardi"},"content":"participant \":Meal\" as Foo4","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"jasonlienardi"},"content":"activate ui","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"jasonlienardi"},"content":"User -\u003e ui : input editMeal command","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"jasonlienardi"},"content":"ui -\u003e P : parseCommand(Command)","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"jasonlienardi"},"content":"activate P","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"jasonlienardi"},"content":"P -\u003e Foo1 : handleEditMealServingSize()","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"jasonlienardi"},"content":"activate Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"jasonlienardi"},"content":"Foo1 -\u003e Foo2 : parseEditMeal(input)","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"jasonlienardi"},"content":"activate Foo2","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"jasonlienardi"},"content":"Foo2 --\u003e Foo1 : editMealIndex and editMealSize","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"jasonlienardi"},"content":"deactivate Foo2","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"jasonlienardi"},"content":"Foo1 -\u003e Foo3 : mealList.get(Parser.editMealIndex).getName()","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"jasonlienardi"},"content":"activate Foo3","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"jasonlienardi"},"content":"Foo3 --\u003e Foo1 : mealName","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"jasonlienardi"},"content":"deactivate Foo3","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"jasonlienardi"},"content":"Foo1 -\u003e Foo3 : mealList.get(Parser.editMealIndex).getDate()","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"jasonlienardi"},"content":"activate Foo3","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"jasonlienardi"},"content":"Foo3 --\u003e Foo1 : mealDate","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"jasonlienardi"},"content":"deactivate Foo3","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"jasonlienardi"},"content":"Foo1 -\u003e Foo4 : new Meal(mealName, Parser.editMealSize, mealDate)","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"jasonlienardi"},"content":"activate Foo4","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"jasonlienardi"},"content":"Foo4 -\u003e Foo4 : setNutrientDetails(mealName)","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"jasonlienardi"},"content":"activate Foo4","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"jasonlienardi"},"content":"deactivate Foo4","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"jasonlienardi"},"content":"Foo4 --\u003e Foo1 : editedMeal","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"jasonlienardi"},"content":"deactivate Foo4","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"jasonlienardi"},"content":"Foo1 -\u003e Foo1 : mealList.set(Parser.editMealIndex, updatedMeal)","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"jasonlienardi"},"content":"activate Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"jasonlienardi"},"content":"deactivate Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"jasonlienardi"},"content":"Foo1 -\u003e Foo1 : print meal edited","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"jasonlienardi"},"content":"activate Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"jasonlienardi"},"content":"deactivate Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"jasonlienardi"},"content":"Foo1 --\u003e P","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"jasonlienardi"},"content":"deactivate Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"jasonlienardi"},"content":"P --\u003e ui","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"jasonlienardi"},"content":"deactivate P","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"jasonlienardi"},"content":"ui --\u003e User","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"jasonlienardi"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"jasonlienardi":56}},{"path":"docs/diagrams/ExerciseListClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BryanCastorius"},"content":"@startuml","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"!include style.puml","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"BryanCastorius"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"BryanCastorius"},"content":"skinparam arrowColor CLASS_ARROW_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"BryanCastorius"},"content":"skinparam classBackgroundColor CLASS_DIAGRAM_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"Class ExerciseList {","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"BryanCastorius"},"content":"    + exerciseList: ArrayList\u003cExercise\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"BryanCastorius"},"content":"    + exerciseListAll: ArrayList\u003cExercise\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"BryanCastorius"},"content":"    + ExerciseList()","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"BryanCastorius"},"content":"    + handleListExercises(): void","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"BryanCastorius"},"content":"    + handleListExercisesAll(): void","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"BryanCastorius"},"content":"    + handleCaloriesBurnt(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"BryanCastorius"},"content":"    + handleListExercisesDate(command: String): void","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"BryanCastorius"},"content":"    + handleDeleteExercisesDate(command: String): void","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"BryanCastorius"},"content":"    + handleExercises (command: String): void","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"BryanCastorius"},"content":"    + handleAddNewExerciseCalories(command: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"BryanCastorius"},"content":"    + printExerciseList(exerciseListToPrint: ArrayList\u003cExercise\u003e): void","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"BryanCastorius"},"content":"Class Exercise {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003eexerciseDetails: HashMap\u003cString, int[]\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"BryanCastorius"},"content":"    - name: String","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"BryanCastorius"},"content":"    - duration: int","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"BryanCastorius"},"content":"    - intensity: ExerciseIntensity","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"BryanCastorius"},"content":"    - caloriesBurnt: int","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"BryanCastorius"},"content":"    - dateAdded: String","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"BryanCastorius"},"content":"    + Exercise(name: String, duration: int, intensity: ExerciseIntensity, currentDate: String)","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"BryanCastorius"},"content":"    + getName(): String","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"BryanCastorius"},"content":"    + getDuration(): int","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"BryanCastorius"},"content":"    + getIntensity(): ExerciseIntensity","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"BryanCastorius"},"content":"    + getDate(): String","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"BryanCastorius"},"content":"    + getCaloriesBurnt(): long","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003ehandleInfoExercise(command: String): void","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003eprintAvailableExercises(): void","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003elistAvailableExercises(): void","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003egetExerciseDetails(): HashMap\u003cString, int[]\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"BryanCastorius"},"content":"    - setCaloriesBurnt(): void","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"BryanCastorius"},"content":"    - isValidIntensity(intensity: ExerciseIntensity): boolean","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"BryanCastorius"},"content":"Class \"\u003c\u003cenumeration\u003e\u003e\\nExerciseIntensity\" as ExerciseIntensity {","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"BryanCastorius"},"content":"    HIGH","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"BryanCastorius"},"content":"    MEDIUM","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"BryanCastorius"},"content":"    LOW","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"BryanCastorius"},"content":"ExerciseList -down-\u003e \"*\" Exercise","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"BryanCastorius"},"content":"Exercise \"*\" *-down-\u003e \"1\" ExerciseIntensity","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"BryanCastorius"},"content":"@enduml","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"BryanCastorius":54}},{"path":"docs/diagrams/InfoMealSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BryanCastorius"},"content":"@startuml","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"!include Style.puml","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"BryanCastorius"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"BryanCastorius"},"content":"skinparam participant {","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":"    BackgroundColor #F5F0FF","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"    BorderColor black","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"    FontColor black","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"BryanCastorius"},"content":"actor User","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"BryanCastorius"},"content":"participant \":ui\" as ui","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"BryanCastorius"},"content":"participant \":parser\" as parser","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"BryanCastorius"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nMeal\" as Meal","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"BryanCastorius"},"content":"User-\u003e ui : input: infoMeal chicken rice","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"BryanCastorius"},"content":"activate ui","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"BryanCastorius"},"content":"ui -\u003e parser : parseCommand(\"infoMeal chicken rice\")","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"BryanCastorius"},"content":"activate parser","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"BryanCastorius"},"content":"parser -\u003e Meal : handleInfoMeal(\"infoMeal chicken rice\")","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"BryanCastorius"},"content":"activate Meal","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"BryanCastorius"},"content":"Meal --\u003e parser : parseInfoMeal(\"infoMeal chicken rice\")","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"BryanCastorius"},"content":"parser -\u003e Meal : return name","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"BryanCastorius"},"content":"deactivate parser","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"BryanCastorius"},"content":"Meal -\u003e Meal : print the nutrient details of the meal based on its name","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"BryanCastorius"},"content":"Meal --\u003e ui","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"BryanCastorius"},"content":"deactivate Meal","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"BryanCastorius"},"content":"ui --\u003e User","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"BryanCastorius"},"content":"@enduml","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"BryanCastorius":35}},{"path":"docs/diagrams/MealListClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BryanCastorius"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"!include style.puml","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"BryanCastorius"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"BryanCastorius"},"content":"skinparam arrowColor CLASS_ARROW_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"BryanCastorius"},"content":"skinparam classBackgroundColor CLASS_DIAGRAM_COLOR","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"Class MealList {","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003emealList: ArrayList\u003cMeal\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003emealListAll: ArrayList\u003cMeal\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"BryanCastorius"},"content":"    + MealList()","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"BryanCastorius"},"content":"    + handleAddNewMealNutrient(command: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003ehandleMeal(command: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003eprintMealList(startIndex: int, mealListToPrint: ArrayList\u003cMeal\u003e): void","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003ehandleListMeals(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003ehandleListMealsAll(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003ehandleListMealsDate(command: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003ehandleEditMealServingSize(command: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003ehandleDeleteMeal(command: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"BryanCastorius"},"content":"Class Meal {","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003enutrientDetails: HashMap\u003cString, int[]\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"BryanCastorius"},"content":"    - name: String","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"BryanCastorius"},"content":"    - servingSize: int","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"BryanCastorius"},"content":"    - dateAdded: String","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"BryanCastorius"},"content":"    - calories: long","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"BryanCastorius"},"content":"    - carbs: long","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"BryanCastorius"},"content":"    - protein: long","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"BryanCastorius"},"content":"    - fat: long","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"BryanCastorius"},"content":"    - fiber: long","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"BryanCastorius"},"content":"    - sugar: long","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"BryanCastorius"},"content":"    + Meal(name: String, servingSize: int, currentDate: String)","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003ehandleInfoMeal(command: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003eprintAvailableMeals(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003elistAvailableMeals(): void","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"BryanCastorius"},"content":"    + \u003cu\u003egetNutrientDetails(): HashMap\u003cString, int[]\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"BryanCastorius"},"content":"    + getName(): String","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"BryanCastorius"},"content":"    + getCalories(): long","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"BryanCastorius"},"content":"    + getCarbs(): long","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"BryanCastorius"},"content":"    + getProtein(): long","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"BryanCastorius"},"content":"    + getFat(): long","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"BryanCastorius"},"content":"    + getFiber(): long","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"BryanCastorius"},"content":"    + getSugar(): long","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"BryanCastorius"},"content":"    + getServingSize(): int","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"BryanCastorius"},"content":"    + getDate(): String","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"BryanCastorius"},"content":"    - setNutrientValues(name: String): void","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"BryanCastorius"},"content":"MealList -down-\u003e \"*\" Meal","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"BryanCastorius"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"BryanCastorius":51}},{"path":"docs/diagrams/NewMealCommandDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jasonlienardi"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"jasonlienardi"},"content":"actor User","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"jasonlienardi"},"content":"participant \":ui\" as ui","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"jasonlienardi"},"content":"participant \":parser\" as P","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"jasonlienardi"},"content":"participant \":MealList\" as Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"jasonlienardi"},"content":"participant \"Parser\" as Foo2 \u003c\u003c class \u003e\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"jasonlienardi"},"content":"participant \"Meal\" as Foo3 \u003c\u003c class \u003e\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"jasonlienardi"},"content":"activate ui","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"jasonlienardi"},"content":"User -\u003e ui : input newMeal Command","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"jasonlienardi"},"content":"ui -\u003e P : parseCommand(Command)","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"jasonlienardi"},"content":"activate P","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"jasonlienardi"},"content":"P -\u003e Foo1 : handleAddNewMealNutrient()","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"jasonlienardi"},"content":"activate Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"jasonlienardi"},"content":"Foo1 -\u003e Foo2 : parseNewMeal(input)","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"jasonlienardi"},"content":"activate Foo2","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"jasonlienardi"},"content":"Foo2 --\u003e Foo1 : mealName, calories, carbs, protein, fat, fiber, sugar","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"jasonlienardi"},"content":"deactivate Foo2","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"jasonlienardi"},"content":"Foo1 -\u003e Foo3 : Meal.nutrientDetails.put(mealName, new int[]{calories, carbs, protein, fat, fiber, sugar})","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"jasonlienardi"},"content":"activate Foo3","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"jasonlienardi"},"content":"Foo3 -\u003e Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"jasonlienardi"},"content":"deactivate Foo3","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"jasonlienardi"},"content":"Foo1 -\u003e Foo1 : print added new meal to available meals","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"jasonlienardi"},"content":"activate Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"jasonlienardi"},"content":"deactivate Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"jasonlienardi"},"content":"Foo1 --\u003e P","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"jasonlienardi"},"content":"deactivate Foo1","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"jasonlienardi"},"content":"P --\u003e ui","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"jasonlienardi"},"content":"deactivate P","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"jasonlienardi"},"content":"ui --\u003e User","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"jasonlienardi"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"jasonlienardi":38}},{"path":"docs/diagrams/ParserSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"participant \":Fitnus\" as Fitnus","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"participant \"input:Scanner\" as Scanner","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"hide footbox","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"Fitnus -\u003e Ui **: Ui()","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"activate Ui","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"Ui -\u003e Scanner**: Scanner()","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"activate Scanner","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"Ui -\u003e Parser**: Parser(user)","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"activate Parser","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"Fitnus -\u003e Ui: printWelcomeMessage()","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"Ui --\u003e Fitnus","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"loop !isExit","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"Fitnus -\u003e Ui: readCommand()","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"Ui -\u003e Scanner: nextLine()","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"Scanner --\u003e Ui: command","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"\u0027Ui --\u003e Ui ++: showLine()","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"\u0027Ui --\u003e Ui --:","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"alt input is not exit command","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"Ui -\u003e Parser: parseCommand(command)","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"Parser --\u003e Ui: command handled","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"else input is exit command","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"deactivate Parser","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"Ui -\u003e Ui ++: handleExit()","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"Ui -\u003e Scanner: close()","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"destroy Scanner","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"Ui --\u003e Ui --: exit handled","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"end","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"end","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"Ui --\u003e Fitnus --: exit application","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"claribelho":47}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"edwardhumi"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"edwardhumi"},"content":"!include style.puml","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"edwardhumi"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"edwardhumi"},"content":"skinparam arrowColor CLASS_ARROW_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"edwardhumi"},"content":"skinparam classBackgroundColor CLASS_DIAGRAM_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"edwardhumi"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"edwardhumi"},"content":"Class Ui {","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"edwardhumi"},"content":"    + isExit: boolean","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"edwardhumi"},"content":"    + handleExit(): void","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"edwardhumi"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"edwardhumi"},"content":"Class Parser {","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"edwardhumi"},"content":"    +\u003cu\u003e parseMealStorage(data: String): void","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"edwardhumi"},"content":"    +\u003cu\u003e parseDrinkStorage(data: String): void","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"edwardhumi"},"content":"    +\u003cu\u003e parseExerciseStorage(data: String): void","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"edwardhumi"},"content":"    +\u003cu\u003e parseMealNutrient(data: String): void","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"edwardhumi"},"content":"    +\u003cu\u003e parseDrinkNutrient(data: String): void","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"edwardhumi"},"content":"    +\u003cu\u003e parseExerciseCalories(data: String): void","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"edwardhumi"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"edwardhumi"},"content":"Class User {","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"edwardhumi"},"content":"    +\u003cu\u003e myMealList: MealList","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"edwardhumi"},"content":"    +\u003cu\u003e myDrinkList: DrinkList","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"edwardhumi"},"content":"    +\u003cu\u003e myExerciseList: ExerciseList","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"edwardhumi"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"edwardhumi"},"content":"Class Storage {","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"edwardhumi"},"content":"    + textContent: String","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"edwardhumi"},"content":"    + folderPath: String","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"edwardhumi"},"content":"    + filePath: String","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"edwardhumi"},"content":"    + Storage(folderPath: String, filePath: String)","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"edwardhumi"},"content":"    + appendTextContent(content: String): void","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"edwardhumi"},"content":"    + readFile(): ArrayList\u003cString\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"edwardhumi"},"content":"    + createFile(): void","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"edwardhumi"},"content":"    + writeFile(textToAdd: String): void","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"edwardhumi"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"edwardhumi"},"content":"Class Meal {","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"edwardhumi"},"content":"    +\u003cu\u003e nutrientDetails: HashMap\u003cString, int[]\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"edwardhumi"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"edwardhumi"},"content":"Class Drink {","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"edwardhumi"},"content":"    +\u003cu\u003e nutrientDetails: HashMap\u003cString, int[]\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"edwardhumi"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"edwardhumi"},"content":"Class Exercise {","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"edwardhumi"},"content":"    +\u003cu\u003e exerciseDetails: HashMap\u003cString, int[]\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"edwardhumi"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"edwardhumi"},"content":"Class StorageManager {","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"edwardhumi"},"content":"    + StorageManager(mealStorage: Storage, drinkStorage: Storage, exerciseStorage: Storage,","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"edwardhumi"},"content":"                      mealNutrientStorage: Storage, drinkNutrientStorage: Storage, exerciseCaloriesStorage: Storage)","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"edwardhumi"},"content":"    + loadMeal(mealStorage: Storage): void","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"edwardhumi"},"content":"    + loadDrink(drinkStorage: Storage): void","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"edwardhumi"},"content":"    + loadExercise(exerciseStorage: Storage): void","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"edwardhumi"},"content":"    + loadMealNutrient(mealNutrientStorage: Storage): void","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"edwardhumi"},"content":"    + loadDrinkNutrient(drinkNutrientStorage: Storage): void","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"edwardhumi"},"content":"    + loadExerciseCalories(exerciseCaloriesStorage: Storage): void","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"edwardhumi"},"content":"    + saveMeal(mealStorage: Storage): void","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"edwardhumi"},"content":"    + saveDrink(drinkStorage: Storage): void","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"edwardhumi"},"content":"    + saveExercise(exerciseStorage:Storage): void","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"edwardhumi"},"content":"    + saveMealNutrients(mealNutrientStorage: Storage): void","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"edwardhumi"},"content":"    + saveDrinkNutrients(drinkNutrientStorage: Storage): void","lastModifiedDate":"2024-04-15"},{"lineNumber":65,"author":{"gitId":"edwardhumi"},"content":"    + saveExerciseCalories(exerciseCaloriesStorage: Storage): void","lastModifiedDate":"2024-04-15"},{"lineNumber":66,"author":{"gitId":"edwardhumi"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"edwardhumi"},"content":"StorageManager .left.\u003e Storage","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"edwardhumi"},"content":"StorageManager .right.\u003e Parser","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"edwardhumi"},"content":"StorageManager ..\u003e User","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"edwardhumi"},"content":"StorageManager ..\u003e Meal","lastModifiedDate":"2024-04-15"},{"lineNumber":73,"author":{"gitId":"edwardhumi"},"content":"StorageManager ..\u003e Drink","lastModifiedDate":"2024-04-15"},{"lineNumber":74,"author":{"gitId":"edwardhumi"},"content":"StorageManager ..\u003e Exercise","lastModifiedDate":"2024-04-15"},{"lineNumber":75,"author":{"gitId":"edwardhumi"},"content":"Ui -down-\u003e \"6\" Storage","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"edwardhumi"},"content":"Ui -down-\u003e \"1\" StorageManager","lastModifiedDate":"2024-04-15"},{"lineNumber":77,"author":{"gitId":"edwardhumi"},"content":"Ui -down-\u003e \"1\" Parser","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"edwardhumi"},"content":"note \"Some parameters and methods omitted for brevity\" as N","lastModifiedDate":"2024-04-15"},{"lineNumber":79,"author":{"gitId":"edwardhumi"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"edwardhumi":79}},{"path":"docs/diagrams/StorageManagerLoadingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"participant \":StorageManager\" as StorageManager","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"participant \"xyzNutrientStorage:Storage\" as xyzNutrientStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"participant \"xyzStorage:Storage\" as xyzStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"hide footbox","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"!pragma teoz true","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"Ui -\u003e StorageManager**: StorageManager(...)","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"activate StorageManager","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"alt successful case","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"StorageManager -\u003e StorageManager: loadXYZNutrient(xyzNutrientStorage)","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"activate StorageManager","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"StorageManager -\u003e xyzNutrientStorage: readFile()","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"activate xyzNutrientStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"xyzNutrientStorage --\u003e StorageManager: read pre-defined nutritional contents","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"deactivate xyzNutrientStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"StorageManager --\u003e StorageManager: loaded pre-defined nutritional contents","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"deactivate StorageManager","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"else FileNotFoundException caught","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"StorageManager -\u003e xyzNutrientStorage ++: createFile()","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"xyzNutrientStorage --\u003e StorageManager --: created file to store pre-defined nutritional contents","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"end","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"|||","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"alt successful case","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"StorageManager -\u003e StorageManager: loadXYZ(xyzStorage)","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"activate StorageManager","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"StorageManager -\u003e xyzStorage: readFile()","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"activate xyzStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"xyzStorage --\u003e StorageManager: read user\u0027s previously saved data","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"deactivate xyzStorage","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"StorageManager --\u003e StorageManager: loaded user\u0027s previously saved data","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"deactivate StorageManager","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"else FileNotFoundException caught","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"StorageManager -\u003e xyzStorage ++: createFile()","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"xyzStorage --\u003e StorageManager --: created file to store user\u0027s data","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"else Exceptions related to saved file manipulations caught","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"StorageManager -\u003e xyzStorage ++: clearFile()","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"xyzStorage --\u003e StorageManager --: cleared previously saved file","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"end","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"claribelho":53}},{"path":"docs/diagrams/StorageManagerSavingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"participant \":StorageManager\" as StorageManager","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"participant \"xyzNutrientStorage:Storage\" as xyzNutrientStorage","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"participant \"xyzStorage:Storage\" as xyzStorage","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"hide footbox","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"!pragma teoz true","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"Ui -\u003e StorageManager**: StorageManager(...)","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"activate StorageManager","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"alt input is not exit command","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"else user input is exit","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"Ui -\u003e Ui ++: handleExit()","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"Ui -\u003e StorageManager: saveXYZ()","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"StorageManager -\u003e xyzStorage++: get saved data in textContent of Storage","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"xyzStorage -\u003e xyzStorage ++: writeFile(...)","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"xyzStorage --\u003e xyzStorage --: data saved into file","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"xyzStorage --\u003e StorageManager --: saved user\u0027s xyz data","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"\u0026 StorageManager --\u003e Ui: saved user\u0027s xyz data","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"|||","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"Ui -\u003e StorageManager: saveXYZNutrients()","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"StorageManager -\u003e xyzNutrientStorage++: get saved data in textContent of Storage","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"xyzNutrientStorage -\u003e xyzNutrientStorage ++: writeFile(...)","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"xyzNutrientStorage --\u003e xyzNutrientStorage --: data saved into file","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"xyzNutrientStorage --\u003e StorageManager --: saved user\u0027s xyzNutrient data","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"\u0026 StorageManager --\u003e Ui: saved user\u0027s xyzNutrient data","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"deactivate StorageManager","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"Ui --\u003e Ui --: exit handled","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"end","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"claribelho":41}},{"path":"docs/diagrams/Style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BryanCastorius"},"content":"/\u0027","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"BryanCastorius"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"BryanCastorius"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"BryanCastorius"},"content":" \u0027/","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"BryanCastorius"},"content":"!define MAIN_COLOR #DBA800","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"BryanCastorius"},"content":"!define PERSON_COLOR #ffb6c1","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"BryanCastorius"},"content":"!define USER_COLOR #808080","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"BryanCastorius"},"content":"!define PARSER_COLOR #00A36C","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"BryanCastorius"},"content":"!define RECIPE_PARSER_COLOR #34A56F","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"BryanCastorius"},"content":"!define INGREDIENT_PARSER_COLOR #1AA260","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"BryanCastorius"},"content":"!define SHORTCUT_PARSER_COLOR #A43A7C","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"BryanCastorius"},"content":"!define LIST_COLOR #C6DEFF","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"BryanCastorius"},"content":"!define DATE_COLOR #5D3FD3","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"BryanCastorius"},"content":"!define SHORTCUT_COLOR #58699A","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"BryanCastorius"},"content":"!define RECIPE_LIST_COLOR #B0CFDE","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"BryanCastorius"},"content":"!define RECIPE_LIST_COLOR_T1 #C9DFEC","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"BryanCastorius"},"content":"!define INGREDIENT_LIST_COLOR #C9DFEC","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"BryanCastorius"},"content":"!define SHORTCUT_LIST_COLOR #3A7CA4","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"BryanCastorius"},"content":"!define STORAGE_COLOR #E69598","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"BryanCastorius"},"content":"!define FILE_WRITER_COLOR #CBE57C","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"BryanCastorius"},"content":"!define FILE_COLOR #8B1EC4","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"BryanCastorius"},"content":"!define SCANNER_COLOR #3E732E","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"BryanCastorius"},"content":"!define LOGGER_COLOR #FCBE85","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"BryanCastorius"},"content":"!define UI_COLOR #C24641","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"BryanCastorius"},"content":"!define UI_COLOR_T1 #C11B17","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"BryanCastorius"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"BryanCastorius"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"BryanCastorius"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"BryanCastorius"},"content":"!define CLASS_DIAGRAM_COLOR #ADD8E6","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"BryanCastorius"},"content":"!define CLASS_ARROW_COLOR #3E4255","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"BryanCastorius"},"content":"!define OBJECT_DIAGRAM_COLOR #D0D7FE","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"BryanCastorius"},"content":"!define OBJECT_ARROW_COLOR #","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"BryanCastorius"},"content":"!define INTERFACE_COLOR #C24641","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"BryanCastorius"},"content":"!define INTERFACE_COLOR_T1 #C11B17","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"BryanCastorius"},"content":"!define INTERFACE_COLOR_T2 #3FC71B","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"BryanCastorius"},"content":"!define INTERFACE_COLOR_T3 #166800","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"BryanCastorius"},"content":"!define INTERFACE_COLOR_T4 #0E4100","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"BryanCastorius"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"BryanCastorius"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"BryanCastorius"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"BryanCastorius"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"BryanCastorius"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"BryanCastorius"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"BryanCastorius"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"BryanCastorius"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"BryanCastorius"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"BryanCastorius"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"BryanCastorius"},"content":"skinparam Package {","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"BryanCastorius"},"content":"    BackgroundColor #FFFFFF","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"BryanCastorius"},"content":"    BorderThickness 1","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"BryanCastorius"},"content":"    FontSize 16","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"BryanCastorius"},"content":"skinparam Class {","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"BryanCastorius"},"content":"    FontColor #000000","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"BryanCastorius"},"content":"    FontSize 15","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"BryanCastorius"},"content":"    BorderThickness 1","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"BryanCastorius"},"content":"    BorderColor #000000","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"BryanCastorius"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"BryanCastorius"},"content":"    FontName Arial","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"BryanCastorius"},"content":"skinparam Actor {","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"BryanCastorius"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"BryanCastorius"},"content":"    Color USER_COLOR","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"BryanCastorius"},"content":"    FontName Arial","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"BryanCastorius"},"content":"skinparam Sequence {","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"BryanCastorius"},"content":"    MessageAlign center","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"BryanCastorius"},"content":"    BoxFontSize 15","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"BryanCastorius"},"content":"    BoxPadding 0","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"BryanCastorius"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"BryanCastorius"},"content":"    FontName Arial","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"BryanCastorius"},"content":"skinparam Participant {","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"BryanCastorius"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"BryanCastorius"},"content":"    Padding 20","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"BryanCastorius"},"content":"skinparam ArrowFontStyle bold","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"BryanCastorius"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"BryanCastorius"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"BryanCastorius"},"content":"skinparam Shadowing false","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"BryanCastorius"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"BryanCastorius"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"BryanCastorius"},"content":"\u0027hide footbox","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"BryanCastorius"},"content":"\u0027hide members","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"BryanCastorius"},"content":"hide circle","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"BryanCastorius":118}},{"path":"docs/diagrams/UserClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"!include style.puml","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"skinparam arrowColor CLASS_ARROW_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"skinparam classBackgroundColor CLASS_DIAGRAM_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"Class User {","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"    - \u003cu\u003eMAX_WATER_INTAKE : int \u003d 10000","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"    - \u003cu\u003eRECOMMEND_WATER_INTAKE : int \u003d 2600","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"    - \u003cu\u003eRECOMMEND_CALORIE_INTAKE : long \u003d 2200","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"    + User()","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"    + handleViewCalories(): void","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"    + handleViewCarbohydrates(): void","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"    + handleViewProteins(): void","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"    + handleViewFiber(): void","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"    + handleViewFat(): void","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"    + handleViewSugar(): void","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"    + handleListEverything(): void","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"    + handleListEverythingAll(): void","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"    + handleViewFat(): void","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"    + handleViewSugar(): void","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"    + handleListEverything(): void","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"    + handleListEverythingAll(): void","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"    + handleListEverythingDate(String command) : void","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"    + handleClear(): void","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"    + handleRecommendations(): void","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"Class MealList {","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"    + \u003cu\u003emealList: ArrayList\u003cMeal\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"    + \u003cu\u003emealListAll: ArrayList\u003cMeal\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"Class DrinkList {","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"    + \u003cu\u003edrinkList: ArrayList\u003cDrink\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"    + \u003cu\u003edrinkListAll: ArrayList\u003cDrink\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"    + \u003cu\u003ewaterList: ArrayList\u003cWater\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"    + \u003cu\u003ewaterListAll: ArrayList\u003cWater\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"Class ExerciseList {","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"    + exerciseList: ArrayList\u003cExercise\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"    + exerciseListAll: ArrayList\u003cExercise\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"User -down--\u003e \"myMealList 1\" MealList","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"User -down--\u003e \"myDrinkList 1\" DrinkList","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"User -down--\u003e \"myExerciseList 1\" ExerciseList","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"claribelho":50}},{"path":"docs/diagrams/UserViewXYZSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"@startuml","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"participant \":User\" as User","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"participant \"myMealList:MealList\" as MealList","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"participant \"myDrinkList: DrinkList\" as DrinkList","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"participant \"myExerciseList: ExerciseList\" as ExerciseList","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"participant \"meal:Meal\" as Meal","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"participant \"drink: Drink\" as Drink","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"participant \"exercise: Exercise\" as Exercise","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"hide footbox","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"!pragma teoz true","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"User -\u003e MealList **: MealList()","lastModifiedDate":"2024-04-14"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"activate MealList","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"User -\u003e DrinkList **: DrinkList()","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"activate DrinkList","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"User -\u003e ExerciseList **: ExerciseList()","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"activate ExerciseList","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"|||","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"Parser -\u003e User ++: handleViewXYZ()","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"loop all meals in myMealList","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"User -\u003e MealList: get XYZ value for meal","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"MealList -\u003e Meal ++: getXYZ()","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"Meal --\u003e MealList --: XYZ value","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"\u0026 MealList --\u003e User: increment counter for XYZ","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"end","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"|||","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"opt if user is not viewing fibre","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"loop all drinks in myDrinkList","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"User -\u003e DrinkList: get XYZ value for drink","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"DrinkList -\u003e Drink ++: getXYZ()","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"Drink --\u003e DrinkList --: XYZ value","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"\u0026 DrinkList --\u003e User: increment counter for XYZ","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"end","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"end","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"|||","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"opt if user is viewing calories","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"loop all exercises in myExerciseList","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"User -\u003e ExerciseList: get caloriesBurnt for exercise","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"ExerciseList -\u003e Exercise ++: getCaloriesBurnt()","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"Exercise --\u003e ExerciseList --: caloriesBurnt value","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"\u0026 ExerciseList --\u003e User: decrement counter for caloriesCount","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"end","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"end","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"User --\u003e Parser --: display to user their XYZ content","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"@enduml","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"claribelho":56}},{"path":"docs/team/bryancastorius.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BryanCastorius"},"content":"# Bryan Castorius\u0027 Project Portfolio Page","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"BryanCastorius"},"content":"FitNUS is a CLI application that aims to help combat diabetes and the overconsumption of calories, sugar, and","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"BryanCastorius"},"content":"carbohydrates. Our vision is to promote healthy lifestyle amongst NUS students.","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"BryanCastorius"},"content":"### Code Contributed: ","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"BryanCastorius"},"content":"Click on the following link: [Individual Reposense](https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003dw14\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-02-23)","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"BryanCastorius"},"content":"### Features Implemented:","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"BryanCastorius"},"content":"#### Drink and Water Class","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"BryanCastorius"},"content":"  * Methods to handle inserting water and drink volume","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"BryanCastorius"},"content":"  * Methods to edit the water volume intake","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"BryanCastorius"},"content":"  * Methods to obtain the nutritional value for each drink object","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"BryanCastorius"},"content":"  * Reorganize Drink and Water Class into part of DrinkList class","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"BryanCastorius"},"content":"#### Recommendations","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"BryanCastorius"},"content":"  * Method to provide the recommended amount of water and calories intake.","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"BryanCastorius"},"content":"### Enhancements Implemented","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"BryanCastorius"},"content":"#### Drink and Water Class","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"BryanCastorius"},"content":"  * Create various exceptions for handling invalid insertion to the drink command (e.g. UnregisteredDrinkException, InvalidEditWaterException)","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"BryanCastorius"},"content":"  * Making sure that only one object of water can be created per day will only add volume to the existing water object if it is still the same day","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"BryanCastorius"},"content":"  * Added javadoc documentation inside the Drink and Water class and also other class methods that relates to Drink and Water class","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"BryanCastorius"},"content":"#### Parser Class","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"BryanCastorius"},"content":"  * Update the help command output message","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"BryanCastorius"},"content":"  * Catch exceptions relating to Water and Drink Class","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"BryanCastorius"},"content":"  * Methods to parse the load and store Exercise command made from current session into ExerciseList.txt","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"BryanCastorius"},"content":"### Contributions to Developer Guide","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"BryanCastorius"},"content":"  * Added User Stories","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"BryanCastorius"},"content":"  * Added Table of Content","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"BryanCastorius"},"content":"  * Added Instructions for Manual Testing including basic features","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"BryanCastorius"},"content":"  * Added class diagrams for Meal, Drink, Exercise components and their explanation","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"BryanCastorius"},"content":"  * Added architecture diagram and its explanation","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"BryanCastorius"},"content":"  * Added InfoMeal sequence diagram and its explanation","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"BryanCastorius"},"content":"### Contributions to User Guide","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"BryanCastorius"},"content":"  * Added FAQs","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"BryanCastorius"},"content":"  * Update Table of Content","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"BryanCastorius"},"content":"  * Added explanations, sample inputs and outputs for features relating to adding data and data retrieval","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"BryanCastorius"},"content":"### Project Management","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"BryanCastorius"},"content":"  * Added issues for milestone `v1.0`, `v2.0`, and `v2.1`","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"BryanCastorius"},"content":"  * Solve and debug issues relating to Drink and Water feature from PE dry run","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"BryanCastorius"},"content":"  * Merge and resolve conflicts from other peers\u0027 pull requests","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"BryanCastorius":48}},{"path":"docs/team/claribelho.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"# Claribel Ho Jia Huan\u0027s Project Portfolio Page","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"## FitNUS","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"FitNUS is a CLI application that aims to help combat diabetes and the overconsumption of calories, sugar, and","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"carbohydrates. Our vision is to promote healthy lifestyle amongst NUS students.","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"## Summary of Contributions","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"Given below are my contributions to the project   ","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"### Code Contribution   ","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"* [Individual Reposense](https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003dw14\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-02-23\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dclaribelho\u0026tabRepo\u003dAY2324S2-CS2113-W14-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"### Features implemented","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"1. **User** Class: [#10](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/10)","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"   1. Create methods to handle view and clear inputs.","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"   2. Additionally, due to reorganisation of methods in v2.1, the following methods originally created in the User Class were moved:  ","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"      * _MealList Class_ - adding, editing and deleting a meal and viewing of the meal list. ","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"      * _DrinkList Class_ - editing and deleting a drink.","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"      * _Meal, Drink and Exercise Class_ - view all pre-defined meals, drinks and exercises.","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"2. **Date** Class: [#48](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/48/files#diff-e9bbd74038a5477b04128de17dc3a668137bf26b605b96c981c1bc8d24963e3a)","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"   1. Uses java.sql.Date to obtain the user\u0027s local machine date and time. ","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"   2. This is used ","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"     for storage organisation of user\u0027s past and present inputs.  ","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"  ","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"3. **DateValidation** and **IntegerValidation** Classes: [#137](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/137)","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"   [#51](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/51)","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"   1. These classes are responsible for verifying the ","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"     validity of dates and integers, else the methods will throw an exception to the user.","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"### Enhancements implemented","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"* Extensive Code Defense through testing to find bugs. Made use of exceptions and assertions to catch errors. ","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"[#51](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/51)","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"[#80](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/80)","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"[#153](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/153)","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"* Improve checks when Parsing user input to detect for user misuse.","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"* Improve checks when loading saved data in Storage to detect for user manipulation.","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"### Contributions to User Guide","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"- [View our User Guide](https://ay2324s2-cs2113-w14-1.github.io/tp/UserGuide.html)","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"- Created User Guide in v1.0, including the description, format, sample input and expected output for each command. ","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"[#35](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/35)","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"- Add documentation for `allmeals`, `allDrinks` and `allExercises`. [#76](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/76)","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"- Finalisation of descriptions and formatting in final v2.1 submission, with heavy emphasis on including notes for ","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"  the user to take note on. ","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"[#153](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/153)","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"### Contributions to Developer Guide","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"- [View our Developer Guide](https://ay2324s2-cs2113-w14-1.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"- [User Component](https://ay2324s2-cs2113-w14-1.github.io/tp/DeveloperGuide.html#user-component): Add Class Diagram, ","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"  Descriptions and Sequence Diagram.","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"- [Ui Component](https://ay2324s2-cs2113-w14-1.github.io/tp/DeveloperGuide.html#ui-component): Add descriptions and ","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"  Sequence Diagrams.","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"- [Storage Component](https://ay2324s2-cs2113-w14-1.github.io/tp/DeveloperGuide.html#sequence-diagram-1): Add ","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"  Sequence Diagram.","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"- [Appendix](https://ay2324s2-cs2113-w14-1.github.io/tp/DeveloperGuide.html#missingcorrupted-data-files): Manual ","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"  Testing with corrupted files.","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"- Constantly improving the defensiveness of the code by finding bugs.","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"- Create User Guide and ensure it is formatted and up-to-date. ","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"- Documentation of Methods.","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"- Update of README to provide a summary of UG.","lastModifiedDate":"2024-04-15"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"- Ensure that the website deployments of README, User Guide and Developer Guide is accurately displayed.","lastModifiedDate":"2024-04-15"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"### Contributions beyond the project team","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"- Bugs Review for other teams: [CS2113-T15-1](https://github.com/nus-cs2113-AY2324S2/tp/pull/44)","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"claribelho":68}},{"path":"docs/team/edwardhumi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"edwardhumi"},"content":"# Edward Humianto\u0027s Project Portfolio Page","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"edwardhumi"},"content":"## Project: FitNUS","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"edwardhumi"},"content":"### Overview","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"edwardhumi"},"content":"FitNUS is a CLI application that aims to help combat diabetes and the overconsumption of calories, sugar, and","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"edwardhumi"},"content":"carbohydrates. Our vision is to promote healthy lifestyle amongst NUS students.","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"edwardhumi"},"content":"### Summary of Contributions","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"edwardhumi"},"content":"#### Code contributed: [RepoSense Link](https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-02-23\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dedwardhumi\u0026tabRepo\u003dAY2324S2-CS2113-W14-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"edwardhumi"},"content":"#### Features implemented","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"edwardhumi"},"content":"- Storage Class","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"edwardhumi"},"content":"  - Data storage system to save and load user\u0027s meal, drinks, and exercises list in `txt` format","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"edwardhumi"},"content":"  - Storage to keep track the nutrients and calories details of known meals, drinks, and exercises in `csv` format","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"edwardhumi"},"content":"- User Class","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"edwardhumi"},"content":"  - Added `listMealsAll`, `listDrinksAll`, `listExercisesAll`, `listEverythingAll` command which allows user to view the ","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"edwardhumi"},"content":"  meal/drink/exercise list for all dates","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"edwardhumi"},"content":"  - Added `listMeals d/dd-MM-yyyy`, `listDrinks d/dd-MM-yyyy`, `listExercises d/dd-MM-yyyy`, `listEverything d/dd-MM-yyyy` ","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"edwardhumi"},"content":"  command which allows user to view the list for certain date","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"edwardhumi"},"content":"- Parser Class","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"edwardhumi"},"content":"  - Created parser for parsing commands and storage files","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"edwardhumi"},"content":"#### Enhancements implemented","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"edwardhumi"},"content":"- Add exception and its handler to check whether a date is valid before displaying the list of meals/drinks/exercises for certain date","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"edwardhumi"},"content":"[#61](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/61/files)","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"edwardhumi"},"content":"#### Project Management","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"edwardhumi"},"content":"- Added issues for `v1.0`, `v2.0` and `v2.1`","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"edwardhumi"},"content":"#### Contributions to User Guide","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"edwardhumi"},"content":"- Added documentation for features `listMeals d/[DATE]`, `listDrinks d/[DATE]`, `listExercises d/[DATE]`, `listEverything d/[DATE]`. ","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"edwardhumi"},"content":"Complete with command description, format, sample input and expected output. [#69](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/69/files#diff-b50feaf9240709b6b02fb9584696b012c2a69feeba89e409952cc2f401f373fb)","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"edwardhumi"},"content":"#### Contributions to Developer Guide","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"edwardhumi"},"content":"- Added description, implementation, and class diagram for `Storage`. ","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"edwardhumi"},"content":"[#147](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/147/files) [#150](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/150/files)","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"edwardhumi"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"edwardhumi"},"content":"- Created GitHub issues","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"edwardhumi"},"content":"- Assigned issues to team members","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"edwardhumi"},"content":"- Linked PR and Issues to Milestones","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"edwardhumi"},"content":"#### Review or Mentoring Contributions","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"edwardhumi"},"content":"- [PR Reviews](https://github.com/AY2324S2-CS2113-W14-1/tp/pulls?q\u003dis%3Apr+commenter%3Aedwardhumi)","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"edwardhumi":46}},{"path":"docs/team/jasonlienardi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jasonlienardi"},"content":"# Jason Lienardi\u0027s Project Portfolio Page","lastModifiedDate":"2024-04-09"},{"lineNumber":2,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":3,"author":{"gitId":"jasonlienardi"},"content":"## Project: FitNUS","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"jasonlienardi"},"content":"### Overview","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"jasonlienardi"},"content":"FitNUS is a CLI application that aims to help combat diabetes and the overconsumption of calories, sugar, and","lastModifiedDate":"2024-04-09"},{"lineNumber":7,"author":{"gitId":"jasonlienardi"},"content":"carbohydrates. Our vision is to promote healthy lifestyle amongst NUS students.","lastModifiedDate":"2024-04-09"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":9,"author":{"gitId":"jasonlienardi"},"content":"### Summary of Contributions","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"jasonlienardi"},"content":"#### Code contributed: [RepoSense Link](https://nus-cs2113-ay2324s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-02-23\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003djasonlienardi\u0026tabRepo\u003dAY2324S2-CS2113-W14-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"jasonlienardi"},"content":"#### Features implemented","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"jasonlienardi"},"content":"- Created FitNUS which is the entry point of the app","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"jasonlienardi"},"content":"- Created Meal class and MealList class ","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"jasonlienardi"},"content":"- Created Exercise class, ExerciseIntensity enumeration and ExerciseList class","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"jasonlienardi"},"content":"- Added a newMeal command which allows users to store the nutrient details of their favorite meals in the app. The new meal will be added to the available meals csv to allow users to track the meal in the future","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"jasonlienardi"},"content":"- Added a newDrink command which allows users to store the nutrient details of their favorite drinks in the app. The new drink will be added to the available drinks csv to allow users to track the drink in the future","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"jasonlienardi"},"content":"- Added a newExercise command which allows users to store the details regarding the calories burnt for a certian exercise. The new exercise will be added to the available exercises csv to allow users to track the exercise in the future","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"jasonlienardi"},"content":"#### Enhancements implemented","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"jasonlienardi"},"content":"- Updated exception handling to give more specific edge cases (ie. negative value exception for meal/drink nutrient and exercise calories and non-positive value exception for meal/drink serving size and exercise duration) [#139](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/139)","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"jasonlienardi"},"content":"#### Project Management","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"jasonlienardi"},"content":"- Wrapped up milestones `v1.0`, `v2.0` and `v2.1`","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"jasonlienardi"},"content":"#### Contributions to User Guide","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"jasonlienardi"},"content":"- Added documentation for features `eat`, `drink`, `water`, `exercise`, `infoMeal`, `infoDrink`, `infoExercise`, `calories`, `carbs`, `protein`, `fat`, `sugar`, `fiber`, `viewWater`, `caloriesBurnt`, `listMeals`, `listDrinks`, `listExercises`, `listEverything`, `listMealsAll`, `listDrinksAll`, `listExercisesAll`, `listEverythingAll`. Complete with command description, format, sample input and expected output. [#63](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/63/files#diff-1a95edf069a4136e9cb71bee758b0dc86996f6051f0d438ec2c424557de7160b)","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"jasonlienardi"},"content":"#### Contributions to Developer Guide","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"jasonlienardi"},"content":"- Added implementation details for `eat`, `editMeal`, `newMeal`, and `deleteMeal` feature. As well sequence diagrams for `eat`, `editMeal` and `newMeal` commands. [#151](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/151/files)","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"jasonlienardi"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"jasonlienardi"},"content":"- Managed GitHub issues","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"jasonlienardi"},"content":"- Assigned issues to team members","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"jasonlienardi"},"content":"- Linked PR and Issues to Milestones","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"jasonlienardi"},"content":"- Clean-up formatting of DG and UG","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"jasonlienardi"},"content":"#### Review or Mentoring Contributions","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"jasonlienardi"},"content":"- PR Reviews: [#44](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/44), [#61](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/61), [#84](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/84), [#155](https://github.com/AY2324S2-CS2113-W14-1/tp/pull/155)","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"jasonlienardi":40}},{"path":"src/main/java/seedu/fitnus/FitNus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"tinaliu27"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.ui.Ui;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"tinaliu27"},"content":"public class FitNus {","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"jasonlienardi"},"content":"    private static Ui ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"jasonlienardi"},"content":"    public FitNus() {","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"jasonlienardi"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"     * Begins the program until termination.","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"jasonlienardi"},"content":"    public void run() {","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"jasonlienardi"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"jasonlienardi"},"content":"        while (!ui.isExit) {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"jasonlienardi"},"content":"            ui.readCommand();","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"jasonlienardi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"jasonlienardi"},"content":"        new FitNus().run();","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"tinaliu27"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"tinaliu27":3,"jasonlienardi":17,"BryanCastorius":2,"claribelho":4}},{"path":"src/main/java/seedu/fitnus/date/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BryanCastorius"},"content":"package seedu.fitnus.date;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" * Class that handles any references to the current date and time.","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"public class Date {","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"    protected static String currentDate;","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"     * Constructor that gets the current system date and formats it in the stated format.","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"     * This date is then saved as a string.","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"    public Date() {","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"        long millis \u003d System.currentTimeMillis();","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"        java.sql.Date date \u003d new java.sql.Date(millis);","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"        String formattedDate \u003d dateFormat.format(date);","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"        this.currentDate \u003d formattedDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"     * Returns the current system date.","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"     * @return current system date","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"BryanCastorius"},"content":"    public String getDate() {","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"        return currentDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"BryanCastorius":2,"claribelho":31}},{"path":"src/main/java/seedu/fitnus/date/DateValidation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.date;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.FutureDateException;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"import java.text.ParseException;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"public class DateValidation extends Date {","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"     * Returns true if the date inputted by the user is a valid date.","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"     * The method verifies the day, month and year are in the correct range.","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"     * @param date string containing the date to check if valid","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"     * @return true if the date inputted by the user is a valid date.","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"    public static String formatDateIfValid(String date) throws FutureDateException, ParseException {","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd-MM-yyyy\");","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"        dateFormat.setLenient(false);","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"        String formattedDate \u003d date;","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"        java.util.Date javaDate \u003d dateFormat.parse(date);","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"        checkDateHasPassed(javaDate);","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"        formattedDate \u003d dateFormat.format(javaDate);","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"        return formattedDate;","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"    public static boolean checkDateHasPassed(java.util.Date inputDate) throws FutureDateException {","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"        long millis \u003d System.currentTimeMillis();","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"        java.sql.Date currentDate \u003d new java.sql.Date(millis);","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"        if (inputDate.after(currentDate)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"            throw new FutureDateException();","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"        return true;","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"claribelho":38}},{"path":"src/main/java/seedu/fitnus/drink/Drink.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BryanCastorius"},"content":"package seedu.fitnus.drink;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.IncompleteInfoException;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.UnregisteredDrinkException;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.parser.Parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"BryanCastorius"},"content":"public class Drink  {","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"BryanCastorius"},"content":"    public static HashMap\u003cString, int[]\u003e nutrientDetails \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"BryanCastorius"},"content":"    private String name;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"BryanCastorius"},"content":"    private int drinkVolume;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"    private String dateAdded;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"    private long calories;","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"    private long carbs;","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"    private long sugar;","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"    private long protein;","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"    private long fat;","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"     * Constructor for a Drink, requires the name and volume of the drink,","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"     * as well as date that it is added into the list.","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"     * @param name name of drink to be added into the list","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"     * @param volume volume of the drink to be added into the list","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"     * @param currentDate date of which the drink is added into list","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"    public Drink(String name, int volume, String currentDate) {","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"BryanCastorius"},"content":"        assert name !\u003d null: \"Name must not be null\";","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"BryanCastorius"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"BryanCastorius"},"content":"        assert volume \u003e 0: \"Drink volume must be greater than 0.\";","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"BryanCastorius"},"content":"        this.drinkVolume \u003d volume;","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"BryanCastorius"},"content":"        setNutrientValues(name);","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"        this.dateAdded \u003d currentDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"edwardhumi"},"content":"    static {","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"BryanCastorius"},"content":"        nutrientDetails.put(\"water\", new int[]{0, 0, 0, 0, 0});","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"edwardhumi"},"content":"        nutrientDetails.put(\"sprite\", new int[]{270, 42, 7, 8, 2});","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"edwardhumi"},"content":"        nutrientDetails.put(\"iced lemon tea\", new int[]{95, 21, 1, 1, 1});","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"edwardhumi"},"content":"        nutrientDetails.put(\"milo\", new int[]{124, 20, 3, 3, 1});","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"edwardhumi"},"content":"        nutrientDetails.put(\"kopi\", new int[]{141, 26, 2, 3, 1});","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"soursop juice\", new int[]{117, 25, 3, 1, 1});","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"kopi c\", new int[]{117, 20, 1, 4, 0});","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"kalamansi juice\", new int[]{168, 42, 0, 0, 1});","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"coke\", new int[]{153, 32, 1, 2, 1});","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"kopi o\", new int[]{67, 15, 1, 0, 0});","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"plum juice\", new int[]{57, 13, 1, 0, 1});","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"teh c bing\", new int[]{231, 24, 15, 1, 1});","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"guava juice\", new int[]{143, 38, 0, 0, 1});","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"tiger beer\", new int[]{42, 3, 1, 0, 0});","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"teh tarik\", new int[]{124, 21, 3, 3, 0});","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"sugarcane juice\", new int[]{192, 52, 0, 0, 1});","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"teh\", new int[]{151, 29, 4, 1, 1});","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"bandung\", new int[]{153, 32, 1, 2, 1});","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"jasonlienardi"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"jasonlienardi"},"content":"     * Sets nutrients details for a certain drink based on values in hashmap","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"jasonlienardi"},"content":"     *","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"jasonlienardi"},"content":"     * @param name name of drink to set nutrients","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"jasonlienardi"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"BryanCastorius"},"content":"    private void setNutrientValues(String name) {","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"BryanCastorius"},"content":"        int[] nutrients \u003d nutrientDetails.get(name);","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"        calories \u003d (long) nutrients[0] * drinkVolume / 100;","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"        carbs \u003d (long) nutrients[1] * drinkVolume / 100;","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"        sugar \u003d (long) nutrients[2] * drinkVolume / 100;","lastModifiedDate":"2024-04-12"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"        protein \u003d (long) nutrients[3] * drinkVolume / 100;","lastModifiedDate":"2024-04-12"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"        fat \u003d (long) nutrients[4] * drinkVolume / 100;","lastModifiedDate":"2024-04-12"},{"lineNumber":71,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"     * Handles when user would like to find out the information about a certain drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"     * Prints out all nutritional content of the drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by user, containing drink to be viewed","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"     * @throws UnregisteredDrinkException if drink specified is not a pre-defined drink","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"     * @throws IncompleteInfoException if the user did not comply with the required format","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"claribelho"},"content":"    public static void handleInfoDrink(String command) throws UnregisteredDrinkException, IncompleteInfoException {","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"jasonlienardi"},"content":"        String name \u003d Parser.parseInfoDrink(command);","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"jasonlienardi"},"content":"        int[] nutrients \u003d nutrientDetails.get(name);","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Drink: \" + name + \" (per 100 ml)\");","lastModifiedDate":"2024-04-15"},{"lineNumber":85,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Calories: \" + nutrients[0] + \" kcal\");","lastModifiedDate":"2024-04-15"},{"lineNumber":86,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Carbs: \" + nutrients[1] + \" g\");","lastModifiedDate":"2024-04-15"},{"lineNumber":87,"author":{"gitId":"BryanCastorius"},"content":"        // Sugar is part of Carbohydrates","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Sugar: \" + nutrients[2] + \" g\");","lastModifiedDate":"2024-04-15"},{"lineNumber":89,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Protein: \" + nutrients[3] + \" g\");","lastModifiedDate":"2024-04-15"},{"lineNumber":90,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Fat: \" + nutrients[4] + \" g\");","lastModifiedDate":"2024-04-15"},{"lineNumber":91,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"claribelho"},"content":"     * Prints out all pre-defined drinks in one line,","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"claribelho"},"content":"     * only called when the user first enters the program.","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"BryanCastorius"},"content":"    public static void printAvailableDrinks() {","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"BryanCastorius"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"BryanCastorius"},"content":"        System.out.print(\"Available drinks: \");","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"BryanCastorius"},"content":"        for (String drink : nutrientDetails.keySet()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"BryanCastorius"},"content":"            if (count \u003c 3) {","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"BryanCastorius"},"content":"                System.out.print(drink);","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"BryanCastorius"},"content":"                System.out.print(\", \");","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"BryanCastorius"},"content":"                count ++;","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"BryanCastorius"},"content":"            } else {","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"BryanCastorius"},"content":"                break;","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"BryanCastorius"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"BryanCastorius"},"content":"        System.out.print(\"etc.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"BryanCastorius"},"content":"        System.out.println();","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"claribelho"},"content":"     * Prints out all pre-defined drinks in a list.","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"claribelho"},"content":"    public static void listAvailableDrinks() {","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Available drinks: \");","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"claribelho"},"content":"        for (String drink : nutrientDetails.keySet()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"- \" + drink);","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"claribelho"},"content":"        System.out.println();","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"You may also input a drink that isn\u0027t here with newDrink.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":123,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"claribelho"},"content":"     * Returns a string stating the name of the drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"claribelho"},"content":"     * @return string stating the name of the drink","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"BryanCastorius"},"content":"    public String getName() {","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"BryanCastorius"},"content":"        return name;","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"claribelho"},"content":"     * Returns an integer value of the volume of the drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"claribelho"},"content":"     * @return an integer value of the volume of the drink","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"BryanCastorius"},"content":"    public int getDrinkVolumeSize() {","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"BryanCastorius"},"content":"        return drinkVolume;","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"claribelho"},"content":"     * Returns a long value of the amount of calories in the drink.","lastModifiedDate":"2024-04-12"},{"lineNumber":145,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"claribelho"},"content":"     * @return a long value of the amount of calories in the drink","lastModifiedDate":"2024-04-12"},{"lineNumber":147,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"claribelho"},"content":"    public long getCalories() {","lastModifiedDate":"2024-04-12"},{"lineNumber":149,"author":{"gitId":"BryanCastorius"},"content":"        return calories;","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"claribelho"},"content":"     * Returns a long value of the amount of carbohydrates in the drink.","lastModifiedDate":"2024-04-12"},{"lineNumber":154,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"claribelho"},"content":"     * @return a long value of the amount of carbohydrates in the drink","lastModifiedDate":"2024-04-12"},{"lineNumber":156,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"claribelho"},"content":"    public long getCarbs() {","lastModifiedDate":"2024-04-12"},{"lineNumber":158,"author":{"gitId":"BryanCastorius"},"content":"        return carbs;","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"claribelho"},"content":"     * Returns a long value of the amount of sugar in the drink.","lastModifiedDate":"2024-04-12"},{"lineNumber":163,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"claribelho"},"content":"     * @return a long value of the amount of sugar in the drink","lastModifiedDate":"2024-04-12"},{"lineNumber":165,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"claribelho"},"content":"    public long getSugar() {","lastModifiedDate":"2024-04-12"},{"lineNumber":167,"author":{"gitId":"BryanCastorius"},"content":"        return sugar;","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"claribelho"},"content":"     * Returns a long value of the amount of protein in the drink.","lastModifiedDate":"2024-04-12"},{"lineNumber":172,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"claribelho"},"content":"     * @return a long value of the amount of protein in the drink","lastModifiedDate":"2024-04-12"},{"lineNumber":174,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":175,"author":{"gitId":"claribelho"},"content":"    public long getProtein() {","lastModifiedDate":"2024-04-12"},{"lineNumber":176,"author":{"gitId":"BryanCastorius"},"content":"        return protein;","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"claribelho"},"content":"     * Returns a long value of the amount of fat in the drink.","lastModifiedDate":"2024-04-12"},{"lineNumber":181,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"claribelho"},"content":"     * @return a long value of the amount of fat in the drink","lastModifiedDate":"2024-04-12"},{"lineNumber":183,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"claribelho"},"content":"    public long getFat() {","lastModifiedDate":"2024-04-12"},{"lineNumber":185,"author":{"gitId":"BryanCastorius"},"content":"        return fat;","lastModifiedDate":"2024-03-18"},{"lineNumber":186,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":187,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"BryanCastorius"},"content":"    public static HashMap\u003cString, int[]\u003e getNutrientDetails() {","lastModifiedDate":"2024-03-19"},{"lineNumber":189,"author":{"gitId":"BryanCastorius"},"content":"        return nutrientDetails;","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":191,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":192,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"claribelho"},"content":"     * Returns the date of which the drink was added into drinkList.","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"claribelho"},"content":"     * @return date of which the drink was added into drinkList","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"claribelho"},"content":"    public String getDate() {","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"claribelho"},"content":"        return dateAdded;","lastModifiedDate":"2024-03-28"},{"lineNumber":199,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":200,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"edwardhumi":9,"jasonlienardi":7,"BryanCastorius":68,"claribelho":116}},{"path":"src/main/java/seedu/fitnus/drink/DrinkList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BryanCastorius"},"content":"package seedu.fitnus.drink;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.date.Date;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.ExceedTypeIntException;","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.FutureDateException;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.exception.IncompleteDeleteException;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.exception.IncompleteDrinkException;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.exception.IncompleteEditException;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.exception.IncompleteEditWaterException;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.exception.InvalidDateException;","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.exception.InvalidEditWaterException;","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.exception.InvalidListIndexException;","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.exception.NegativeValueException;","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.NonPositiveValueException;","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.exception.UnregisteredDrinkException;","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.parser.Parser;","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"import java.text.ParseException;","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"BryanCastorius"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"BryanCastorius"},"content":"public class DrinkList {","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"BryanCastorius"},"content":"    public static ArrayList\u003cDrink\u003e drinkListAll;","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"BryanCastorius"},"content":"    public static ArrayList\u003cWater\u003e waterListAll;","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"BryanCastorius"},"content":"    public static ArrayList\u003cDrink\u003e drinkList;","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"BryanCastorius"},"content":"    public static ArrayList\u003cWater\u003e waterList;","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"BryanCastorius"},"content":"    public DrinkList() {","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"BryanCastorius"},"content":"        drinkList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"BryanCastorius"},"content":"        waterList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"BryanCastorius"},"content":"        drinkListAll \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"BryanCastorius"},"content":"        waterListAll \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"jasonlienardi"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"jasonlienardi"},"content":"     * Adds a drink to available drinks","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"jasonlienardi"},"content":"     *","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"jasonlienardi"},"content":"     * @param command string inputted by the user, containing the drink they want to add to available drinks and","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"jasonlienardi"},"content":"     *                its nutrient details","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"jasonlienardi"},"content":"     * @throws NegativeValueException if the nutrient detail is a negative value","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"jasonlienardi"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"BryanCastorius"},"content":"    public void handleAddNewDrinkNutrient(String command) throws NegativeValueException {","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"BryanCastorius"},"content":"        Parser.parseNewDrink(command);","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"BryanCastorius"},"content":"        String description \u003d Parser.drinkNutrientDescription;","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"BryanCastorius"},"content":"        int calories \u003d Parser.drinkNutrientCalories;","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"BryanCastorius"},"content":"        int carbs \u003d Parser.drinkNutrientCarbs;","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"BryanCastorius"},"content":"        int sugar \u003d Parser.drinkNutrientSugar;","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"BryanCastorius"},"content":"        int protein \u003d Parser.drinkNutrientProtein;","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"BryanCastorius"},"content":"        int fat \u003d Parser.drinkNutrientFat;","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"BryanCastorius"},"content":"        Drink.nutrientDetails.put(description, new int[]{calories, carbs, sugar, protein, fat});","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Added \" + description + \" to available drinks\");","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"BryanCastorius"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"BryanCastorius"},"content":"     * Adds a drink to the user\u0027s current drinkList, based on what the user has drank and the serving size consumed.","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"BryanCastorius"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"BryanCastorius"},"content":"     * @param command string inputted by the user, containing the drink they consumed and its serving size","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"BryanCastorius"},"content":"     * @throws IncompleteDrinkException if the user did not comply with the required format","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"BryanCastorius"},"content":"     * @throws UnregisteredDrinkException if the user has inputted a drink that was not pre-defined","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"jasonlienardi"},"content":"     * @throws NonPositiveValueException if the provided serving size is a negative value","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"BryanCastorius"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":62,"author":{"gitId":"BryanCastorius"},"content":"    public void handleDrink(String command) throws IncompleteDrinkException, UnregisteredDrinkException,","lastModifiedDate":"2024-04-10"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"            NonPositiveValueException, ExceedTypeIntException {","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"BryanCastorius"},"content":"        Parser.parseDrink(command);","lastModifiedDate":"2024-04-10"},{"lineNumber":65,"author":{"gitId":"BryanCastorius"},"content":"        String drinkName \u003d Parser.drinkDescription;","lastModifiedDate":"2024-04-10"},{"lineNumber":66,"author":{"gitId":"BryanCastorius"},"content":"        int servingSize \u003d Parser.drinkSize;","lastModifiedDate":"2024-04-10"},{"lineNumber":67,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":68,"author":{"gitId":"BryanCastorius"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2024-04-10"},{"lineNumber":69,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":70,"author":{"gitId":"BryanCastorius"},"content":"        boolean waterExist \u003d false; //Water intake for today does not exist flag","lastModifiedDate":"2024-04-10"},{"lineNumber":71,"author":{"gitId":"BryanCastorius"},"content":"        if (drinkName.equals(\"water\")) {","lastModifiedDate":"2024-04-10"},{"lineNumber":72,"author":{"gitId":"BryanCastorius"},"content":"            for (Water water: waterList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":73,"author":{"gitId":"BryanCastorius"},"content":"                if (currentDate.getDate().equals(water.getDate())) {","lastModifiedDate":"2024-04-10"},{"lineNumber":74,"author":{"gitId":"BryanCastorius"},"content":"                    water.addWaterIntake(servingSize);","lastModifiedDate":"2024-04-10"},{"lineNumber":75,"author":{"gitId":"BryanCastorius"},"content":"                    waterExist \u003d true;","lastModifiedDate":"2024-04-10"},{"lineNumber":76,"author":{"gitId":"BryanCastorius"},"content":"                }","lastModifiedDate":"2024-04-10"},{"lineNumber":77,"author":{"gitId":"BryanCastorius"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":78,"author":{"gitId":"BryanCastorius"},"content":"            if (!waterExist) {","lastModifiedDate":"2024-04-10"},{"lineNumber":79,"author":{"gitId":"BryanCastorius"},"content":"                waterList.add(new Water(servingSize, currentDate.getDate()));","lastModifiedDate":"2024-04-10"},{"lineNumber":80,"author":{"gitId":"BryanCastorius"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":81,"author":{"gitId":"BryanCastorius"},"content":"        } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":82,"author":{"gitId":"BryanCastorius"},"content":"            drinkList.add(new Drink(drinkName, servingSize, currentDate.getDate()));","lastModifiedDate":"2024-04-10"},{"lineNumber":83,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":84,"author":{"gitId":"BryanCastorius"},"content":"        System.out.println(\"Added \" + servingSize + \" ml of \" + drinkName);","lastModifiedDate":"2024-04-10"},{"lineNumber":85,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":86,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":87,"author":{"gitId":"BryanCastorius"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":88,"author":{"gitId":"BryanCastorius"},"content":"     * Prints the user\u0027s total water intake of the day.","lastModifiedDate":"2024-04-10"},{"lineNumber":89,"author":{"gitId":"BryanCastorius"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":90,"author":{"gitId":"BryanCastorius"},"content":"    public void handleViewWaterIntake() {","lastModifiedDate":"2024-04-10"},{"lineNumber":91,"author":{"gitId":"BryanCastorius"},"content":"        int waterIntake \u003d 0;","lastModifiedDate":"2024-04-10"},{"lineNumber":92,"author":{"gitId":"BryanCastorius"},"content":"        for (Water water: waterList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":93,"author":{"gitId":"BryanCastorius"},"content":"            waterIntake +\u003d water.getWater();","lastModifiedDate":"2024-04-10"},{"lineNumber":94,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":95,"author":{"gitId":"BryanCastorius"},"content":"        System.out.println(\"Total water intake today: \" + waterIntake + \" ml\");","lastModifiedDate":"2024-04-14"},{"lineNumber":96,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":97,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":98,"author":{"gitId":"BryanCastorius"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":99,"author":{"gitId":"BryanCastorius"},"content":"     * Prints all the drinks in the drinkListToPrint,","lastModifiedDate":"2024-04-10"},{"lineNumber":100,"author":{"gitId":"BryanCastorius"},"content":"     * inclusive of the volume consumed and date.","lastModifiedDate":"2024-04-10"},{"lineNumber":101,"author":{"gitId":"BryanCastorius"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":102,"author":{"gitId":"BryanCastorius"},"content":"     * @param startIndex starting integer value when printing the list, where startIndex \u003e\u003d 1","lastModifiedDate":"2024-04-10"},{"lineNumber":103,"author":{"gitId":"BryanCastorius"},"content":"     * @param drinkListToPrint arraylist containing the drinks that should be printed","lastModifiedDate":"2024-04-10"},{"lineNumber":104,"author":{"gitId":"BryanCastorius"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":105,"author":{"gitId":"edwardhumi"},"content":"    //@@author edwardhumi","lastModifiedDate":"2024-04-10"},{"lineNumber":106,"author":{"gitId":"edwardhumi"},"content":"    public void printDrinkList(int startIndex, ArrayList\u003cDrink\u003e drinkListToPrint) {","lastModifiedDate":"2024-04-10"},{"lineNumber":107,"author":{"gitId":"edwardhumi"},"content":"        for (int i \u003d 0; i \u003c drinkListToPrint.size(); i++) {","lastModifiedDate":"2024-04-10"},{"lineNumber":108,"author":{"gitId":"edwardhumi"},"content":"            Drink currentDrink \u003d drinkListToPrint.get(i);","lastModifiedDate":"2024-04-10"},{"lineNumber":109,"author":{"gitId":"edwardhumi"},"content":"            System.out.println((startIndex+i) + \". \" + currentDrink.getName() + \" (volume: \"","lastModifiedDate":"2024-04-10"},{"lineNumber":110,"author":{"gitId":"edwardhumi"},"content":"                    + currentDrink.getDrinkVolumeSize() + \"ml)\" + \" | date: \" + currentDrink.getDate());","lastModifiedDate":"2024-04-10"},{"lineNumber":111,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":112,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":113,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":114,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":115,"author":{"gitId":"edwardhumi"},"content":"     * Handles when the user is listing the drinks they have consumed today.","lastModifiedDate":"2024-04-10"},{"lineNumber":116,"author":{"gitId":"edwardhumi"},"content":"     * Method first checks if the list is empty.","lastModifiedDate":"2024-04-10"},{"lineNumber":117,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":118,"author":{"gitId":"edwardhumi"},"content":"    public void handleListDrinks() {","lastModifiedDate":"2024-04-10"},{"lineNumber":119,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"here\u0027s what you have drank today\");","lastModifiedDate":"2024-04-10"},{"lineNumber":120,"author":{"gitId":"edwardhumi"},"content":"        int totalWater \u003d 0;","lastModifiedDate":"2024-04-10"},{"lineNumber":121,"author":{"gitId":"edwardhumi"},"content":"        for (Water water : waterList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":122,"author":{"gitId":"edwardhumi"},"content":"            totalWater +\u003d water.getWater();","lastModifiedDate":"2024-04-10"},{"lineNumber":123,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":124,"author":{"gitId":"edwardhumi"},"content":"        if (drinkList.isEmpty() \u0026\u0026 totalWater \u003d\u003d 0) {","lastModifiedDate":"2024-04-10"},{"lineNumber":125,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-04-10"},{"lineNumber":126,"author":{"gitId":"edwardhumi"},"content":"        } else if (drinkList.isEmpty()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":127,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-04-10"},{"lineNumber":128,"author":{"gitId":"edwardhumi"},"content":"            handleViewWaterIntake();","lastModifiedDate":"2024-04-10"},{"lineNumber":129,"author":{"gitId":"edwardhumi"},"content":"        } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":130,"author":{"gitId":"edwardhumi"},"content":"            printDrinkList(1, drinkList);","lastModifiedDate":"2024-04-10"},{"lineNumber":131,"author":{"gitId":"edwardhumi"},"content":"            System.out.println();","lastModifiedDate":"2024-04-10"},{"lineNumber":132,"author":{"gitId":"edwardhumi"},"content":"            handleViewWaterIntake();","lastModifiedDate":"2024-04-10"},{"lineNumber":133,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":134,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":135,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":136,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":137,"author":{"gitId":"edwardhumi"},"content":"     * Handles when the user is listing all drinks they have consumed, inclusive of previously saved drinks.","lastModifiedDate":"2024-04-10"},{"lineNumber":138,"author":{"gitId":"edwardhumi"},"content":"     * Method first checks if the list is empty.","lastModifiedDate":"2024-04-10"},{"lineNumber":139,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":140,"author":{"gitId":"edwardhumi"},"content":"    //@@author edwardhumi","lastModifiedDate":"2024-04-10"},{"lineNumber":141,"author":{"gitId":"edwardhumi"},"content":"    public void handleListDrinksAll() {","lastModifiedDate":"2024-04-10"},{"lineNumber":142,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"here\u0027s what you have drank so far\");","lastModifiedDate":"2024-04-10"},{"lineNumber":143,"author":{"gitId":"edwardhumi"},"content":"        int totalWater \u003d 0;","lastModifiedDate":"2024-04-10"},{"lineNumber":144,"author":{"gitId":"edwardhumi"},"content":"        for (Water water : waterList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":145,"author":{"gitId":"edwardhumi"},"content":"            totalWater +\u003d water.getWater();","lastModifiedDate":"2024-04-10"},{"lineNumber":146,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":147,"author":{"gitId":"edwardhumi"},"content":"        if (drinkListAll.isEmpty() \u0026\u0026 drinkList.isEmpty() \u0026\u0026 totalWater \u003d\u003d 0) {","lastModifiedDate":"2024-04-10"},{"lineNumber":148,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-04-10"},{"lineNumber":149,"author":{"gitId":"edwardhumi"},"content":"        } else if (drinkListAll.isEmpty() \u0026\u0026 drinkList.isEmpty()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":150,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-04-10"},{"lineNumber":151,"author":{"gitId":"edwardhumi"},"content":"            handleViewWaterIntake();","lastModifiedDate":"2024-04-10"},{"lineNumber":152,"author":{"gitId":"edwardhumi"},"content":"        } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":153,"author":{"gitId":"edwardhumi"},"content":"            printDrinkList(1, drinkListAll);","lastModifiedDate":"2024-04-10"},{"lineNumber":154,"author":{"gitId":"edwardhumi"},"content":"            printDrinkList(1 + drinkListAll.size(), drinkList);","lastModifiedDate":"2024-04-10"},{"lineNumber":155,"author":{"gitId":"edwardhumi"},"content":"            System.out.println();","lastModifiedDate":"2024-04-10"},{"lineNumber":156,"author":{"gitId":"edwardhumi"},"content":"            handleViewWaterIntake();","lastModifiedDate":"2024-04-10"},{"lineNumber":157,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":158,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":159,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":160,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":161,"author":{"gitId":"edwardhumi"},"content":"     * Handles when the user is listing the drinks they have consumed on a certain date.","lastModifiedDate":"2024-04-10"},{"lineNumber":162,"author":{"gitId":"edwardhumi"},"content":"     * Method will first extract all drinks that have this corresponding date,","lastModifiedDate":"2024-04-10"},{"lineNumber":163,"author":{"gitId":"edwardhumi"},"content":"     * before printing.","lastModifiedDate":"2024-04-10"},{"lineNumber":164,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":165,"author":{"gitId":"edwardhumi"},"content":"     * @param command string inputted by the user, containing the date of which they would like to list drinks of","lastModifiedDate":"2024-04-10"},{"lineNumber":166,"author":{"gitId":"edwardhumi"},"content":"     * @throws InvalidDateException if the date inputted by user is invalid","lastModifiedDate":"2024-04-10"},{"lineNumber":167,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":168,"author":{"gitId":"edwardhumi"},"content":"    //@@author edwardhumi","lastModifiedDate":"2024-04-10"},{"lineNumber":169,"author":{"gitId":"edwardhumi"},"content":"    public void handleListDrinksDate(String command) throws InvalidDateException, FutureDateException, ParseException {","lastModifiedDate":"2024-04-10"},{"lineNumber":170,"author":{"gitId":"edwardhumi"},"content":"        String date \u003d Parser.parseListDate(command);","lastModifiedDate":"2024-04-10"},{"lineNumber":171,"author":{"gitId":"edwardhumi"},"content":"        ArrayList\u003cDrink\u003e drinkListDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":172,"author":{"gitId":"edwardhumi"},"content":"        for (Drink d : drinkListAll) {","lastModifiedDate":"2024-04-10"},{"lineNumber":173,"author":{"gitId":"edwardhumi"},"content":"            if (d.getDate().equals(date)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":174,"author":{"gitId":"edwardhumi"},"content":"                drinkListDate.add(d);","lastModifiedDate":"2024-04-10"},{"lineNumber":175,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":176,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":177,"author":{"gitId":"edwardhumi"},"content":"        for (Drink d : drinkList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":178,"author":{"gitId":"edwardhumi"},"content":"            if (d.getDate().equals(date)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":179,"author":{"gitId":"edwardhumi"},"content":"                drinkListDate.add(d);","lastModifiedDate":"2024-04-10"},{"lineNumber":180,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":181,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":182,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"here\u0027s what you have drank on \" + date);","lastModifiedDate":"2024-04-10"},{"lineNumber":183,"author":{"gitId":"edwardhumi"},"content":"        if (drinkListDate.isEmpty()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":184,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-04-10"},{"lineNumber":185,"author":{"gitId":"edwardhumi"},"content":"        } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":186,"author":{"gitId":"edwardhumi"},"content":"            printDrinkList(1, drinkListDate);","lastModifiedDate":"2024-04-10"},{"lineNumber":187,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":188,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":189,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":190,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":191,"author":{"gitId":"edwardhumi"},"content":"     * Handles when the user would like to edit the serving size of a previously inputted drink.","lastModifiedDate":"2024-04-10"},{"lineNumber":192,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":193,"author":{"gitId":"edwardhumi"},"content":"     * @param command string inputted by the user, containing the index of the drink to edit and the new serving size","lastModifiedDate":"2024-04-10"},{"lineNumber":194,"author":{"gitId":"edwardhumi"},"content":"     * @throws InvalidListIndexException if the provided index is not a valid index in drinkList","lastModifiedDate":"2024-04-10"},{"lineNumber":195,"author":{"gitId":"edwardhumi"},"content":"     * @throws NonPositiveValueException if the provided serving size is a negative value","lastModifiedDate":"2024-04-12"},{"lineNumber":196,"author":{"gitId":"edwardhumi"},"content":"     * @throws IncompleteEditException if the user did not comply with the required command format","lastModifiedDate":"2024-04-10"},{"lineNumber":197,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":198,"author":{"gitId":"claribelho"},"content":"    //@@author claribelho","lastModifiedDate":"2024-04-10"},{"lineNumber":199,"author":{"gitId":"claribelho"},"content":"    public void handleEditDrinkServingSize(String command) throws InvalidListIndexException,","lastModifiedDate":"2024-04-10"},{"lineNumber":200,"author":{"gitId":"claribelho"},"content":"            NonPositiveValueException, IncompleteEditException {","lastModifiedDate":"2024-04-12"},{"lineNumber":201,"author":{"gitId":"claribelho"},"content":"        Parser.parseEditDrink(command);","lastModifiedDate":"2024-04-10"},{"lineNumber":202,"author":{"gitId":"claribelho"},"content":"        if (Parser.editDrinkIndex \u003e\u003d drinkList.size() || Parser.editDrinkIndex \u003c 0) {","lastModifiedDate":"2024-04-10"},{"lineNumber":203,"author":{"gitId":"claribelho"},"content":"            throw new InvalidListIndexException();","lastModifiedDate":"2024-04-10"},{"lineNumber":204,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":205,"author":{"gitId":"claribelho"},"content":"        String drinkName \u003d drinkList.get(Parser.editDrinkIndex).getName();","lastModifiedDate":"2024-04-10"},{"lineNumber":206,"author":{"gitId":"claribelho"},"content":"        String drinkDate \u003d drinkList.get(Parser.editDrinkIndex).getDate();","lastModifiedDate":"2024-04-10"},{"lineNumber":207,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":208,"author":{"gitId":"claribelho"},"content":"        Drink updatedDrink \u003d new Drink(drinkName, Parser.editDrinkSize, drinkDate);","lastModifiedDate":"2024-04-10"},{"lineNumber":209,"author":{"gitId":"claribelho"},"content":"        drinkList.set(Parser.editDrinkIndex, updatedDrink);","lastModifiedDate":"2024-04-10"},{"lineNumber":210,"author":{"gitId":"claribelho"},"content":"        System.out.println(drinkName + \" has been edited to \" + Parser.editDrinkSize + \" ml\");","lastModifiedDate":"2024-04-15"},{"lineNumber":211,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":212,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":213,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":214,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":215,"author":{"gitId":"claribelho"},"content":"     * Handles when the user would like to edit the total volume of the water they consumed today.","lastModifiedDate":"2024-04-10"},{"lineNumber":216,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":217,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by the user, containing the new total volume of water","lastModifiedDate":"2024-04-10"},{"lineNumber":218,"author":{"gitId":"claribelho"},"content":"     * @throws NonPositiveValueException if the provided serving size is a negative value","lastModifiedDate":"2024-04-12"},{"lineNumber":219,"author":{"gitId":"claribelho"},"content":"     * @throws IncompleteEditWaterException if the user did not comply with the required command format","lastModifiedDate":"2024-04-15"},{"lineNumber":220,"author":{"gitId":"claribelho"},"content":"     * @throws InvalidEditWaterException if the user tried to edit water intake before adding water for the ddy","lastModifiedDate":"2024-04-15"},{"lineNumber":221,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":222,"author":{"gitId":"BryanCastorius"},"content":"    //@@author Bryvo","lastModifiedDate":"2024-04-15"},{"lineNumber":223,"author":{"gitId":"BryanCastorius"},"content":"    public void handleEditWaterIntake(String command) throws NonPositiveValueException, IncompleteEditWaterException,","lastModifiedDate":"2024-04-14"},{"lineNumber":224,"author":{"gitId":"BryanCastorius"},"content":"            InvalidEditWaterException {","lastModifiedDate":"2024-04-14"},{"lineNumber":225,"author":{"gitId":"BryanCastorius"},"content":"        Parser.parseEditWater(command);","lastModifiedDate":"2024-04-10"},{"lineNumber":226,"author":{"gitId":"BryanCastorius"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2024-04-10"},{"lineNumber":227,"author":{"gitId":"BryanCastorius"},"content":"        for (Water water: waterList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":228,"author":{"gitId":"BryanCastorius"},"content":"            if (water.getDate().equals(currentDate.getDate())) {","lastModifiedDate":"2024-04-10"},{"lineNumber":229,"author":{"gitId":"BryanCastorius"},"content":"                water.editWaterIntake(Parser.editWaterSize);","lastModifiedDate":"2024-04-10"},{"lineNumber":230,"author":{"gitId":"BryanCastorius"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":231,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":232,"author":{"gitId":"BryanCastorius"},"content":"        if (waterList.isEmpty()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":233,"author":{"gitId":"BryanCastorius"},"content":"            throw new InvalidEditWaterException();","lastModifiedDate":"2024-04-14"},{"lineNumber":234,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":235,"author":{"gitId":"BryanCastorius"},"content":"        System.out.println(\"Total water intake has been edited to \" + Parser.editWaterSize + \" ml\");","lastModifiedDate":"2024-04-15"},{"lineNumber":236,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":237,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":238,"author":{"gitId":"BryanCastorius"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":239,"author":{"gitId":"BryanCastorius"},"content":"     * Handles when the user would like to delete a previously inputted drink.","lastModifiedDate":"2024-04-10"},{"lineNumber":240,"author":{"gitId":"BryanCastorius"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":241,"author":{"gitId":"BryanCastorius"},"content":"     * @param command string inputted by the user, containing the index of the drink to delete","lastModifiedDate":"2024-04-10"},{"lineNumber":242,"author":{"gitId":"BryanCastorius"},"content":"     * @throws InvalidListIndexException if the provided index is not a valid index in drinkList","lastModifiedDate":"2024-04-10"},{"lineNumber":243,"author":{"gitId":"BryanCastorius"},"content":"     * @throws IncompleteDeleteException if the user did not comply with the required command format","lastModifiedDate":"2024-04-10"},{"lineNumber":244,"author":{"gitId":"BryanCastorius"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":245,"author":{"gitId":"claribelho"},"content":"    //@@author claribelho","lastModifiedDate":"2024-04-10"},{"lineNumber":246,"author":{"gitId":"claribelho"},"content":"    public void handleDeleteDrink(String command) throws InvalidListIndexException, IncompleteDeleteException {","lastModifiedDate":"2024-04-10"},{"lineNumber":247,"author":{"gitId":"claribelho"},"content":"        if (command.length() \u003c 13) {","lastModifiedDate":"2024-04-10"},{"lineNumber":248,"author":{"gitId":"claribelho"},"content":"            throw new IncompleteDeleteException();","lastModifiedDate":"2024-04-10"},{"lineNumber":249,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":250,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":251,"author":{"gitId":"claribelho"},"content":"        int drinkIndex \u003d Integer.parseInt(command.substring(12).trim()) - 1;","lastModifiedDate":"2024-04-10"},{"lineNumber":252,"author":{"gitId":"claribelho"},"content":"        if (drinkIndex \u003e\u003d drinkList.size() || drinkIndex \u003c 0) {","lastModifiedDate":"2024-04-10"},{"lineNumber":253,"author":{"gitId":"claribelho"},"content":"            throw new InvalidListIndexException();","lastModifiedDate":"2024-04-10"},{"lineNumber":254,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":255,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":256,"author":{"gitId":"claribelho"},"content":"        String drinkName \u003d drinkList.get(drinkIndex).getName();","lastModifiedDate":"2024-04-10"},{"lineNumber":257,"author":{"gitId":"claribelho"},"content":"        drinkList.remove(drinkIndex);","lastModifiedDate":"2024-04-10"},{"lineNumber":258,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Removed \" + drinkName + \" from drinks\");","lastModifiedDate":"2024-04-15"},{"lineNumber":259,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":260,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":261,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":262,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"edwardhumi":93,"jasonlienardi":9,"BryanCastorius":113,"claribelho":47}},{"path":"src/main/java/seedu/fitnus/drink/Water.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BryanCastorius"},"content":"package seedu.fitnus.drink;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"tinaliu27"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.ExceedTypeIntException;","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"tinaliu27"},"content":"public class Water {","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":"    private int waterIntake;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"    private String dateAdded;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"BryanCastorius"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"BryanCastorius"},"content":"     * Constructs a Water object with the specified amount of water intake and date added.","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"BryanCastorius"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"BryanCastorius"},"content":"     * @param amount The amount of water intake.","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"BryanCastorius"},"content":"     * @param dateAdded The date when the water intake was added.","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"BryanCastorius"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"    public Water(int amount, String dateAdded) {","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"BryanCastorius"},"content":"        assert amount \u003e 0 : \"Water volume must be greater than 0.\";","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"BryanCastorius"},"content":"        this.waterIntake \u003d amount;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"BryanCastorius"},"content":"        this.dateAdded \u003d dateAdded;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"     * Returns the user\u0027s water intake of the day.","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"     * @return total water intake of the day","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"BryanCastorius"},"content":"    public int getWater() {","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"BryanCastorius"},"content":"        return waterIntake;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"     * Add a specified amount of water to the user\u0027s waterIntake of the day.","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"     * @param amount volume of water to add to intake.","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"    public void addWaterIntake(int amount) throws ExceedTypeIntException {","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"BryanCastorius"},"content":"        waterIntake +\u003d amount;","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"        if (waterIntake \u003c\u003d 0) {","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"            waterIntake -\u003d amount;","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"            throw new ExceedTypeIntException();","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"     * Updates the total water intake of the day.","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"     * @param amount volume specified by user to be the new total water intake of the day","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"BryanCastorius"},"content":"    public void editWaterIntake(int amount) {","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"BryanCastorius"},"content":"        waterIntake \u003d amount;","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"     * Returns the date of which the water was added into drinkList.","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"     * @return date of which the water was added into drinkList","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"BryanCastorius"},"content":"    public String getDate() {","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"        return dateAdded;","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"tinaliu27"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"tinaliu27":3,"BryanCastorius":26,"claribelho":32}},{"path":"src/main/java/seedu/fitnus/exception/ExceedTypeIntException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"public class ExceedTypeIntException extends Exception {","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"claribelho":5}},{"path":"src/main/java/seedu/fitnus/exception/ExceedTypeLongException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"public class ExceedTypeLongException extends Exception {","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"claribelho":5}},{"path":"src/main/java/seedu/fitnus/exception/FutureDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"public class FutureDateException extends Exception {","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"claribelho":5}},{"path":"src/main/java/seedu/fitnus/exception/IncompleteDeleteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the user did not comply with the required format for delete.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"public class IncompleteDeleteException extends Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"claribelho":8}},{"path":"src/main/java/seedu/fitnus/exception/IncompleteDrinkException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the user did not comply with the required format to add a drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"public class IncompleteDrinkException extends Exception{","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"BryanCastorius":3,"claribelho":5}},{"path":"src/main/java/seedu/fitnus/exception/IncompleteEditException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the user did not comply with the required format to edit a saved object.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"public class IncompleteEditException extends Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"claribelho":8}},{"path":"src/main/java/seedu/fitnus/exception/IncompleteEditWaterException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BryanCastorius"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"BryanCastorius"},"content":"/**","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"BryanCastorius"},"content":" * Exception class thrown when the user did not comply with the required format to edit a water object.","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"BryanCastorius"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":" */","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"public class IncompleteEditWaterException extends Exception{","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"BryanCastorius":8}},{"path":"src/main/java/seedu/fitnus/exception/IncompleteExerciseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonlienardi"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the user did not comply with the required format to add an exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"jasonlienardi"},"content":"public class IncompleteExerciseException extends Exception{","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"jasonlienardi":4,"claribelho":4}},{"path":"src/main/java/seedu/fitnus/exception/IncompleteInfoException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the user did not comply with the required format to view the info of a  object.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"public class IncompleteInfoException extends Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"claribelho":9}},{"path":"src/main/java/seedu/fitnus/exception/IncompleteMealException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the user did not comply with the required format to add a meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"public class IncompleteMealException extends Exception{","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"BryanCastorius":3,"claribelho":5}},{"path":"src/main/java/seedu/fitnus/exception/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the user inputs an unrecognised command.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"public class InvalidCommandException extends Exception{","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"BryanCastorius":3,"claribelho":5}},{"path":"src/main/java/seedu/fitnus/exception/InvalidDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edwardhumi"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the date is invalid.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"edwardhumi"},"content":"public class InvalidDateException extends Exception{","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"edwardhumi"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"edwardhumi":4,"claribelho":4}},{"path":"src/main/java/seedu/fitnus/exception/InvalidEditWaterException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BryanCastorius"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-04-14"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":3,"author":{"gitId":"BryanCastorius"},"content":"/**","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"BryanCastorius"},"content":" * Exception class thrown when the user did not enter any water for the day and proceed to edit the water intake.","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"BryanCastorius"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":" */","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"public class InvalidEditWaterException extends Exception {","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-04-14"}],"authorContributionMap":{"BryanCastorius":8}},{"path":"src/main/java/seedu/fitnus/exception/InvalidListIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the index is not a valid index in the list.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"public class InvalidListIndexException extends Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"    ","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"claribelho":9}},{"path":"src/main/java/seedu/fitnus/exception/NegativeValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"jasonlienardi"},"content":" * Exception class thrown when the integer is negative value.","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"public class NegativeValueException extends Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"jasonlienardi":1,"claribelho":7}},{"path":"src/main/java/seedu/fitnus/exception/NonPositiveValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonlienardi"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"jasonlienardi"},"content":"/**","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"jasonlienardi"},"content":" * Exception class thrown when the integer is a non-positive value.","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"jasonlienardi"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"jasonlienardi"},"content":" */","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"jasonlienardi"},"content":"public class NonPositiveValueException extends Exception {","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"}","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"jasonlienardi":8}},{"path":"src/main/java/seedu/fitnus/exception/StorageErrorException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"public class StorageErrorException extends Exception {","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"claribelho":5}},{"path":"src/main/java/seedu/fitnus/exception/UnregisteredDrinkException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the specified drink is not pre-defined.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"public class UnregisteredDrinkException extends Exception{","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"BryanCastorius":3,"claribelho":5}},{"path":"src/main/java/seedu/fitnus/exception/UnregisteredExerciseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonlienardi"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the specified exercise is not pre-defined.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"jasonlienardi"},"content":"public class UnregisteredExerciseException extends Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"jasonlienardi":4,"claribelho":4}},{"path":"src/main/java/seedu/fitnus/exception/UnregisteredMealException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exception;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":" * Exception class thrown when the specified meal is not pre-defined.","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":" * Class is inherited from Exception.","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"public class UnregisteredMealException extends Exception{","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"BryanCastorius"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"BryanCastorius":3,"claribelho":5}},{"path":"src/main/java/seedu/fitnus/exercise/Exercise.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonlienardi"},"content":"package seedu.fitnus.exercise;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.IncompleteInfoException;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.UnregisteredExerciseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.parser.Parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"jasonlienardi"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"jasonlienardi"},"content":"public class Exercise {","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"edwardhumi"},"content":"    public static HashMap\u003cString, int[]\u003e exerciseDetails \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"jasonlienardi"},"content":"    private String name;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"jasonlienardi"},"content":"    private int duration; // Duration in minutes","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"jasonlienardi"},"content":"    private ExerciseIntensity intensity;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"    private long caloriesBurnt;","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"BryanCastorius"},"content":"    private String dateAdded;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"     * Constructor for an Exercise, requires the name, duration and intensity of the exercise,","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"     * as well as date that it is added into the list.","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"     * @param name name of exercise to be added into the list","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"     * @param duration duration of the exercise to be added into the list","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"     * @param intensity intensity of the exercise to be added into the list, can be HIGH/MEDIUM/LOW","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"     * @param currentDate date of which the exercise is added into list","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"BryanCastorius"},"content":"    public Exercise(String name, int duration, ExerciseIntensity intensity, String currentDate)","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"BryanCastorius"},"content":"            throws UnregisteredExerciseException {","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"jasonlienardi"},"content":"        assert name !\u003d null : \"Name must not be null\";","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"jasonlienardi"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"jasonlienardi"},"content":"        assert duration \u003e 0 : \"Duration must be greater than 0\";","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"jasonlienardi"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"jasonlienardi"},"content":"        assert isValidIntensity(intensity) : \"Intensity must be HIGH, MEDIUM, or LOW\";","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"jasonlienardi"},"content":"        this.intensity \u003d intensity;","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"jasonlienardi"},"content":"        setCaloriesBurnt(); // Assign exercise details based on the name and intensity","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"BryanCastorius"},"content":"        this.dateAdded \u003d currentDate;","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"jasonlienardi"},"content":"    static {","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"edwardhumi"},"content":"        exerciseDetails.put(\"running\", new int[]{14, 10, 7});","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"edwardhumi"},"content":"        exerciseDetails.put(\"cycling\", new int[]{10, 7, 4});","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"edwardhumi"},"content":"        exerciseDetails.put(\"swimming\", new int[]{12, 8, 5});","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"     * Calculate the number of calories burnt from the exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"     * @throws UnregisteredExerciseException if specified exercise is not pre-defined.","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"jasonlienardi"},"content":"    private void setCaloriesBurnt() throws UnregisteredExerciseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"jasonlienardi"},"content":"        int[] details \u003d exerciseDetails.get(name);","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"jasonlienardi"},"content":"        if (details \u003d\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"jasonlienardi"},"content":"            throw new UnregisteredExerciseException();","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"        this.caloriesBurnt \u003d (long) duration * details[intensity.ordinal()];","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"     * Returns true if the exercise intensity specified is valid,","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"     * following the ExerciseIntensity enum.","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"     * @param intensity intensity of exercise, only can be a value of high/medium/low","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"     * @return true if the exercise intensity specified is valid","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"jasonlienardi"},"content":"    private boolean isValidIntensity(ExerciseIntensity intensity) {","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"jasonlienardi"},"content":"        return intensity \u003d\u003d ExerciseIntensity.HIGH || intensity \u003d\u003d ExerciseIntensity.MEDIUM ||","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"jasonlienardi"},"content":"                intensity \u003d\u003d ExerciseIntensity.LOW;","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"     * Returns a string stating the name of the exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"     * @return string stating the name of the exercise","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"jasonlienardi"},"content":"    public String getName() {","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"jasonlienardi"},"content":"        return name;","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"     * Returns an integer value of the duration of the exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"claribelho"},"content":"     * @return an integer value of the duration of the exercise","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"jasonlienardi"},"content":"    public int getDuration() {","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"jasonlienardi"},"content":"        return duration;","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"     * Returns the intensity of the exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"claribelho"},"content":"     * @return the intensity of the exercise","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"jasonlienardi"},"content":"    public ExerciseIntensity getIntensity() {","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"jasonlienardi"},"content":"        return intensity;","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"claribelho"},"content":"     * Returns the date of which the exercise was added into exerciseList.","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"claribelho"},"content":"     * @return date of which the exercise was added into exerciseList","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"BryanCastorius"},"content":"    public String getDate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"BryanCastorius"},"content":"        return dateAdded;","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"claribelho"},"content":"     * Returns a long value of the amount of calories burnt from the exercise.","lastModifiedDate":"2024-04-12"},{"lineNumber":107,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"claribelho"},"content":"     * @return a long value of the amount of calories burnt from the exercise","lastModifiedDate":"2024-04-12"},{"lineNumber":109,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"claribelho"},"content":"    public long getCaloriesBurnt() {","lastModifiedDate":"2024-04-12"},{"lineNumber":111,"author":{"gitId":"jasonlienardi"},"content":"        return caloriesBurnt;","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"claribelho"},"content":"     * Handles when user would like to find out the information about a certain exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"claribelho"},"content":"     * Prints out the calories burnt for 1 minute of the workout.","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by user, containing exercise to be viewed","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"claribelho"},"content":"     * @throws UnregisteredExerciseException if exercise specified is not a pre-defined exercise","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"claribelho"},"content":"     * @throws IncompleteInfoException if the user did not comply with the required format","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"claribelho"},"content":"    public static void handleInfoExercise(String command) throws UnregisteredExerciseException,","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"claribelho"},"content":"            IncompleteInfoException {","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"jasonlienardi"},"content":"        String name \u003d Parser.parseInfoExercise(command);","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"jasonlienardi"},"content":"        int[] details \u003d exerciseDetails.get(name);","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"jasonlienardi"},"content":"        if (details \u003d\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"jasonlienardi"},"content":"            throw new UnregisteredExerciseException();","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Exercise: \" + name);","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"~ Calories burnt for a 1 minute workout of ~\");","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"HIGH intensity: \" + details[0] + \" kcal\");","lastModifiedDate":"2024-04-15"},{"lineNumber":132,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"MEDIUM intensity: \" + details[1] + \" kcal\");","lastModifiedDate":"2024-04-15"},{"lineNumber":133,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"LOW intensity: \" + details[2] + \" kcal\");","lastModifiedDate":"2024-04-15"},{"lineNumber":134,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"claribelho"},"content":"     * Prints out all pre-defined exercises in one line,","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"claribelho"},"content":"     * only called when the user first enters the program.","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"jasonlienardi"},"content":"    public static void printAvailableExercises() {","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"BryanCastorius"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-04-14"},{"lineNumber":142,"author":{"gitId":"jasonlienardi"},"content":"        System.out.print(\"Available exercises: \");","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"jasonlienardi"},"content":"        for (String exercise : exerciseDetails.keySet()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"BryanCastorius"},"content":"            if (count \u003c 3) {","lastModifiedDate":"2024-04-14"},{"lineNumber":145,"author":{"gitId":"jasonlienardi"},"content":"                System.out.print(exercise);","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"jasonlienardi"},"content":"                System.out.print(\", \");","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"BryanCastorius"},"content":"                count++;","lastModifiedDate":"2024-04-14"},{"lineNumber":148,"author":{"gitId":"BryanCastorius"},"content":"            } else {","lastModifiedDate":"2024-04-14"},{"lineNumber":149,"author":{"gitId":"BryanCastorius"},"content":"                break;","lastModifiedDate":"2024-04-14"},{"lineNumber":150,"author":{"gitId":"BryanCastorius"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":151,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"jasonlienardi"},"content":"        System.out.print(\"etc.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println();","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"claribelho"},"content":"     * Prints out all pre-defined exercises in a list.","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"claribelho"},"content":"    public static void listAvailableExercises() {","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Available exercises: \");","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"claribelho"},"content":"        for (String exercise : exerciseDetails.keySet()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"- \" + exercise);","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"claribelho"},"content":"        System.out.println();","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"You may also input an exercise that isn\u0027t here with newExercise.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":166,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":167,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"jasonlienardi"},"content":"    public static HashMap\u003cString, int[]\u003e getExerciseDetails() {","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"jasonlienardi"},"content":"        return exerciseDetails;","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"jasonlienardi"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"edwardhumi":5,"jasonlienardi":72,"BryanCastorius":14,"claribelho":80}},{"path":"src/main/java/seedu/fitnus/exercise/ExerciseIntensity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonlienardi"},"content":"package seedu.fitnus.exercise;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"jasonlienardi"},"content":"public enum ExerciseIntensity {","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"jasonlienardi"},"content":"    HIGH,","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"jasonlienardi"},"content":"    MEDIUM,","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"jasonlienardi"},"content":"    LOW","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"jasonlienardi"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"jasonlienardi":6}},{"path":"src/main/java/seedu/fitnus/exercise/ExerciseList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jasonlienardi"},"content":"package seedu.fitnus.exercise;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.date.Date;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.ExceedTypeLongException;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.FutureDateException;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.IncompleteDeleteException;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.IncompleteExerciseException;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.InvalidDateException;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.InvalidListIndexException;","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.NonPositiveValueException;","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.UnregisteredExerciseException;","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.parser.Parser;","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.validator.IntegerValidation;","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"import java.text.ParseException;","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"jasonlienardi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"jasonlienardi"},"content":"public class ExerciseList {","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"jasonlienardi"},"content":"    public ArrayList\u003cExercise\u003e exerciseList;","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"jasonlienardi"},"content":"    public ArrayList\u003cExercise\u003e exerciseListAll;","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"jasonlienardi"},"content":"    public ExerciseList() {","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"jasonlienardi"},"content":"        exerciseList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"jasonlienardi"},"content":"        exerciseListAll \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"jasonlienardi"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"jasonlienardi"},"content":"     * Adds a exercise to available exercises","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"jasonlienardi"},"content":"     *","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"jasonlienardi"},"content":"     * @param command string inputted by the user, containing the exercise they want to add to available exercises","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"jasonlienardi"},"content":"     *                and details regarding the calories burnt","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"jasonlienardi"},"content":"     * @throws NonPositiveValueException if the calories burnt is a negative value","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"jasonlienardi"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"jasonlienardi"},"content":"    public void handleAddNewExerciseCalories(String command) throws NonPositiveValueException {","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"jasonlienardi"},"content":"        Parser.parseNewExercise(command);","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"jasonlienardi"},"content":"        String description \u003d Parser.exerciseCaloriesDescription;","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"jasonlienardi"},"content":"        int high \u003d Parser.exerciseCaloriesHigh;","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"jasonlienardi"},"content":"        int medium \u003d Parser.exerciseCaloriesMedium;","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"jasonlienardi"},"content":"        int low \u003d Parser.exerciseCaloriesLow;","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"jasonlienardi"},"content":"        Exercise.exerciseDetails.put(description, new int[]{high, medium, low});","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Added \" + description + \" to available exercises\");","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"jasonlienardi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"jasonlienardi"},"content":"     * Prints all the exercises in the exerciseListToPrint,","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"jasonlienardi"},"content":"     * inclusive of the duration, intensity and date.","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"jasonlienardi"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"jasonlienardi"},"content":"     * @param exerciseListToPrint arraylist containing the exercises that should be printed","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"jasonlienardi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"jasonlienardi"},"content":"    public void printExerciseList(ArrayList\u003cExercise\u003e exerciseListToPrint) {","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"jasonlienardi"},"content":"        for (int i \u003d 0; i \u003c exerciseListToPrint.size(); i++) {","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"jasonlienardi"},"content":"            Exercise currentExercise \u003d exerciseListToPrint.get(i);","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println((i+1) + \". \" + currentExercise.getName() + \" | duration: \" +","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"jasonlienardi"},"content":"                    currentExercise.getDuration() + \" | intensity: \" + currentExercise.getIntensity()","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"jasonlienardi"},"content":"                    + \" | date: \" + currentExercise.getDate());","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"jasonlienardi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"jasonlienardi"},"content":"     * Handles when the user is listing the exercises they have done today.","lastModifiedDate":"2024-04-10"},{"lineNumber":62,"author":{"gitId":"jasonlienardi"},"content":"     * Method first checks if the list is empty.","lastModifiedDate":"2024-04-10"},{"lineNumber":63,"author":{"gitId":"jasonlienardi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":64,"author":{"gitId":"jasonlienardi"},"content":"    public void handleListExercises() {","lastModifiedDate":"2024-04-10"},{"lineNumber":65,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"here\u0027s the exercises you\u0027ve done today\");","lastModifiedDate":"2024-04-10"},{"lineNumber":66,"author":{"gitId":"jasonlienardi"},"content":"        if (exerciseList.isEmpty()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":67,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-04-10"},{"lineNumber":68,"author":{"gitId":"jasonlienardi"},"content":"        } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":69,"author":{"gitId":"jasonlienardi"},"content":"            printExerciseList(exerciseList);","lastModifiedDate":"2024-04-10"},{"lineNumber":70,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":71,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":72,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":73,"author":{"gitId":"jasonlienardi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":74,"author":{"gitId":"jasonlienardi"},"content":"     * Handles when the user is listing all exercises they have done, inclusive of previously saved exercises.","lastModifiedDate":"2024-04-10"},{"lineNumber":75,"author":{"gitId":"jasonlienardi"},"content":"     * Method first checks if the list is empty.","lastModifiedDate":"2024-04-10"},{"lineNumber":76,"author":{"gitId":"jasonlienardi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":77,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":78,"author":{"gitId":"jasonlienardi"},"content":"    public void handleListExercisesAll() {","lastModifiedDate":"2024-04-10"},{"lineNumber":79,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"here\u0027s the exercises you\u0027ve done so far\");","lastModifiedDate":"2024-04-10"},{"lineNumber":80,"author":{"gitId":"jasonlienardi"},"content":"        if (exerciseListAll.isEmpty() \u0026\u0026 exerciseList.isEmpty()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":81,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-04-10"},{"lineNumber":82,"author":{"gitId":"jasonlienardi"},"content":"        } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":83,"author":{"gitId":"jasonlienardi"},"content":"            ArrayList\u003cExercise\u003e appendedExerciseList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":84,"author":{"gitId":"jasonlienardi"},"content":"            appendedExerciseList.addAll(exerciseListAll);","lastModifiedDate":"2024-04-10"},{"lineNumber":85,"author":{"gitId":"jasonlienardi"},"content":"            appendedExerciseList.addAll(exerciseList);","lastModifiedDate":"2024-04-10"},{"lineNumber":86,"author":{"gitId":"jasonlienardi"},"content":"            printExerciseList(appendedExerciseList);","lastModifiedDate":"2024-04-10"},{"lineNumber":87,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":88,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":89,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":90,"author":{"gitId":"jasonlienardi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":91,"author":{"gitId":"jasonlienardi"},"content":"     * Handles when the user is listing the exercises they have done on a certain date.","lastModifiedDate":"2024-04-10"},{"lineNumber":92,"author":{"gitId":"jasonlienardi"},"content":"     * Method will first extract all exercises that have this corresponding date,","lastModifiedDate":"2024-04-10"},{"lineNumber":93,"author":{"gitId":"jasonlienardi"},"content":"     * before printing.","lastModifiedDate":"2024-04-10"},{"lineNumber":94,"author":{"gitId":"jasonlienardi"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":95,"author":{"gitId":"jasonlienardi"},"content":"     * @param command string inputted by the user, containing the date of which they would like to list exercises of","lastModifiedDate":"2024-04-10"},{"lineNumber":96,"author":{"gitId":"jasonlienardi"},"content":"     * @throws InvalidDateException if the date inputted by user is invalid","lastModifiedDate":"2024-04-10"},{"lineNumber":97,"author":{"gitId":"jasonlienardi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":98,"author":{"gitId":"claribelho"},"content":"    public void handleListExercisesDate(String command) throws InvalidDateException, FutureDateException,","lastModifiedDate":"2024-04-10"},{"lineNumber":99,"author":{"gitId":"claribelho"},"content":"            ParseException {","lastModifiedDate":"2024-04-10"},{"lineNumber":100,"author":{"gitId":"jasonlienardi"},"content":"        String date \u003d Parser.parseListDate(command);","lastModifiedDate":"2024-04-10"},{"lineNumber":101,"author":{"gitId":"jasonlienardi"},"content":"        ArrayList\u003cExercise\u003e exercisesListDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":102,"author":{"gitId":"jasonlienardi"},"content":"        for (Exercise e : exerciseListAll) {","lastModifiedDate":"2024-04-10"},{"lineNumber":103,"author":{"gitId":"jasonlienardi"},"content":"            if (e.getDate().equals(date)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":104,"author":{"gitId":"jasonlienardi"},"content":"                exercisesListDate.add(e);","lastModifiedDate":"2024-04-10"},{"lineNumber":105,"author":{"gitId":"jasonlienardi"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":106,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":107,"author":{"gitId":"jasonlienardi"},"content":"        for (Exercise e : exerciseList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":108,"author":{"gitId":"jasonlienardi"},"content":"            if (e.getDate().equals(date)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":109,"author":{"gitId":"jasonlienardi"},"content":"                exercisesListDate.add(e);","lastModifiedDate":"2024-04-10"},{"lineNumber":110,"author":{"gitId":"jasonlienardi"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":111,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":112,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"here\u0027s the exercises you\u0027ve done on \" + date);","lastModifiedDate":"2024-04-10"},{"lineNumber":113,"author":{"gitId":"jasonlienardi"},"content":"        if (exercisesListDate.isEmpty()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":114,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-04-10"},{"lineNumber":115,"author":{"gitId":"jasonlienardi"},"content":"        } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":116,"author":{"gitId":"jasonlienardi"},"content":"            printExerciseList(exercisesListDate);","lastModifiedDate":"2024-04-10"},{"lineNumber":117,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":118,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":119,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":120,"author":{"gitId":"jasonlienardi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":121,"author":{"gitId":"jasonlienardi"},"content":"     * Handles when the user would like to delete a previously inputted exercise.","lastModifiedDate":"2024-04-10"},{"lineNumber":122,"author":{"gitId":"jasonlienardi"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":123,"author":{"gitId":"jasonlienardi"},"content":"     * @param command string inputted by the user, containing the index of the exercise to delete","lastModifiedDate":"2024-04-10"},{"lineNumber":124,"author":{"gitId":"jasonlienardi"},"content":"     * @throws InvalidListIndexException if the provided index is not a valid index in exerciseList","lastModifiedDate":"2024-04-10"},{"lineNumber":125,"author":{"gitId":"jasonlienardi"},"content":"     * @throws IncompleteDeleteException if the user did not comply with the required command format","lastModifiedDate":"2024-04-10"},{"lineNumber":126,"author":{"gitId":"jasonlienardi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":127,"author":{"gitId":"jasonlienardi"},"content":"    public void handleDeleteExercise(String command) throws InvalidListIndexException, IncompleteDeleteException {","lastModifiedDate":"2024-04-10"},{"lineNumber":128,"author":{"gitId":"jasonlienardi"},"content":"        if (command.length() \u003c 16) {","lastModifiedDate":"2024-04-10"},{"lineNumber":129,"author":{"gitId":"jasonlienardi"},"content":"            throw new IncompleteDeleteException();","lastModifiedDate":"2024-04-10"},{"lineNumber":130,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":131,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":132,"author":{"gitId":"jasonlienardi"},"content":"        int exerciseIndex \u003d Integer.parseInt(command.substring(15).trim()) - 1;","lastModifiedDate":"2024-04-10"},{"lineNumber":133,"author":{"gitId":"jasonlienardi"},"content":"        if (exerciseIndex \u003e\u003d exerciseList.size() || exerciseIndex \u003c 0) {","lastModifiedDate":"2024-04-10"},{"lineNumber":134,"author":{"gitId":"jasonlienardi"},"content":"            throw new InvalidListIndexException();","lastModifiedDate":"2024-04-10"},{"lineNumber":135,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":136,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":137,"author":{"gitId":"jasonlienardi"},"content":"        String exerciseName \u003d exerciseList.get(exerciseIndex).getName();","lastModifiedDate":"2024-04-10"},{"lineNumber":138,"author":{"gitId":"jasonlienardi"},"content":"        exerciseList.remove(exerciseIndex);","lastModifiedDate":"2024-04-10"},{"lineNumber":139,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Removed \" + exerciseName + \" from exercises done\");","lastModifiedDate":"2024-04-10"},{"lineNumber":140,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":141,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":142,"author":{"gitId":"jasonlienardi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":143,"author":{"gitId":"jasonlienardi"},"content":"     * Adds an exercise to the user\u0027s current exerciseList, based on what exercise the user has done,","lastModifiedDate":"2024-04-10"},{"lineNumber":144,"author":{"gitId":"jasonlienardi"},"content":"     * its duration and intensity.","lastModifiedDate":"2024-04-10"},{"lineNumber":145,"author":{"gitId":"jasonlienardi"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":146,"author":{"gitId":"jasonlienardi"},"content":"     * @param command string inputted by the user, containing the exercise they have done, its duration and","lastModifiedDate":"2024-04-10"},{"lineNumber":147,"author":{"gitId":"jasonlienardi"},"content":"     *                intensity.","lastModifiedDate":"2024-04-10"},{"lineNumber":148,"author":{"gitId":"jasonlienardi"},"content":"     * @throws IncompleteExerciseException if the user did not comply with the required format","lastModifiedDate":"2024-04-10"},{"lineNumber":149,"author":{"gitId":"jasonlienardi"},"content":"     * @throws UnregisteredExerciseException if the user has inputted an exercise that was not pre-defined","lastModifiedDate":"2024-04-10"},{"lineNumber":150,"author":{"gitId":"jasonlienardi"},"content":"     * @throws NonPositiveValueException if the provided exercise duration is a negative value","lastModifiedDate":"2024-04-12"},{"lineNumber":151,"author":{"gitId":"jasonlienardi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":152,"author":{"gitId":"jasonlienardi"},"content":"    public void handleExercise(String command) throws IncompleteExerciseException, UnregisteredExerciseException,","lastModifiedDate":"2024-04-10"},{"lineNumber":153,"author":{"gitId":"jasonlienardi"},"content":"            NonPositiveValueException {","lastModifiedDate":"2024-04-12"},{"lineNumber":154,"author":{"gitId":"jasonlienardi"},"content":"        Parser.parseExercise(command);","lastModifiedDate":"2024-04-10"},{"lineNumber":155,"author":{"gitId":"jasonlienardi"},"content":"        String exerciseType \u003d Parser.exerciseDescription;","lastModifiedDate":"2024-04-10"},{"lineNumber":156,"author":{"gitId":"jasonlienardi"},"content":"        int duration \u003d Parser.exerciseDuration;","lastModifiedDate":"2024-04-10"},{"lineNumber":157,"author":{"gitId":"jasonlienardi"},"content":"        ExerciseIntensity intensity \u003d Parser.exerciseIntensity;","lastModifiedDate":"2024-04-10"},{"lineNumber":158,"author":{"gitId":"jasonlienardi"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2024-04-10"},{"lineNumber":159,"author":{"gitId":"jasonlienardi"},"content":"        exerciseList.add(new Exercise(exerciseType, duration, intensity, currentDate.getDate()));","lastModifiedDate":"2024-04-10"},{"lineNumber":160,"author":{"gitId":"jasonlienardi"},"content":"        assert !exerciseList.isEmpty(): \"failed to track exercise\";","lastModifiedDate":"2024-04-10"},{"lineNumber":161,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":162,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Tracked \" + duration + \" minutes of \" + exerciseType);","lastModifiedDate":"2024-04-10"},{"lineNumber":163,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":164,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":165,"author":{"gitId":"jasonlienardi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":166,"author":{"gitId":"jasonlienardi"},"content":"     * Prints the number of calories the user has burnt today.","lastModifiedDate":"2024-04-10"},{"lineNumber":167,"author":{"gitId":"jasonlienardi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":168,"author":{"gitId":"claribelho"},"content":"    public void handleCaloriesBurnt() throws ExceedTypeLongException {","lastModifiedDate":"2024-04-12"},{"lineNumber":169,"author":{"gitId":"claribelho"},"content":"        long caloriesBurnt \u003d 0;","lastModifiedDate":"2024-04-12"},{"lineNumber":170,"author":{"gitId":"jasonlienardi"},"content":"        for (Exercise exercise: exerciseList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":171,"author":{"gitId":"jasonlienardi"},"content":"            caloriesBurnt +\u003d exercise.getCaloriesBurnt();","lastModifiedDate":"2024-04-10"},{"lineNumber":172,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":173,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkNoOverflowForSum(caloriesBurnt);","lastModifiedDate":"2024-04-12"},{"lineNumber":174,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Total calories burnt: \" + caloriesBurnt + \" kcal\");","lastModifiedDate":"2024-04-15"},{"lineNumber":175,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":176,"author":{"gitId":"jasonlienardi"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"jasonlienardi":165,"BryanCastorius":1,"claribelho":10}},{"path":"src/main/java/seedu/fitnus/meal/Meal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.meal;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"tinaliu27"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.IncompleteInfoException;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.UnregisteredMealException;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.parser.Parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"jasonlienardi"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"tinaliu27"},"content":"public class Meal {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"edwardhumi"},"content":"    public static HashMap\u003cString, int[]\u003e nutrientDetails \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"jasonlienardi"},"content":"    private String name;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"jasonlienardi"},"content":"    private int servingSize;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"    private String dateAdded;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"    private long calories;","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"    private long carbs;","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"    private long protein;","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"    private long fat;","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"    private long fiber;","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"    private long sugar;","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"     * Constructor for a Meal, requires the name and serving size of the meal,","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"     * as well as date that it is added into the list.","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"     * @param name name of meal to be added into the list","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"     * @param servingSize serving size of the meal to be added into the list","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"     * @param currentDate date of which the meal is added into list","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"    public Meal(String name, int servingSize, String currentDate) {","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"jasonlienardi"},"content":"        assert name !\u003d null : \"Name must not be null\";","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"jasonlienardi"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"jasonlienardi"},"content":"        assert servingSize \u003e 0 : \"Serving size must be greater than 0\";","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"jasonlienardi"},"content":"        this.servingSize \u003d servingSize;","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"jasonlienardi"},"content":"        setNutrientValues(name); // Assign nutrient values based on the name","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"        this.dateAdded \u003d currentDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"edwardhumi"},"content":"    static {","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"edwardhumi"},"content":"        nutrientDetails.put(\"chicken rice\", new int[]{400, 50, 30, 20, 10, 5});","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"edwardhumi"},"content":"        nutrientDetails.put(\"fried rice\", new int[]{500, 60, 25, 15, 15, 5});","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"edwardhumi"},"content":"        nutrientDetails.put(\"pizza\", new int[]{600, 80, 50, 40, 30, 20});","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"edwardhumi"},"content":"        nutrientDetails.put(\"kaya toast\", new int[]{459, 44, 8, 27, 10, 1});","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"edwardhumi"},"content":"        nutrientDetails.put(\"laksa\", new int[]{377, 71, 18, 2, 4, 10});","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"ban mian\", new int[]{475, 48, 22, 22, 3, 10});","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"tau huay\", new int[]{153, 32, 14, 1, 5, 1});","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"nasi goreng\", new int[]{346, 45, 13, 12, 10, 2});","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"babi kecap\", new int[]{607, 75, 25, 23, 2, 10});","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"soup kambeng\", new int[]{203, 6, 28, 7, 2, 5});","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"nasi lemak\", new int[]{494, 80, 13, 14, 6, 5});","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"pepper lunch\", new int[]{500, 50, 40, 11, 4, 5});","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"char siew rice\", new int[]{605, 91, 24, 16, 6, 10});","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"pork satay with satay sauce\", new int[]{36, 1, 5, 2, 10, 0});","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"roti prata\", new int[]{209, 32, 5, 7, 2, 10});","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"mee goreng\", new int[]{500, 61, 18, 20, 4, 5});","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"chendol\", new int[]{386, 59, 6, 15, 7, 2});","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"wanton mee\", new int[]{555, 97, 15, 14, 13, 10});","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"oyster omlette\", new int[]{467, 40, 19, 24, 10, 1});","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"ice kachang\", new int[]{257, 58, 6, 1, 10, 2});","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"mala\", new int[]{583, 72, 12, 30, 10, 7});","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"hokkien prawn mee\", new int[]{522, 69, 18, 19, 4, 10});","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"        nutrientDetails.put(\"durian\", new int[]{147, 27, 2, 5, 3, 5});","lastModifiedDate":"2024-04-10"},{"lineNumber":62,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"jasonlienardi"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"jasonlienardi"},"content":"     * Sets nutrients details for a certain meal based on values in hashmap","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"jasonlienardi"},"content":"     *","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"jasonlienardi"},"content":"     * @param name name of meal to set nutrients","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"jasonlienardi"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":69,"author":{"gitId":"jasonlienardi"},"content":"    private void setNutrientValues(String name) {","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"jasonlienardi"},"content":"        int[] nutrients \u003d nutrientDetails.get(name);","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"        calories \u003d (long) nutrients[0] * servingSize;","lastModifiedDate":"2024-04-12"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"        carbs \u003d (long) nutrients[1] * servingSize;","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"        protein \u003d (long) nutrients[2] * servingSize;","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"        fat \u003d (long) nutrients[3] * servingSize;","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"        fiber \u003d (long) nutrients[4] * servingSize;","lastModifiedDate":"2024-04-12"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"        sugar \u003d (long) nutrients[5] * servingSize;","lastModifiedDate":"2024-04-12"},{"lineNumber":77,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"     * Returns a string stating the name of the meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"     * @return string stating the name of the meal","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"jasonlienardi"},"content":"    public String getName() {","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"jasonlienardi"},"content":"        return name;","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"claribelho"},"content":"     * Returns a long value of the amount of calories in the meal.","lastModifiedDate":"2024-04-12"},{"lineNumber":90,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"claribelho"},"content":"     * @return a long value of the amount of calories in the meal","lastModifiedDate":"2024-04-12"},{"lineNumber":92,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"claribelho"},"content":"    public long getCalories() {","lastModifiedDate":"2024-04-12"},{"lineNumber":94,"author":{"gitId":"BryanCastorius"},"content":"        return calories;","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"claribelho"},"content":"     * Returns a long value of the amount of carbohydrates in the meal.","lastModifiedDate":"2024-04-12"},{"lineNumber":99,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"claribelho"},"content":"     * @return a long value of the amount of carbohydrates in the meal","lastModifiedDate":"2024-04-12"},{"lineNumber":101,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"claribelho"},"content":"    public long getCarbs() {","lastModifiedDate":"2024-04-12"},{"lineNumber":103,"author":{"gitId":"BryanCastorius"},"content":"        return carbs;","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"claribelho"},"content":"     * Returns a long value of the amount of protein in the meal.","lastModifiedDate":"2024-04-12"},{"lineNumber":108,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"claribelho"},"content":"     * @return a long value of the amount of protein in the meal","lastModifiedDate":"2024-04-12"},{"lineNumber":110,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"claribelho"},"content":"    public long getProtein() {","lastModifiedDate":"2024-04-12"},{"lineNumber":112,"author":{"gitId":"BryanCastorius"},"content":"        return protein;","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"claribelho"},"content":"     * Returns a long value of the amount of fat in the meal.","lastModifiedDate":"2024-04-12"},{"lineNumber":117,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"claribelho"},"content":"     * @return a long value of the amount of fat in the meal","lastModifiedDate":"2024-04-12"},{"lineNumber":119,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"claribelho"},"content":"    public long getFat() {","lastModifiedDate":"2024-04-12"},{"lineNumber":121,"author":{"gitId":"BryanCastorius"},"content":"        return fat;","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"claribelho"},"content":"     * Returns a long value of the amount of fiber in the meal.","lastModifiedDate":"2024-04-12"},{"lineNumber":126,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"claribelho"},"content":"     * @return a long value of the amount of fiber in the meal","lastModifiedDate":"2024-04-12"},{"lineNumber":128,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"claribelho"},"content":"    public long getFiber() {","lastModifiedDate":"2024-04-12"},{"lineNumber":130,"author":{"gitId":"BryanCastorius"},"content":"        return fiber;","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"claribelho"},"content":"     * Returns a long value of the amount of sugar in the meal.","lastModifiedDate":"2024-04-12"},{"lineNumber":135,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"claribelho"},"content":"     * @return a long value of the amount of sugar in the meal","lastModifiedDate":"2024-04-12"},{"lineNumber":137,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"claribelho"},"content":"    public long getSugar() {","lastModifiedDate":"2024-04-12"},{"lineNumber":139,"author":{"gitId":"BryanCastorius"},"content":"        return sugar;","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"claribelho"},"content":"     * Returns an integer value of the serving size of the meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"claribelho"},"content":"     * @return an integer value of the serving size of the meal","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"claribelho"},"content":"    public int getServingSize() {","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"claribelho"},"content":"        return servingSize;","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"claribelho"},"content":"     * Handles when user would like to find out the information about a certain meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"claribelho"},"content":"     * Prints out all nutritional content of the meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by user, containing meal to be viewed","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"claribelho"},"content":"     * @throws UnregisteredMealException if meal specified is not a pre-defined meal","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"claribelho"},"content":"     * @throws IncompleteInfoException if the user did not comply with the required format","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"claribelho"},"content":"    public static void handleInfoMeal(String command) throws UnregisteredMealException, IncompleteInfoException {","lastModifiedDate":"2024-03-30"},{"lineNumber":160,"author":{"gitId":"jasonlienardi"},"content":"        String name \u003d Parser.parseInfoMeal(command);","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"jasonlienardi"},"content":"        int[] nutrients \u003d nutrientDetails.get(name);","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"BryanCastorius"},"content":"        System.out.println(\"Meal: \" + name + \" (per serving)\");","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Calories: \" + nutrients[0] + \" kcal\");","lastModifiedDate":"2024-04-15"},{"lineNumber":164,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Carbs: \" + nutrients[1] + \" g\");","lastModifiedDate":"2024-04-15"},{"lineNumber":165,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Protein: \" + nutrients[2] + \" g\");","lastModifiedDate":"2024-04-15"},{"lineNumber":166,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Fat: \" + nutrients[3] + \" g\");","lastModifiedDate":"2024-04-15"},{"lineNumber":167,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Fiber: \" + nutrients[4] + \" g\");","lastModifiedDate":"2024-04-15"},{"lineNumber":168,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Sugar: \" + nutrients[5] + \" g\");","lastModifiedDate":"2024-04-15"},{"lineNumber":169,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":170,"author":{"gitId":"tinaliu27"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":171,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":172,"author":{"gitId":"claribelho"},"content":"     * Prints out all pre-defined meals in one line,","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"claribelho"},"content":"     * only called when the user first enters the program.","lastModifiedDate":"2024-04-02"},{"lineNumber":174,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":175,"author":{"gitId":"BryanCastorius"},"content":"    public static void printAvailableMeals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"BryanCastorius"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-04-14"},{"lineNumber":177,"author":{"gitId":"BryanCastorius"},"content":"        System.out.print(\"Available meals: \");","lastModifiedDate":"2024-03-19"},{"lineNumber":178,"author":{"gitId":"BryanCastorius"},"content":"        for (String meal : nutrientDetails.keySet()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"BryanCastorius"},"content":"            if (count \u003c 3) {","lastModifiedDate":"2024-04-14"},{"lineNumber":180,"author":{"gitId":"BryanCastorius"},"content":"                System.out.print(meal);","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"BryanCastorius"},"content":"                System.out.print(\", \");","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"BryanCastorius"},"content":"                count ++;","lastModifiedDate":"2024-04-14"},{"lineNumber":183,"author":{"gitId":"BryanCastorius"},"content":"            } else {","lastModifiedDate":"2024-04-14"},{"lineNumber":184,"author":{"gitId":"BryanCastorius"},"content":"                break;","lastModifiedDate":"2024-04-14"},{"lineNumber":185,"author":{"gitId":"BryanCastorius"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":186,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":187,"author":{"gitId":"BryanCastorius"},"content":"        System.out.print(\"etc.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"BryanCastorius"},"content":"        System.out.println();","lastModifiedDate":"2024-03-19"},{"lineNumber":189,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":191,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":192,"author":{"gitId":"claribelho"},"content":"     * Prints out all pre-defined meals in a list.","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"claribelho"},"content":"    public static void listAvailableMeals() {","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Available meals: \");","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"claribelho"},"content":"        for (String meal : nutrientDetails.keySet()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"- \" + meal);","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"claribelho"},"content":"        System.out.println();","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"You may also input a meal that isn\u0027t here with newMeal.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":201,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":202,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"BryanCastorius"},"content":"    public static HashMap\u003cString, int[]\u003e getNutrientDetails() {","lastModifiedDate":"2024-03-19"},{"lineNumber":204,"author":{"gitId":"BryanCastorius"},"content":"        return nutrientDetails;","lastModifiedDate":"2024-03-19"},{"lineNumber":205,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":206,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":207,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":208,"author":{"gitId":"claribelho"},"content":"     * Returns the date of which the meal was added into mealList.","lastModifiedDate":"2024-04-02"},{"lineNumber":209,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":210,"author":{"gitId":"claribelho"},"content":"     * @return date of which the meal was added into mealList","lastModifiedDate":"2024-04-02"},{"lineNumber":211,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":212,"author":{"gitId":"claribelho"},"content":"    public String getDate() {","lastModifiedDate":"2024-03-28"},{"lineNumber":213,"author":{"gitId":"claribelho"},"content":"        return dateAdded;","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":215,"author":{"gitId":"tinaliu27"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"tinaliu27":4,"edwardhumi":10,"jasonlienardi":40,"BryanCastorius":28,"claribelho":133}},{"path":"src/main/java/seedu/fitnus/meal/MealList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.meal;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.date.Date;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.FutureDateException;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.IncompleteDeleteException;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.IncompleteEditException;","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.IncompleteMealException;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.InvalidDateException;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.InvalidListIndexException;","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.NegativeValueException;","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.NonPositiveValueException;","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.UnregisteredMealException;","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.parser.Parser;","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"import java.text.ParseException;","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"public class MealList {","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"    public static ArrayList\u003cMeal\u003e mealList;","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"    // list for all dates except today","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"    public static ArrayList\u003cMeal\u003e mealListAll;","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"    public MealList() {","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"        mealList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"        mealListAll \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"jasonlienardi"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"jasonlienardi"},"content":"     * Adds a meal to available meals","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"jasonlienardi"},"content":"     *","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"jasonlienardi"},"content":"     * @param command string inputted by the user, containing the meal they want to add to available meals and","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"jasonlienardi"},"content":"     *                its nutrient details","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"jasonlienardi"},"content":"     * @throws NegativeValueException if the nutrient detail is a negative value","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"jasonlienardi"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"jasonlienardi"},"content":"    public void handleAddNewMealNutrient(String command) throws NegativeValueException {","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"jasonlienardi"},"content":"        Parser.parseNewMeal(command);","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"jasonlienardi"},"content":"        String description \u003d Parser.mealNutrientDescription;","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"jasonlienardi"},"content":"        int calories \u003d Parser.mealNutrientCalories;","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"jasonlienardi"},"content":"        int carbs \u003d Parser.mealNutrientCarbs;","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"jasonlienardi"},"content":"        int protein \u003d Parser.mealNutrientProtein;","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"jasonlienardi"},"content":"        int fat \u003d Parser.mealNutrientFat;","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"jasonlienardi"},"content":"        int fiber \u003d Parser.mealNutrientFiber;","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"jasonlienardi"},"content":"        int sugar \u003d Parser.mealNutrientSugar;","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"jasonlienardi"},"content":"        Meal.nutrientDetails.put(description, new int[]{calories, carbs, protein, fat, fiber, sugar});","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Added \" + description + \" to available meals\");","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"     * Adds a meal to the user\u0027s current mealList, based on what the user has eaten and the serving size consumed.","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by the user, containing the meal they ate and its serving size","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"     * @throws IncompleteMealException if the user did not comply with the required format","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"     * @throws UnregisteredMealException if the user has inputted a meal that was not pre-defined","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"jasonlienardi"},"content":"     * @throws NonPositiveValueException if the provided serving size is a negative value","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"    public static void handleMeal(String command) throws IncompleteMealException, UnregisteredMealException,","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"jasonlienardi"},"content":"            NonPositiveValueException {","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"        Parser.parseMeal(command);","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"        String mealName \u003d Parser.mealDescription;","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"        int servingSize \u003d Parser.mealSize;","lastModifiedDate":"2024-04-10"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2024-04-10"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"        mealList.add(new Meal(mealName, servingSize, currentDate.getDate()));","lastModifiedDate":"2024-04-10"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"        assert !mealList.isEmpty(): \"failed to add meal\";","lastModifiedDate":"2024-04-10"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Added \" + servingSize + \" serving of \" + mealName);","lastModifiedDate":"2024-04-10"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"     * Prints all the meals in the mealListToPrint,","lastModifiedDate":"2024-04-10"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"     * inclusive of the serving size and date.","lastModifiedDate":"2024-04-10"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"     * @param startIndex starting integer value when printing the list, where startIndex \u003e\u003d 1","lastModifiedDate":"2024-04-10"},{"lineNumber":77,"author":{"gitId":"claribelho"},"content":"     * @param mealListToPrint arraylist containing the meals that should be printed","lastModifiedDate":"2024-04-10"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"    public static void printMealList(int startIndex, ArrayList\u003cMeal\u003e mealListToPrint) {","lastModifiedDate":"2024-04-10"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"        for (int i \u003d 0; i \u003c mealListToPrint.size(); i++) {","lastModifiedDate":"2024-04-10"},{"lineNumber":81,"author":{"gitId":"claribelho"},"content":"            Meal currentMeal \u003d mealListToPrint.get(i);","lastModifiedDate":"2024-04-10"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"            System.out.println((startIndex+i) + \". \" + currentMeal.getName() + \" (serving size: \"","lastModifiedDate":"2024-04-10"},{"lineNumber":83,"author":{"gitId":"claribelho"},"content":"                    + currentMeal.getServingSize() + \")\" + \" | date: \" + currentMeal.getDate());","lastModifiedDate":"2024-04-10"},{"lineNumber":84,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":85,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":86,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":87,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"     * Handles when the user is listing the meals they have eaten today.","lastModifiedDate":"2024-04-10"},{"lineNumber":89,"author":{"gitId":"claribelho"},"content":"     * Method first checks if the list is empty.","lastModifiedDate":"2024-04-10"},{"lineNumber":90,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":91,"author":{"gitId":"claribelho"},"content":"    public static void handleListMeals() {","lastModifiedDate":"2024-04-10"},{"lineNumber":92,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"here\u0027s what you have eaten today\");","lastModifiedDate":"2024-04-10"},{"lineNumber":93,"author":{"gitId":"claribelho"},"content":"        if (mealList.isEmpty()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":94,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-04-10"},{"lineNumber":95,"author":{"gitId":"claribelho"},"content":"        } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":96,"author":{"gitId":"claribelho"},"content":"            printMealList(1, mealList);","lastModifiedDate":"2024-04-10"},{"lineNumber":97,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":98,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":99,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":100,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":101,"author":{"gitId":"claribelho"},"content":"     * Handles when the user is listing all meals they have eaten, inclusive of previously saved meals.","lastModifiedDate":"2024-04-10"},{"lineNumber":102,"author":{"gitId":"claribelho"},"content":"     * Method first checks if the list is empty.","lastModifiedDate":"2024-04-10"},{"lineNumber":103,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":104,"author":{"gitId":"edwardhumi"},"content":"    //@@author edwardhumi","lastModifiedDate":"2024-04-10"},{"lineNumber":105,"author":{"gitId":"edwardhumi"},"content":"    public static void handleListMealsAll() {","lastModifiedDate":"2024-04-10"},{"lineNumber":106,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"here\u0027s what you have eaten so far\");","lastModifiedDate":"2024-04-10"},{"lineNumber":107,"author":{"gitId":"edwardhumi"},"content":"        if (mealListAll.isEmpty() \u0026\u0026 mealList.isEmpty()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":108,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-04-10"},{"lineNumber":109,"author":{"gitId":"edwardhumi"},"content":"        } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":110,"author":{"gitId":"edwardhumi"},"content":"            printMealList(1, mealListAll);","lastModifiedDate":"2024-04-10"},{"lineNumber":111,"author":{"gitId":"edwardhumi"},"content":"            printMealList(1 + mealListAll.size(), mealList);","lastModifiedDate":"2024-04-10"},{"lineNumber":112,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":113,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":114,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":115,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":116,"author":{"gitId":"edwardhumi"},"content":"     * Handles when the user is listing the meals they have eaten on a certain date.","lastModifiedDate":"2024-04-10"},{"lineNumber":117,"author":{"gitId":"edwardhumi"},"content":"     * Method will first extract all meals that have this corresponding date,","lastModifiedDate":"2024-04-10"},{"lineNumber":118,"author":{"gitId":"edwardhumi"},"content":"     * before printing.","lastModifiedDate":"2024-04-10"},{"lineNumber":119,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":120,"author":{"gitId":"edwardhumi"},"content":"     * @param command string inputted by the user, containing the date of which they would like to list meals of","lastModifiedDate":"2024-04-10"},{"lineNumber":121,"author":{"gitId":"edwardhumi"},"content":"     * @throws InvalidDateException if the date inputted by user is invalid","lastModifiedDate":"2024-04-10"},{"lineNumber":122,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":123,"author":{"gitId":"edwardhumi"},"content":"    //@@author edwardhumi","lastModifiedDate":"2024-04-10"},{"lineNumber":124,"author":{"gitId":"edwardhumi"},"content":"    public static void handleListMealsDate(String command) throws InvalidDateException, FutureDateException,","lastModifiedDate":"2024-04-10"},{"lineNumber":125,"author":{"gitId":"edwardhumi"},"content":"            ParseException {","lastModifiedDate":"2024-04-10"},{"lineNumber":126,"author":{"gitId":"edwardhumi"},"content":"        String date \u003d Parser.parseListDate(command);","lastModifiedDate":"2024-04-10"},{"lineNumber":127,"author":{"gitId":"edwardhumi"},"content":"        ArrayList\u003cMeal\u003e mealListDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-10"},{"lineNumber":128,"author":{"gitId":"edwardhumi"},"content":"        for (Meal m : mealListAll) {","lastModifiedDate":"2024-04-10"},{"lineNumber":129,"author":{"gitId":"edwardhumi"},"content":"            if (m.getDate().equals(date)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":130,"author":{"gitId":"edwardhumi"},"content":"                mealListDate.add(m);","lastModifiedDate":"2024-04-10"},{"lineNumber":131,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":132,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":133,"author":{"gitId":"edwardhumi"},"content":"        for (Meal m : mealList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":134,"author":{"gitId":"edwardhumi"},"content":"            if (m.getDate().equals(date)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":135,"author":{"gitId":"edwardhumi"},"content":"                mealListDate.add(m);","lastModifiedDate":"2024-04-10"},{"lineNumber":136,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":137,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":138,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"here\u0027s what you have eaten on \" + date);","lastModifiedDate":"2024-04-10"},{"lineNumber":139,"author":{"gitId":"edwardhumi"},"content":"        if (mealListDate.isEmpty()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":140,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-04-10"},{"lineNumber":141,"author":{"gitId":"edwardhumi"},"content":"        } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":142,"author":{"gitId":"edwardhumi"},"content":"            printMealList(1, mealListDate);","lastModifiedDate":"2024-04-10"},{"lineNumber":143,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":144,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":145,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":146,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":147,"author":{"gitId":"edwardhumi"},"content":"     * Handles when the user would like to edit the serving size of a previously inputted meal.","lastModifiedDate":"2024-04-10"},{"lineNumber":148,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":149,"author":{"gitId":"edwardhumi"},"content":"     * @param command string inputted by the user, containing the index of the meal to edit and the new serving size","lastModifiedDate":"2024-04-10"},{"lineNumber":150,"author":{"gitId":"edwardhumi"},"content":"     * @throws InvalidListIndexException if the provided index is not a valid index in mealList","lastModifiedDate":"2024-04-10"},{"lineNumber":151,"author":{"gitId":"edwardhumi"},"content":"     * @throws NonPositiveValueException if the provided serving size is a negative value","lastModifiedDate":"2024-04-12"},{"lineNumber":152,"author":{"gitId":"edwardhumi"},"content":"     * @throws IncompleteEditException if the user did not comply with the required command format","lastModifiedDate":"2024-04-10"},{"lineNumber":153,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":154,"author":{"gitId":"claribelho"},"content":"    //@@author claribelho","lastModifiedDate":"2024-04-15"},{"lineNumber":155,"author":{"gitId":"claribelho"},"content":"    public static void handleEditMealServingSize(String command) throws InvalidListIndexException,","lastModifiedDate":"2024-04-10"},{"lineNumber":156,"author":{"gitId":"claribelho"},"content":"            NonPositiveValueException, IncompleteEditException {","lastModifiedDate":"2024-04-12"},{"lineNumber":157,"author":{"gitId":"claribelho"},"content":"        Parser.parseEditMeal(command); //Parser handles the index, so index can be \u003d 0","lastModifiedDate":"2024-04-10"},{"lineNumber":158,"author":{"gitId":"claribelho"},"content":"        if (Parser.editMealIndex \u003e\u003d mealList.size() || Parser.editMealIndex \u003c 0) {","lastModifiedDate":"2024-04-10"},{"lineNumber":159,"author":{"gitId":"claribelho"},"content":"            throw new InvalidListIndexException();","lastModifiedDate":"2024-04-10"},{"lineNumber":160,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":161,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":162,"author":{"gitId":"claribelho"},"content":"        String mealName \u003d mealList.get(Parser.editMealIndex).getName();","lastModifiedDate":"2024-04-10"},{"lineNumber":163,"author":{"gitId":"claribelho"},"content":"        String mealDate \u003d mealList.get(Parser.editMealIndex).getDate();","lastModifiedDate":"2024-04-10"},{"lineNumber":164,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":165,"author":{"gitId":"claribelho"},"content":"        Meal updatedMeal \u003d new Meal(mealName, Parser.editMealSize, mealDate);","lastModifiedDate":"2024-04-10"},{"lineNumber":166,"author":{"gitId":"claribelho"},"content":"        mealList.set(Parser.editMealIndex, updatedMeal);","lastModifiedDate":"2024-04-10"},{"lineNumber":167,"author":{"gitId":"claribelho"},"content":"        System.out.println(mealName + \" has been edited to \" + Parser.editMealSize + \" serving(s)\");","lastModifiedDate":"2024-04-10"},{"lineNumber":168,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":169,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":170,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":171,"author":{"gitId":"claribelho"},"content":"     * Handles when the user would like to delete a previously inputted meal.","lastModifiedDate":"2024-04-10"},{"lineNumber":172,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":173,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by the user, containing the index of the meal to delete","lastModifiedDate":"2024-04-10"},{"lineNumber":174,"author":{"gitId":"claribelho"},"content":"     * @throws InvalidListIndexException if the provided index is not a valid index in mealList","lastModifiedDate":"2024-04-10"},{"lineNumber":175,"author":{"gitId":"claribelho"},"content":"     * @throws IncompleteDeleteException if the user did not comply with the required command format","lastModifiedDate":"2024-04-10"},{"lineNumber":176,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":177,"author":{"gitId":"claribelho"},"content":"    public static void handleDeleteMeal(String command) throws InvalidListIndexException, IncompleteDeleteException {","lastModifiedDate":"2024-04-10"},{"lineNumber":178,"author":{"gitId":"claribelho"},"content":"        if (command.length() \u003c 12) {","lastModifiedDate":"2024-04-10"},{"lineNumber":179,"author":{"gitId":"claribelho"},"content":"            throw new IncompleteDeleteException();","lastModifiedDate":"2024-04-10"},{"lineNumber":180,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":181,"author":{"gitId":"claribelho"},"content":"        int mealIndex \u003d Integer.parseInt(command.substring(11).trim()) - 1;","lastModifiedDate":"2024-04-10"},{"lineNumber":182,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":183,"author":{"gitId":"claribelho"},"content":"        if (mealIndex \u003e\u003d mealList.size() || mealIndex \u003c 0) {","lastModifiedDate":"2024-04-10"},{"lineNumber":184,"author":{"gitId":"claribelho"},"content":"            throw new InvalidListIndexException();","lastModifiedDate":"2024-04-10"},{"lineNumber":185,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":186,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":187,"author":{"gitId":"claribelho"},"content":"        String mealName \u003d mealList.get(mealIndex).getName();","lastModifiedDate":"2024-04-10"},{"lineNumber":188,"author":{"gitId":"claribelho"},"content":"        mealList.remove(mealIndex);","lastModifiedDate":"2024-04-10"},{"lineNumber":189,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"Removed \" + mealName + \" from meals\");","lastModifiedDate":"2024-04-10"},{"lineNumber":190,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":191,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":192,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"edwardhumi":50,"jasonlienardi":24,"BryanCastorius":1,"claribelho":117}},{"path":"src/main/java/seedu/fitnus/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edwardhumi"},"content":"package seedu.fitnus.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.date.DateValidation;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.drink.Drink;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.ExceedTypeIntException;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.StorageErrorException;","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.meal.Meal;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exercise.Exercise;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exercise.ExerciseIntensity;","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.user.User;","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.validator.IntegerValidation;","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.exception.ExceedTypeLongException;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.exception.FutureDateException;","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.IncompleteDeleteException;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.IncompleteDrinkException;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.IncompleteEditException;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.exception.IncompleteEditWaterException;","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.IncompleteExerciseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.IncompleteInfoException;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.IncompleteMealException;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.InvalidCommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.InvalidDateException;","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.exception.InvalidEditWaterException;","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.InvalidListIndexException;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.NegativeValueException;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.NonPositiveValueException;","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.UnregisteredDrinkException;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.UnregisteredExerciseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.UnregisteredMealException;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"import java.text.ParseException;","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"edwardhumi"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"edwardhumi"},"content":" * The Parser class is responsible for parsing user commands and delegating","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"edwardhumi"},"content":" * them to the appropriate classes for execution.","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"edwardhumi"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"edwardhumi"},"content":"public class Parser {","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"    public static final int MIN_INTEGER_VALUE \u003d -2147483648;","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"    public static final int MAX_INTEGER_VALUE \u003d 2147483647;","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"edwardhumi"},"content":"    public static String mealDescription;","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"edwardhumi"},"content":"    public static int mealSize;","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"edwardhumi"},"content":"    public static String drinkDescription;","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"edwardhumi"},"content":"    public static int drinkSize;","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"edwardhumi"},"content":"    public static int editMealIndex;","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"edwardhumi"},"content":"    public static int editMealSize;","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"edwardhumi"},"content":"    public static int editDrinkIndex;","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"edwardhumi"},"content":"    public static int editDrinkSize;","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"edwardhumi"},"content":"    public static int editWaterSize;","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"edwardhumi"},"content":"    public static String mealStorageDescription;","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"edwardhumi"},"content":"    public static int mealStorageSize;","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"    public static String mealStorageDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"edwardhumi"},"content":"    public static String drinkStorageDescription;","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"edwardhumi"},"content":"    public static int drinkStorageSize;","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"    public static String drinkStorageDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"BryanCastorius"},"content":"    public static String exerciseStorageDescription;","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"BryanCastorius"},"content":"    public static int exerciseStorageDuration;","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"BryanCastorius"},"content":"    public static ExerciseIntensity exerciseStorageIntensity;","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"BryanCastorius"},"content":"    public static String exerciseStorageDate;","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"jasonlienardi"},"content":"    public static String exerciseDescription;","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"jasonlienardi"},"content":"    public static int exerciseDuration;","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"edwardhumi"},"content":"    public static String mealNutrientDescription;","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"edwardhumi"},"content":"    public static int mealNutrientCalories;","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"edwardhumi"},"content":"    public static int mealNutrientCarbs;","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"edwardhumi"},"content":"    public static int mealNutrientProtein;","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"edwardhumi"},"content":"    public static int mealNutrientFat;","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"edwardhumi"},"content":"    public static int mealNutrientFiber;","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"edwardhumi"},"content":"    public static int mealNutrientSugar;","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"edwardhumi"},"content":"    public static String drinkNutrientDescription;","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"edwardhumi"},"content":"    public static int drinkNutrientCalories;","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"edwardhumi"},"content":"    public static int drinkNutrientCarbs;","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"edwardhumi"},"content":"    public static int drinkNutrientSugar;","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"edwardhumi"},"content":"    public static int drinkNutrientProtein;","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"edwardhumi"},"content":"    public static int drinkNutrientFat;","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"edwardhumi"},"content":"    public static String exerciseCaloriesDescription;","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"edwardhumi"},"content":"    public static int exerciseCaloriesHigh;","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"edwardhumi"},"content":"    public static int exerciseCaloriesMedium;","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"edwardhumi"},"content":"    public static int exerciseCaloriesLow;","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"edwardhumi"},"content":"    public static ExerciseIntensity exerciseIntensity;","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"edwardhumi"},"content":"    private User user;","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"edwardhumi"},"content":"     * Constructs a Parser object with the given User.","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"edwardhumi"},"content":"     * @param user The User object to interact with.","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"edwardhumi"},"content":"    public Parser(User user) {","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"edwardhumi"},"content":"        this.user \u003d user;","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"edwardhumi"},"content":"     * Parses the user command and executes the corresponding action.","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"claribelho"},"content":"    public void parseCommand(String command) {","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"claribelho"},"content":"        String trimmedCommand \u003d command.trim();","lastModifiedDate":"2024-04-12"},{"lineNumber":108,"author":{"gitId":"BryanCastorius"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"claribelho"},"content":"            if (trimmedCommand.equals(\"help\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":110,"author":{"gitId":"edwardhumi"},"content":"                handleHelp();","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.startsWith(\"eat\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":112,"author":{"gitId":"claribelho"},"content":"                user.myMealList.handleMeal(trimmedCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":113,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.startsWith(\"drink\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":114,"author":{"gitId":"claribelho"},"content":"                user.myDrinkList.handleDrink(trimmedCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":115,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.startsWith(\"exercise\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":116,"author":{"gitId":"claribelho"},"content":"                user.myExerciseList.handleExercise(trimmedCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":117,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.startsWith(\"newMeal\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":118,"author":{"gitId":"claribelho"},"content":"                user.myMealList.handleAddNewMealNutrient(trimmedCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":119,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.startsWith(\"newDrink\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":120,"author":{"gitId":"claribelho"},"content":"                user.myDrinkList.handleAddNewDrinkNutrient(trimmedCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":121,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.startsWith(\"newExercise\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":122,"author":{"gitId":"claribelho"},"content":"                user.myExerciseList.handleAddNewExerciseCalories(trimmedCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":123,"author":{"gitId":"claribelho"},"content":"            }else if (trimmedCommand.equals(\"allMeals\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":124,"author":{"gitId":"claribelho"},"content":"                Meal.listAvailableMeals();","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.equals(\"allDrinks\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":126,"author":{"gitId":"claribelho"},"content":"                Drink.listAvailableDrinks();","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.equals(\"allExercises\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":128,"author":{"gitId":"claribelho"},"content":"                Exercise.listAvailableExercises();","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.startsWith(\"infoMeal\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":130,"author":{"gitId":"claribelho"},"content":"                Meal.handleInfoMeal(trimmedCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":131,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.startsWith(\"infoDrink\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":132,"author":{"gitId":"claribelho"},"content":"                Drink.handleInfoDrink(trimmedCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":133,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.startsWith(\"infoExercise\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":134,"author":{"gitId":"claribelho"},"content":"                Exercise.handleInfoExercise(trimmedCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":135,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.equals(\"calories\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":136,"author":{"gitId":"jasonlienardi"},"content":"                user.handleViewCalories();","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.equals(\"caloriesBurnt\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":138,"author":{"gitId":"jasonlienardi"},"content":"                user.myExerciseList.handleCaloriesBurnt();","lastModifiedDate":"2024-04-10"},{"lineNumber":139,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.equals(\"carbs\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":140,"author":{"gitId":"jasonlienardi"},"content":"                user.handleViewCarbohydrates();","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.equals(\"protein\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":142,"author":{"gitId":"jasonlienardi"},"content":"                user.handleViewProteins();","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.equals(\"sugar\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":144,"author":{"gitId":"jasonlienardi"},"content":"                user.handleViewSugar();","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.equals(\"fat\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":146,"author":{"gitId":"jasonlienardi"},"content":"                user.handleViewFat();","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"BryanCastorius"},"content":"            } else if (trimmedCommand.equals(\"water\")) {","lastModifiedDate":"2024-04-14"},{"lineNumber":148,"author":{"gitId":"BryanCastorius"},"content":"                user.myDrinkList.handleViewWaterIntake();","lastModifiedDate":"2024-04-10"},{"lineNumber":149,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.equals(\"fiber\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":150,"author":{"gitId":"jasonlienardi"},"content":"                user.handleViewFiber();","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.equals(\"listMeals\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":152,"author":{"gitId":"claribelho"},"content":"                user.myMealList.handleListMeals();","lastModifiedDate":"2024-04-10"},{"lineNumber":153,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.equals(\"listMealsAll\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":154,"author":{"gitId":"claribelho"},"content":"                user.myMealList.handleListMealsAll();","lastModifiedDate":"2024-04-10"},{"lineNumber":155,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.startsWith(\"listMeals\") \u0026\u0026 trimmedCommand.contains(\"d/\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":156,"author":{"gitId":"claribelho"},"content":"                user.myMealList.handleListMealsDate(trimmedCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":157,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.equals(\"listDrinks\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":158,"author":{"gitId":"BryanCastorius"},"content":"                user.myDrinkList.handleListDrinks();","lastModifiedDate":"2024-04-10"},{"lineNumber":159,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.equals(\"listDrinksAll\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":160,"author":{"gitId":"BryanCastorius"},"content":"                user.myDrinkList.handleListDrinksAll();","lastModifiedDate":"2024-04-10"},{"lineNumber":161,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.startsWith(\"listDrinks\") \u0026\u0026 trimmedCommand.contains(\"d/\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":162,"author":{"gitId":"claribelho"},"content":"                user.myDrinkList.handleListDrinksDate(trimmedCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":163,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.equals(\"listExercises\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":164,"author":{"gitId":"jasonlienardi"},"content":"                user.myExerciseList.handleListExercises();","lastModifiedDate":"2024-04-10"},{"lineNumber":165,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.equals(\"listExercisesAll\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":166,"author":{"gitId":"jasonlienardi"},"content":"                user.myExerciseList.handleListExercisesAll();","lastModifiedDate":"2024-04-10"},{"lineNumber":167,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.startsWith(\"listExercises\") \u0026\u0026 trimmedCommand.contains(\"d/\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":168,"author":{"gitId":"jasonlienardi"},"content":"                user.myExerciseList.handleListExercisesDate(command);","lastModifiedDate":"2024-04-10"},{"lineNumber":169,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.equals(\"listEverything\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":170,"author":{"gitId":"claribelho"},"content":"                user.handleListEverything();","lastModifiedDate":"2024-03-30"},{"lineNumber":171,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.equals(\"listEverythingAll\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":172,"author":{"gitId":"edwardhumi"},"content":"                user.handleListEverythingAll();","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.startsWith(\"listEverything\") \u0026\u0026 trimmedCommand.contains(\"d/\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":174,"author":{"gitId":"claribelho"},"content":"                user.handleListEverythingDate(trimmedCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":175,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.startsWith(\"editMeal\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":176,"author":{"gitId":"claribelho"},"content":"                user.myMealList.handleEditMealServingSize(trimmedCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":177,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.startsWith(\"editDrink\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":178,"author":{"gitId":"claribelho"},"content":"                user.myDrinkList.handleEditDrinkServingSize(trimmedCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":179,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.startsWith(\"editWater\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":180,"author":{"gitId":"claribelho"},"content":"                user.myDrinkList.handleEditWaterIntake(trimmedCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":181,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.startsWith(\"deleteMeal\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":182,"author":{"gitId":"claribelho"},"content":"                user.myMealList.handleDeleteMeal(trimmedCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":183,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.startsWith(\"deleteDrink\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":184,"author":{"gitId":"claribelho"},"content":"                user.myDrinkList.handleDeleteDrink(trimmedCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":185,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.startsWith(\"deleteExercise\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":186,"author":{"gitId":"claribelho"},"content":"                user.myExerciseList.handleDeleteExercise(trimmedCommand);","lastModifiedDate":"2024-04-12"},{"lineNumber":187,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.equals(\"clear\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":188,"author":{"gitId":"jasonlienardi"},"content":"                user.handleClear();","lastModifiedDate":"2024-03-18"},{"lineNumber":189,"author":{"gitId":"claribelho"},"content":"            } else if (trimmedCommand.equals(\"recommend\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":190,"author":{"gitId":"BryanCastorius"},"content":"                user.handleRecommendations();","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"edwardhumi"},"content":"            } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":192,"author":{"gitId":"BryanCastorius"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2024-03-19"},{"lineNumber":193,"author":{"gitId":"BryanCastorius"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":194,"author":{"gitId":"BryanCastorius"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":195,"author":{"gitId":"BryanCastorius"},"content":"            System.out.println(\"Invalid command, type [help] to view all commands.\");","lastModifiedDate":"2024-03-19"},{"lineNumber":196,"author":{"gitId":"BryanCastorius"},"content":"        } catch (IncompleteDrinkException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":197,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println(\"Incomplete/Incorrect command, the format MUST be [drink d/DRINK s/VOLUME(ML)].\");","lastModifiedDate":"2024-04-12"},{"lineNumber":198,"author":{"gitId":"BryanCastorius"},"content":"        } catch (IncompleteMealException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":199,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Incomplete/Incorrect command, the format MUST be [eat m/MEAL s/SERVING_SIZE].\");","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"jasonlienardi"},"content":"        } catch (IncompleteExerciseException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":201,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Incomplete/Incorrect command, \" +","lastModifiedDate":"2024-04-02"},{"lineNumber":202,"author":{"gitId":"claribelho"},"content":"                    \"the format MUST be [exercise e/EXERCISE d/DURATION i/INTENSITY].\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"claribelho"},"content":"                    + \" \u003e DURATION should be in minutes and INTENSITY can only be HIGH/MEDIUM/LOW.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":204,"author":{"gitId":"BryanCastorius"},"content":"        } catch (UnregisteredDrinkException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":205,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Sorry that drink is not registered in the database. Please check the spelling and \" +","lastModifiedDate":"2024-03-30"},{"lineNumber":206,"author":{"gitId":"claribelho"},"content":"                    \"try again\");","lastModifiedDate":"2024-03-30"},{"lineNumber":207,"author":{"gitId":"BryanCastorius"},"content":"        } catch (UnregisteredMealException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":208,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Sorry that meal is not registered in the database. Please check the spelling and \" +","lastModifiedDate":"2024-03-30"},{"lineNumber":209,"author":{"gitId":"claribelho"},"content":"                    \"try again\");","lastModifiedDate":"2024-03-30"},{"lineNumber":210,"author":{"gitId":"claribelho"},"content":"        } catch (InvalidListIndexException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Sorry the index you provided is invalid, check [listMeals/listDrinks/listExercises] \" +","lastModifiedDate":"2024-03-30"},{"lineNumber":212,"author":{"gitId":"claribelho"},"content":"                    \"to view valid indexes.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":213,"author":{"gitId":"jasonlienardi"},"content":"        } catch (UnregisteredExerciseException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":214,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Sorry that exercise is not registered in the database. Please check the spelling and\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":215,"author":{"gitId":"claribelho"},"content":"                    \" try again\");","lastModifiedDate":"2024-03-30"},{"lineNumber":216,"author":{"gitId":"claribelho"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":217,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"An integer value is expected, try again please :)\\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":218,"author":{"gitId":"claribelho"},"content":"                    \"  \u003e Friendly reminder that integer values cannot exceed the range of \" + MIN_INTEGER_VALUE + \" to \"","lastModifiedDate":"2024-03-30"},{"lineNumber":219,"author":{"gitId":"claribelho"},"content":"                    + MAX_INTEGER_VALUE + \".\\n    Although, we highly doubt you will ever exceed this range\");","lastModifiedDate":"2024-03-30"},{"lineNumber":220,"author":{"gitId":"claribelho"},"content":"        } catch (IncompleteDeleteException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":221,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Please specify an index that you would like to delete. The format should be \" +","lastModifiedDate":"2024-03-30"},{"lineNumber":222,"author":{"gitId":"claribelho"},"content":"                    \"[deleteMeal/deleteDrink/deleteExercise INDEX]\");","lastModifiedDate":"2024-03-30"},{"lineNumber":223,"author":{"gitId":"claribelho"},"content":"        } catch (IncompleteEditException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":224,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Please specify an index that you would like to edit AND/OR the new serving size. \"+","lastModifiedDate":"2024-03-30"},{"lineNumber":225,"author":{"gitId":"claribelho"},"content":"                    \"Type [help] to view the commands format.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":226,"author":{"gitId":"claribelho"},"content":"        } catch (IncompleteInfoException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":227,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Please specify a meal/drink/exercise that you would like to view the info of. \" +","lastModifiedDate":"2024-03-30"},{"lineNumber":228,"author":{"gitId":"claribelho"},"content":"                    \"Type [help] to view the commands format.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":229,"author":{"gitId":"jasonlienardi"},"content":"        } catch (NonPositiveValueException e) {","lastModifiedDate":"2024-04-12"},{"lineNumber":230,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println(\"Your serving size/exercise duration must be greater than 0!\");","lastModifiedDate":"2024-04-12"},{"lineNumber":231,"author":{"gitId":"claribelho"},"content":"        } catch (NegativeValueException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":232,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println(\"Value cannot be negative!\");","lastModifiedDate":"2024-04-12"},{"lineNumber":233,"author":{"gitId":"edwardhumi"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":234,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"Invalid date provided. Your date must be in the format of dd-MM-yyyy.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":235,"author":{"gitId":"claribelho"},"content":"        } catch (FutureDateException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":236,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Specified date has not passed. Please try another date.\");","lastModifiedDate":"2024-04-10"},{"lineNumber":237,"author":{"gitId":"claribelho"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":238,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Specified date is invalid. Please try another date.\");","lastModifiedDate":"2024-04-10"},{"lineNumber":239,"author":{"gitId":"jasonlienardi"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":240,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-04-02"},{"lineNumber":241,"author":{"gitId":"claribelho"},"content":"        } catch (ExceedTypeLongException e) {","lastModifiedDate":"2024-04-12"},{"lineNumber":242,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"the count you would like to view has exceeded our data limits, are you sure you have \" +","lastModifiedDate":"2024-04-12"},{"lineNumber":243,"author":{"gitId":"claribelho"},"content":"                    \"consumed so much? Please do a quick check to update your listMeals and/or listDrinks before \" +","lastModifiedDate":"2024-04-12"},{"lineNumber":244,"author":{"gitId":"claribelho"},"content":"                    \"viewing again :\u0027)\");","lastModifiedDate":"2024-04-12"},{"lineNumber":245,"author":{"gitId":"BryanCastorius"},"content":"        } catch (InvalidEditWaterException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":246,"author":{"gitId":"BryanCastorius"},"content":"            System.out.println(\"Make sure to add water for the day before editing it.\");","lastModifiedDate":"2024-04-14"},{"lineNumber":247,"author":{"gitId":"BryanCastorius"},"content":"        } catch (IncompleteEditWaterException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":248,"author":{"gitId":"BryanCastorius"},"content":"            System.out.println(\"Please specify the new volume of water.\\n\" +","lastModifiedDate":"2024-04-14"},{"lineNumber":249,"author":{"gitId":"BryanCastorius"},"content":"                    \"The format should be [editWater s/NEW_VOLUME(ML)].\");","lastModifiedDate":"2024-04-14"},{"lineNumber":250,"author":{"gitId":"claribelho"},"content":"        } catch (ExceedTypeIntException e) {","lastModifiedDate":"2024-04-15"},{"lineNumber":251,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Adding this amount of water will exceed a total of 2147483647ml water today. Are \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":252,"author":{"gitId":"claribelho"},"content":"                    \"you sure you can drink so much water in a day? \\nI shall remove this amount for now. EditWater \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":253,"author":{"gitId":"claribelho"},"content":"                    \"if you deem fit :/\");","lastModifiedDate":"2024-04-15"},{"lineNumber":254,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":255,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":256,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":257,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":258,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":259,"author":{"gitId":"edwardhumi"},"content":"     * Displays a list of valid commands and their formats.","lastModifiedDate":"2024-04-02"},{"lineNumber":260,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":261,"author":{"gitId":"edwardhumi"},"content":"    public static void handleHelp() {","lastModifiedDate":"2024-03-18"},{"lineNumber":262,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Here\u0027s all the valid commands I recognise: \");","lastModifiedDate":"2024-04-12"},{"lineNumber":263,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println();","lastModifiedDate":"2024-04-12"},{"lineNumber":264,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Track a meal/drink/exercise: \");","lastModifiedDate":"2024-04-12"},{"lineNumber":265,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"- Track a meal eaten: eat m/MEAL s/SERVING_SIZE\");","lastModifiedDate":"2024-04-12"},{"lineNumber":266,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"- Track a drink: drink d/DRINK s/VOLUME(ML)\");","lastModifiedDate":"2024-04-12"},{"lineNumber":267,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"- Track an exercise: exercise e/EXERCISE d/DURATION(MINUTES) \" +","lastModifiedDate":"2024-04-01"},{"lineNumber":268,"author":{"gitId":"jasonlienardi"},"content":"                \"i/INTENSITY(HIGH, MEDIUM, LOW)\");","lastModifiedDate":"2024-03-27"},{"lineNumber":269,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println();","lastModifiedDate":"2024-04-12"},{"lineNumber":270,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"View available meals/drinks/exercises: \");","lastModifiedDate":"2024-04-12"},{"lineNumber":271,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- View all meals that you can input: allMeals\");","lastModifiedDate":"2024-04-02"},{"lineNumber":272,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- View all drinks that you can input: allDrinks\");","lastModifiedDate":"2024-04-02"},{"lineNumber":273,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- View all exercises that you can input: allExercises\");","lastModifiedDate":"2024-04-02"},{"lineNumber":274,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println();","lastModifiedDate":"2024-04-12"},{"lineNumber":275,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Find information about a meal/drink/exercise: \");","lastModifiedDate":"2024-04-12"},{"lineNumber":276,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- Find the information about a certain meal: infoMeal MEAL\");","lastModifiedDate":"2024-03-19"},{"lineNumber":277,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- Find the information about a certain drink: infoDrink DRINK\");","lastModifiedDate":"2024-03-19"},{"lineNumber":278,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"- Find the information about a certain exercise: infoExercise EXERCISE\");","lastModifiedDate":"2024-03-27"},{"lineNumber":279,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println();","lastModifiedDate":"2024-04-12"},{"lineNumber":280,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"View nutrients and calories: \");","lastModifiedDate":"2024-04-12"},{"lineNumber":281,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- View daily calories consumed: calories\");","lastModifiedDate":"2024-03-19"},{"lineNumber":282,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- View daily carbohydrates consumed: carbs\");","lastModifiedDate":"2024-03-19"},{"lineNumber":283,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- View daily proteins consumed: protein\");","lastModifiedDate":"2024-03-19"},{"lineNumber":284,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- View daily fat consumed: fat\");","lastModifiedDate":"2024-03-19"},{"lineNumber":285,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- View daily sugar consumed: sugar\");","lastModifiedDate":"2024-03-19"},{"lineNumber":286,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- View daily fiber consumed: fiber\");","lastModifiedDate":"2024-03-19"},{"lineNumber":287,"author":{"gitId":"BryanCastorius"},"content":"        System.out.println(\"- View daily water consumption: water\");","lastModifiedDate":"2024-04-14"},{"lineNumber":288,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"- View daily calories burnt: caloriesBurnt\");","lastModifiedDate":"2024-03-27"},{"lineNumber":289,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println();","lastModifiedDate":"2024-04-12"},{"lineNumber":290,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"List Commands: \");","lastModifiedDate":"2024-04-12"},{"lineNumber":291,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List today\u0027s meal intake: listMeals\");","lastModifiedDate":"2024-04-01"},{"lineNumber":292,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List today\u0027s drink intake: listDrinks\");","lastModifiedDate":"2024-04-01"},{"lineNumber":293,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List today\u0027s exercises done: listExercises\");","lastModifiedDate":"2024-04-01"},{"lineNumber":294,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List today\u0027s entire food intake and exercises: listEverything\");","lastModifiedDate":"2024-04-01"},{"lineNumber":295,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List all meal intake: listMealsAll\");","lastModifiedDate":"2024-04-01"},{"lineNumber":296,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List all drink intake: listDrinksAll\");","lastModifiedDate":"2024-04-01"},{"lineNumber":297,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List all exercises done: listExercisesAll\");","lastModifiedDate":"2024-04-01"},{"lineNumber":298,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List all food intake and exercises: listEverythingAll\");","lastModifiedDate":"2024-04-02"},{"lineNumber":299,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List meal intake for certain date: listMeals d/dd-MM-yyyy\");","lastModifiedDate":"2024-04-01"},{"lineNumber":300,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List drink intake for certain date: listDrinks d/dd-MM-yyyy\");","lastModifiedDate":"2024-04-01"},{"lineNumber":301,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List exercises done for certain date: listExercises d/dd-MM-yyyy\");","lastModifiedDate":"2024-04-01"},{"lineNumber":302,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"- List entire food intake and exercises for certain date: listEverything d/dd-MM-yyyy\");","lastModifiedDate":"2024-04-01"},{"lineNumber":303,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println();","lastModifiedDate":"2024-04-12"},{"lineNumber":304,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Edit Commands: \");","lastModifiedDate":"2024-04-12"},{"lineNumber":305,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- Edit an existing meal after inserted: editMeal INDEX s/NEW_SERVING_SIZE\");","lastModifiedDate":"2024-03-19"},{"lineNumber":306,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- Edit an existing drink after inserted: editDrink INDEX s/NEW_SERVING_SIZE\");","lastModifiedDate":"2024-03-19"},{"lineNumber":307,"author":{"gitId":"BryanCastorius"},"content":"        System.out.println(\"- Edit total water intake after inserted: editWater s/TOTAL_WATER_INTAKE\");","lastModifiedDate":"2024-03-27"},{"lineNumber":308,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println();","lastModifiedDate":"2024-04-12"},{"lineNumber":309,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Delete Commands: \");","lastModifiedDate":"2024-04-12"},{"lineNumber":310,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- Delete certain meal entry: deleteMeal INDEX\");","lastModifiedDate":"2024-03-19"},{"lineNumber":311,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- Delete certain drink entry: deleteDrink INDEX\");","lastModifiedDate":"2024-03-19"},{"lineNumber":312,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"- Delete certain exercise entry: deleteExercise INDEX\");","lastModifiedDate":"2024-04-01"},{"lineNumber":313,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println();","lastModifiedDate":"2024-04-12"},{"lineNumber":314,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Adding a meal/drink/exercises to available list: \");","lastModifiedDate":"2024-04-12"},{"lineNumber":315,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"- Add a new meal to available meals: newMeal MEAL_NAME,CALORIES,\" +","lastModifiedDate":"2024-04-02"},{"lineNumber":316,"author":{"gitId":"jasonlienardi"},"content":"                \"CARBS,PROTEIN,FAT,FIBER,SUGAR\");","lastModifiedDate":"2024-04-02"},{"lineNumber":317,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"- Add a new drink to available drinks: newDrink DRINK_NAME,CALORIES,\" +","lastModifiedDate":"2024-04-02"},{"lineNumber":318,"author":{"gitId":"jasonlienardi"},"content":"                \"CARBS,SUGAR,PROTEIN,FAT\");","lastModifiedDate":"2024-04-02"},{"lineNumber":319,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"- Add a new exercise to available exercises: newExercise EXERCISE_NAME,\" +","lastModifiedDate":"2024-04-10"},{"lineNumber":320,"author":{"gitId":"jasonlienardi"},"content":"                \"CALORIES_BURNT_HIGH,CALORIES_BURNT_MEDIUM,CALORIES_BURNT_LOW\");","lastModifiedDate":"2024-04-10"},{"lineNumber":321,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println();","lastModifiedDate":"2024-04-12"},{"lineNumber":322,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Miscellaneous: \");","lastModifiedDate":"2024-04-12"},{"lineNumber":323,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"- View daily calories and water intake recommendation: recommend\");","lastModifiedDate":"2024-04-12"},{"lineNumber":324,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- Clear all entries: clear\");","lastModifiedDate":"2024-03-19"},{"lineNumber":325,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"- Exit the app: exit \");","lastModifiedDate":"2024-03-19"},{"lineNumber":326,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":327,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":328,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":329,"author":{"gitId":"edwardhumi"},"content":"     * Parses a meal command string and extracts the meal description and size.","lastModifiedDate":"2024-04-02"},{"lineNumber":330,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":331,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":332,"author":{"gitId":"edwardhumi"},"content":"     * @throws IncompleteMealException If the meal command is incomplete.","lastModifiedDate":"2024-04-02"},{"lineNumber":333,"author":{"gitId":"edwardhumi"},"content":"     * @throws UnregisteredMealException If the meal is not registered in the database.","lastModifiedDate":"2024-04-02"},{"lineNumber":334,"author":{"gitId":"jasonlienardi"},"content":"     * @throws NonPositiveValueException If a negative value is encountered.","lastModifiedDate":"2024-04-12"},{"lineNumber":335,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":336,"author":{"gitId":"claribelho"},"content":"    public static void parseMeal(String command) throws IncompleteMealException, UnregisteredMealException,","lastModifiedDate":"2024-03-29"},{"lineNumber":337,"author":{"gitId":"jasonlienardi"},"content":"            NonPositiveValueException {","lastModifiedDate":"2024-04-12"},{"lineNumber":338,"author":{"gitId":"BryanCastorius"},"content":"        if (!command.contains(\"m/\") || !command.contains(\"s/\")) {","lastModifiedDate":"2024-03-19"},{"lineNumber":339,"author":{"gitId":"BryanCastorius"},"content":"            throw new IncompleteMealException();","lastModifiedDate":"2024-03-19"},{"lineNumber":340,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":341,"author":{"gitId":"edwardhumi"},"content":"        int descriptionIndex \u003d command.indexOf(\"m/\") + 2;","lastModifiedDate":"2024-03-17"},{"lineNumber":342,"author":{"gitId":"edwardhumi"},"content":"        int sizeIndex \u003d command.indexOf(\"s/\") + 2;","lastModifiedDate":"2024-03-17"},{"lineNumber":343,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":344,"author":{"gitId":"claribelho"},"content":"        if (sizeIndex \u003e\u003d command.length() || sizeIndex \u003c descriptionIndex) {","lastModifiedDate":"2024-04-02"},{"lineNumber":345,"author":{"gitId":"BryanCastorius"},"content":"            throw new IncompleteMealException();","lastModifiedDate":"2024-03-19"},{"lineNumber":346,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":347,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":348,"author":{"gitId":"edwardhumi"},"content":"        mealDescription \u003d command.substring(descriptionIndex, sizeIndex - 2).trim().toLowerCase();","lastModifiedDate":"2024-03-24"},{"lineNumber":349,"author":{"gitId":"BryanCastorius"},"content":"        if (mealDescription.isEmpty()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":350,"author":{"gitId":"BryanCastorius"},"content":"            throw new IncompleteMealException();","lastModifiedDate":"2024-03-19"},{"lineNumber":351,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":352,"author":{"gitId":"BryanCastorius"},"content":"        if (!Meal.getNutrientDetails().containsKey(mealDescription)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":353,"author":{"gitId":"BryanCastorius"},"content":"            throw new UnregisteredMealException();","lastModifiedDate":"2024-03-19"},{"lineNumber":354,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":355,"author":{"gitId":"edwardhumi"},"content":"        mealSize \u003d Integer.parseInt(command.substring(sizeIndex).trim());","lastModifiedDate":"2024-03-17"},{"lineNumber":356,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkIntegerGreaterThanZero(mealSize);","lastModifiedDate":"2024-03-30"},{"lineNumber":357,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":358,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":359,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":360,"author":{"gitId":"edwardhumi"},"content":"     * Parses the command for adding a drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":361,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":362,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":363,"author":{"gitId":"edwardhumi"},"content":"     * @throws IncompleteDrinkException If the drink command is incomplete.","lastModifiedDate":"2024-04-02"},{"lineNumber":364,"author":{"gitId":"edwardhumi"},"content":"     * @throws UnregisteredDrinkException If the drink is not registered in the database.","lastModifiedDate":"2024-04-02"},{"lineNumber":365,"author":{"gitId":"jasonlienardi"},"content":"     * @throws NonPositiveValueException If a negative value is encountered.","lastModifiedDate":"2024-04-12"},{"lineNumber":366,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":367,"author":{"gitId":"claribelho"},"content":"    public static void parseDrink(String command) throws IncompleteDrinkException, UnregisteredDrinkException,","lastModifiedDate":"2024-03-28"},{"lineNumber":368,"author":{"gitId":"jasonlienardi"},"content":"            NonPositiveValueException {","lastModifiedDate":"2024-04-12"},{"lineNumber":369,"author":{"gitId":"BryanCastorius"},"content":"        if (!command.contains(\"d/\") || !command.contains(\"s/\")) {","lastModifiedDate":"2024-03-19"},{"lineNumber":370,"author":{"gitId":"BryanCastorius"},"content":"            throw new IncompleteDrinkException();","lastModifiedDate":"2024-03-19"},{"lineNumber":371,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":372,"author":{"gitId":"edwardhumi"},"content":"        int descriptionIndex \u003d command.indexOf(\"d/\") + 2;","lastModifiedDate":"2024-03-17"},{"lineNumber":373,"author":{"gitId":"edwardhumi"},"content":"        int sizeIndex \u003d command.indexOf(\"s/\") + 2;","lastModifiedDate":"2024-03-17"},{"lineNumber":374,"author":{"gitId":"claribelho"},"content":"        if (sizeIndex \u003e\u003d command.length() || sizeIndex \u003c descriptionIndex) {","lastModifiedDate":"2024-04-02"},{"lineNumber":375,"author":{"gitId":"BryanCastorius"},"content":"            throw new IncompleteDrinkException();","lastModifiedDate":"2024-03-19"},{"lineNumber":376,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":377,"author":{"gitId":"edwardhumi"},"content":"        drinkDescription \u003d command.substring(descriptionIndex, sizeIndex - 2).trim().toLowerCase();","lastModifiedDate":"2024-03-24"},{"lineNumber":378,"author":{"gitId":"BryanCastorius"},"content":"        if (drinkDescription.isEmpty()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":379,"author":{"gitId":"BryanCastorius"},"content":"            throw new IncompleteDrinkException();","lastModifiedDate":"2024-03-19"},{"lineNumber":380,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":381,"author":{"gitId":"BryanCastorius"},"content":"        if (!Drink.getNutrientDetails().containsKey(drinkDescription) \u0026\u0026 !drinkDescription.equals(\"water\")) {","lastModifiedDate":"2024-03-26"},{"lineNumber":382,"author":{"gitId":"BryanCastorius"},"content":"            throw new UnregisteredDrinkException();","lastModifiedDate":"2024-03-19"},{"lineNumber":383,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":384,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":385,"author":{"gitId":"edwardhumi"},"content":"        drinkSize \u003d Integer.parseInt(command.substring(sizeIndex).trim());","lastModifiedDate":"2024-03-17"},{"lineNumber":386,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkIntegerGreaterThanZero(drinkSize);","lastModifiedDate":"2024-03-30"},{"lineNumber":387,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":388,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":389,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":390,"author":{"gitId":"edwardhumi"},"content":"     * Parses the command for obtaining information about a meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":391,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":392,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":393,"author":{"gitId":"edwardhumi"},"content":"     * @return The description of the meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":394,"author":{"gitId":"edwardhumi"},"content":"     * @throws UnregisteredMealException If the meal is not registered in the database.","lastModifiedDate":"2024-04-02"},{"lineNumber":395,"author":{"gitId":"edwardhumi"},"content":"     * @throws IncompleteInfoException If the command is incomplete.","lastModifiedDate":"2024-04-02"},{"lineNumber":396,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":397,"author":{"gitId":"claribelho"},"content":"    public static String parseInfoMeal(String command) throws UnregisteredMealException, IncompleteInfoException {","lastModifiedDate":"2024-03-30"},{"lineNumber":398,"author":{"gitId":"edwardhumi"},"content":"        int mealIndex \u003d 9;","lastModifiedDate":"2024-03-17"},{"lineNumber":399,"author":{"gitId":"claribelho"},"content":"        if (command.length() \u003c mealIndex + 1) {","lastModifiedDate":"2024-03-30"},{"lineNumber":400,"author":{"gitId":"claribelho"},"content":"            throw new IncompleteInfoException();","lastModifiedDate":"2024-03-30"},{"lineNumber":401,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":402,"author":{"gitId":"edwardhumi"},"content":"        String infoMealDescription \u003d command.substring(mealIndex).trim().toLowerCase();","lastModifiedDate":"2024-04-01"},{"lineNumber":403,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":404,"author":{"gitId":"BryanCastorius"},"content":"        if (!Meal.getNutrientDetails().containsKey(infoMealDescription)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":405,"author":{"gitId":"BryanCastorius"},"content":"            throw new UnregisteredMealException();","lastModifiedDate":"2024-03-19"},{"lineNumber":406,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":407,"author":{"gitId":"BryanCastorius"},"content":"        return infoMealDescription;","lastModifiedDate":"2024-03-19"},{"lineNumber":408,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":409,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":410,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":411,"author":{"gitId":"edwardhumi"},"content":"     * Parses the command for obtaining information about an exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":412,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":413,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":414,"author":{"gitId":"edwardhumi"},"content":"     * @return The description of the exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":415,"author":{"gitId":"edwardhumi"},"content":"     * @throws UnregisteredExerciseException If the exercise is not registered in the database.","lastModifiedDate":"2024-04-02"},{"lineNumber":416,"author":{"gitId":"edwardhumi"},"content":"     * @throws IncompleteInfoException If the command is incomplete.","lastModifiedDate":"2024-04-02"},{"lineNumber":417,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":418,"author":{"gitId":"claribelho"},"content":"    public static String parseInfoExercise(String command) throws UnregisteredExerciseException,","lastModifiedDate":"2024-03-30"},{"lineNumber":419,"author":{"gitId":"claribelho"},"content":"            IncompleteInfoException {","lastModifiedDate":"2024-03-30"},{"lineNumber":420,"author":{"gitId":"jasonlienardi"},"content":"        int exerciseIndex \u003d 13;","lastModifiedDate":"2024-03-27"},{"lineNumber":421,"author":{"gitId":"claribelho"},"content":"        if (command.length() \u003c exerciseIndex + 1) {","lastModifiedDate":"2024-03-30"},{"lineNumber":422,"author":{"gitId":"claribelho"},"content":"            throw new IncompleteInfoException();","lastModifiedDate":"2024-03-30"},{"lineNumber":423,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":424,"author":{"gitId":"edwardhumi"},"content":"        String infoExerciseDescription \u003d command.substring(exerciseIndex).trim().toLowerCase();","lastModifiedDate":"2024-04-01"},{"lineNumber":425,"author":{"gitId":"jasonlienardi"},"content":"        if (!Exercise.getExerciseDetails().containsKey(infoExerciseDescription)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":426,"author":{"gitId":"jasonlienardi"},"content":"            throw new UnregisteredExerciseException();","lastModifiedDate":"2024-03-27"},{"lineNumber":427,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":428,"author":{"gitId":"jasonlienardi"},"content":"        return infoExerciseDescription;","lastModifiedDate":"2024-03-27"},{"lineNumber":429,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":430,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":431,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":432,"author":{"gitId":"edwardhumi"},"content":"     * Parses the command for obtaining information about a drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":433,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":434,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":435,"author":{"gitId":"edwardhumi"},"content":"     * @return The description of the drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":436,"author":{"gitId":"edwardhumi"},"content":"     * @throws UnregisteredDrinkException If the drink is not registered in the database.","lastModifiedDate":"2024-04-02"},{"lineNumber":437,"author":{"gitId":"edwardhumi"},"content":"     * @throws IncompleteInfoException If the command is incomplete.","lastModifiedDate":"2024-04-02"},{"lineNumber":438,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":439,"author":{"gitId":"claribelho"},"content":"    public static String parseInfoDrink(String command) throws UnregisteredDrinkException, IncompleteInfoException {","lastModifiedDate":"2024-03-30"},{"lineNumber":440,"author":{"gitId":"edwardhumi"},"content":"        int drinkIndex \u003d 10;","lastModifiedDate":"2024-03-17"},{"lineNumber":441,"author":{"gitId":"claribelho"},"content":"        if (command.length() \u003c drinkIndex + 1) {","lastModifiedDate":"2024-03-30"},{"lineNumber":442,"author":{"gitId":"claribelho"},"content":"            throw new IncompleteInfoException();","lastModifiedDate":"2024-03-30"},{"lineNumber":443,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":444,"author":{"gitId":"edwardhumi"},"content":"        String infoDrinkDescription \u003d command.substring(drinkIndex).trim().toLowerCase();","lastModifiedDate":"2024-04-01"},{"lineNumber":445,"author":{"gitId":"edwardhumi"},"content":"        if (!Drink.getNutrientDetails().containsKey(infoDrinkDescription)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":446,"author":{"gitId":"BryanCastorius"},"content":"            throw new UnregisteredDrinkException();","lastModifiedDate":"2024-03-19"},{"lineNumber":447,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":448,"author":{"gitId":"claribelho"},"content":"        return infoDrinkDescription;","lastModifiedDate":"2024-03-19"},{"lineNumber":449,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":450,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":451,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":452,"author":{"gitId":"edwardhumi"},"content":"     * Parses the command for editing a meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":453,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":454,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":455,"author":{"gitId":"jasonlienardi"},"content":"     * @throws NonPositiveValueException If a negative value is encountered.","lastModifiedDate":"2024-04-12"},{"lineNumber":456,"author":{"gitId":"edwardhumi"},"content":"     * @throws IncompleteEditException If the command is incomplete.","lastModifiedDate":"2024-04-02"},{"lineNumber":457,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":458,"author":{"gitId":"jasonlienardi"},"content":"    public static void parseEditMeal(String command) throws NonPositiveValueException, IncompleteEditException {","lastModifiedDate":"2024-04-12"},{"lineNumber":459,"author":{"gitId":"claribelho"},"content":"        int mealSizePosition \u003d command.indexOf(\"s/\");","lastModifiedDate":"2024-03-30"},{"lineNumber":460,"author":{"gitId":"claribelho"},"content":"        if (mealSizePosition \u003c\u003d 9) {","lastModifiedDate":"2024-03-30"},{"lineNumber":461,"author":{"gitId":"claribelho"},"content":"            throw new IncompleteEditException();","lastModifiedDate":"2024-03-30"},{"lineNumber":462,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":463,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":464,"author":{"gitId":"claribelho"},"content":"        editMealIndex \u003d Integer.parseInt(command.substring(9, mealSizePosition).trim()) - 1;","lastModifiedDate":"2024-03-30"},{"lineNumber":465,"author":{"gitId":"claribelho"},"content":"        editMealSize \u003d Integer.parseInt(command.substring(mealSizePosition + 2).trim());","lastModifiedDate":"2024-03-30"},{"lineNumber":466,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkIntegerGreaterThanZero(editMealSize);","lastModifiedDate":"2024-03-30"},{"lineNumber":467,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":468,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":469,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":470,"author":{"gitId":"edwardhumi"},"content":"     * Parses the command for editing a drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":471,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":472,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":473,"author":{"gitId":"jasonlienardi"},"content":"     * @throws NonPositiveValueException If a negative value is encountered.","lastModifiedDate":"2024-04-12"},{"lineNumber":474,"author":{"gitId":"edwardhumi"},"content":"     * @throws IncompleteEditException If the command is incomplete.","lastModifiedDate":"2024-04-02"},{"lineNumber":475,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":476,"author":{"gitId":"jasonlienardi"},"content":"    public static void parseEditDrink(String command) throws NonPositiveValueException, IncompleteEditException {","lastModifiedDate":"2024-04-12"},{"lineNumber":477,"author":{"gitId":"claribelho"},"content":"        int drinkSizePosition \u003d command.indexOf(\"s/\");","lastModifiedDate":"2024-03-30"},{"lineNumber":478,"author":{"gitId":"claribelho"},"content":"        if (drinkSizePosition \u003c\u003d 10) {","lastModifiedDate":"2024-03-30"},{"lineNumber":479,"author":{"gitId":"claribelho"},"content":"            throw new IncompleteEditException();","lastModifiedDate":"2024-03-30"},{"lineNumber":480,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":481,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":482,"author":{"gitId":"claribelho"},"content":"        editDrinkIndex \u003d Integer.parseInt(command.substring(10, drinkSizePosition).trim()) - 1;","lastModifiedDate":"2024-03-30"},{"lineNumber":483,"author":{"gitId":"claribelho"},"content":"        editDrinkSize \u003d Integer.parseInt(command.substring(drinkSizePosition + 2).trim());","lastModifiedDate":"2024-03-30"},{"lineNumber":484,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkIntegerGreaterThanZero(editDrinkSize);","lastModifiedDate":"2024-03-30"},{"lineNumber":485,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":486,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":487,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":488,"author":{"gitId":"edwardhumi"},"content":"     * Parses the command for editing water intake.","lastModifiedDate":"2024-04-02"},{"lineNumber":489,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":490,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":491,"author":{"gitId":"jasonlienardi"},"content":"     * @throws NonPositiveValueException If a negative value is encountered.","lastModifiedDate":"2024-04-12"},{"lineNumber":492,"author":{"gitId":"edwardhumi"},"content":"     * @throws IncompleteEditException If the command is incomplete.","lastModifiedDate":"2024-04-02"},{"lineNumber":493,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":494,"author":{"gitId":"BryanCastorius"},"content":"    public static void parseEditWater(String command) throws NonPositiveValueException, IncompleteEditWaterException {","lastModifiedDate":"2024-04-14"},{"lineNumber":495,"author":{"gitId":"edwardhumi"},"content":"        int waterSizePosition \u003d command.indexOf(\"s/\") + 2;","lastModifiedDate":"2024-03-17"},{"lineNumber":496,"author":{"gitId":"claribelho"},"content":"        if (waterSizePosition \u003c\u003d 1) { //-1 + 2","lastModifiedDate":"2024-03-30"},{"lineNumber":497,"author":{"gitId":"BryanCastorius"},"content":"            throw new IncompleteEditWaterException();","lastModifiedDate":"2024-04-14"},{"lineNumber":498,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":499,"author":{"gitId":"edwardhumi"},"content":"        editWaterSize \u003d Integer.parseInt(command.substring(waterSizePosition).trim());","lastModifiedDate":"2024-03-17"},{"lineNumber":500,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkIntegerGreaterThanZero(editWaterSize);","lastModifiedDate":"2024-03-30"},{"lineNumber":501,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":502,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":503,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":504,"author":{"gitId":"edwardhumi"},"content":"     * Parses the data for storing meal information.","lastModifiedDate":"2024-04-02"},{"lineNumber":505,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":506,"author":{"gitId":"edwardhumi"},"content":"     * @param data The data string to be parsed.","lastModifiedDate":"2024-04-02"},{"lineNumber":507,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":508,"author":{"gitId":"claribelho"},"content":"    public static void parseMealStorage(String data) throws StorageErrorException, NonPositiveValueException,","lastModifiedDate":"2024-04-15"},{"lineNumber":509,"author":{"gitId":"claribelho"},"content":"            NumberFormatException {","lastModifiedDate":"2024-04-15"},{"lineNumber":510,"author":{"gitId":"edwardhumi"},"content":"        String delimiter \u003d \",\";","lastModifiedDate":"2024-03-24"},{"lineNumber":511,"author":{"gitId":"edwardhumi"},"content":"        String[] arrayOfMealData \u003d data.split(delimiter);","lastModifiedDate":"2024-03-24"},{"lineNumber":512,"author":{"gitId":"claribelho"},"content":"        if (arrayOfMealData.length !\u003d 3) {","lastModifiedDate":"2024-04-15"},{"lineNumber":513,"author":{"gitId":"claribelho"},"content":"            throw new StorageErrorException();","lastModifiedDate":"2024-04-15"},{"lineNumber":514,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-15"},{"lineNumber":515,"author":{"gitId":"edwardhumi"},"content":"        mealStorageDescription \u003d arrayOfMealData[0];","lastModifiedDate":"2024-03-24"},{"lineNumber":516,"author":{"gitId":"edwardhumi"},"content":"        mealStorageSize \u003d Integer.parseInt(arrayOfMealData[1]);","lastModifiedDate":"2024-03-24"},{"lineNumber":517,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkIntegerGreaterThanZero(mealStorageSize);","lastModifiedDate":"2024-04-15"},{"lineNumber":518,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":519,"author":{"gitId":"edwardhumi"},"content":"        mealStorageDate \u003d arrayOfMealData[2];","lastModifiedDate":"2024-03-31"},{"lineNumber":520,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":521,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":522,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":523,"author":{"gitId":"edwardhumi"},"content":"     * Parses the data for storing drink information.","lastModifiedDate":"2024-04-02"},{"lineNumber":524,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":525,"author":{"gitId":"edwardhumi"},"content":"     * @param data The data string to be parsed.","lastModifiedDate":"2024-04-02"},{"lineNumber":526,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":527,"author":{"gitId":"claribelho"},"content":"    public static void parseDrinkStorage(String data) throws StorageErrorException, NonPositiveValueException,","lastModifiedDate":"2024-04-15"},{"lineNumber":528,"author":{"gitId":"claribelho"},"content":"            NumberFormatException {","lastModifiedDate":"2024-04-15"},{"lineNumber":529,"author":{"gitId":"edwardhumi"},"content":"        String delimiter \u003d \",\";","lastModifiedDate":"2024-03-24"},{"lineNumber":530,"author":{"gitId":"edwardhumi"},"content":"        String[] arrayOfDrinkData \u003d data.split(delimiter);","lastModifiedDate":"2024-03-24"},{"lineNumber":531,"author":{"gitId":"claribelho"},"content":"        if (arrayOfDrinkData.length !\u003d 3) {","lastModifiedDate":"2024-04-15"},{"lineNumber":532,"author":{"gitId":"claribelho"},"content":"            throw new StorageErrorException();","lastModifiedDate":"2024-04-15"},{"lineNumber":533,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-15"},{"lineNumber":534,"author":{"gitId":"edwardhumi"},"content":"        drinkStorageDescription \u003d arrayOfDrinkData[0];","lastModifiedDate":"2024-03-24"},{"lineNumber":535,"author":{"gitId":"edwardhumi"},"content":"        drinkStorageSize \u003d Integer.parseInt(arrayOfDrinkData[1]);","lastModifiedDate":"2024-03-24"},{"lineNumber":536,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkIntegerGreaterThanZero(drinkStorageSize);","lastModifiedDate":"2024-04-15"},{"lineNumber":537,"author":{"gitId":"edwardhumi"},"content":"        drinkStorageDate \u003d arrayOfDrinkData[2];","lastModifiedDate":"2024-03-31"},{"lineNumber":538,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":539,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":540,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":541,"author":{"gitId":"edwardhumi"},"content":"     * Parses the data for storing exercise information.","lastModifiedDate":"2024-04-02"},{"lineNumber":542,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":543,"author":{"gitId":"edwardhumi"},"content":"     * @param data The data string to be parsed.","lastModifiedDate":"2024-04-02"},{"lineNumber":544,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":545,"author":{"gitId":"claribelho"},"content":"    public static void parseExerciseStorage(String data) throws NonPositiveValueException, StorageErrorException,","lastModifiedDate":"2024-04-15"},{"lineNumber":546,"author":{"gitId":"claribelho"},"content":"            NumberFormatException {","lastModifiedDate":"2024-04-15"},{"lineNumber":547,"author":{"gitId":"BryanCastorius"},"content":"        String delimiter \u003d \",\";","lastModifiedDate":"2024-04-01"},{"lineNumber":548,"author":{"gitId":"BryanCastorius"},"content":"        String[] arrayOfExerciseData \u003d data.split(delimiter);","lastModifiedDate":"2024-04-01"},{"lineNumber":549,"author":{"gitId":"claribelho"},"content":"        if (arrayOfExerciseData.length !\u003d 4) {","lastModifiedDate":"2024-04-15"},{"lineNumber":550,"author":{"gitId":"claribelho"},"content":"            throw new StorageErrorException();","lastModifiedDate":"2024-04-15"},{"lineNumber":551,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-15"},{"lineNumber":552,"author":{"gitId":"BryanCastorius"},"content":"        exerciseStorageDescription \u003d arrayOfExerciseData[0];","lastModifiedDate":"2024-04-01"},{"lineNumber":553,"author":{"gitId":"BryanCastorius"},"content":"        exerciseStorageDuration \u003d Integer.parseInt(arrayOfExerciseData[1]);","lastModifiedDate":"2024-04-01"},{"lineNumber":554,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkIntegerGreaterThanZero(exerciseStorageDuration);","lastModifiedDate":"2024-04-15"},{"lineNumber":555,"author":{"gitId":"BryanCastorius"},"content":"        exerciseStorageIntensity \u003d ExerciseIntensity.valueOf(arrayOfExerciseData[2]);","lastModifiedDate":"2024-04-01"},{"lineNumber":556,"author":{"gitId":"BryanCastorius"},"content":"        exerciseStorageDate \u003d arrayOfExerciseData[3];","lastModifiedDate":"2024-04-01"},{"lineNumber":557,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":558,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":559,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":560,"author":{"gitId":"edwardhumi"},"content":"     * Parses the command for adding an exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":561,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":562,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":563,"author":{"gitId":"edwardhumi"},"content":"     * @throws IncompleteExerciseException If the exercise command is incomplete.","lastModifiedDate":"2024-04-02"},{"lineNumber":564,"author":{"gitId":"edwardhumi"},"content":"     * @throws UnregisteredExerciseException If the exercise is not registered in the database.","lastModifiedDate":"2024-04-02"},{"lineNumber":565,"author":{"gitId":"jasonlienardi"},"content":"     * @throws NonPositiveValueException If a negative value is encountered.","lastModifiedDate":"2024-04-12"},{"lineNumber":566,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":567,"author":{"gitId":"claribelho"},"content":"    public static void parseExercise(String command) throws IncompleteExerciseException, UnregisteredExerciseException,","lastModifiedDate":"2024-03-30"},{"lineNumber":568,"author":{"gitId":"jasonlienardi"},"content":"            NonPositiveValueException {","lastModifiedDate":"2024-04-12"},{"lineNumber":569,"author":{"gitId":"jasonlienardi"},"content":"        if (!command.contains(\"e/\") || !command.contains(\"d/\") || !command.contains(\"i/\")) {","lastModifiedDate":"2024-03-27"},{"lineNumber":570,"author":{"gitId":"jasonlienardi"},"content":"            throw new IncompleteExerciseException();","lastModifiedDate":"2024-03-27"},{"lineNumber":571,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":572,"author":{"gitId":"jasonlienardi"},"content":"        int descriptionIndex \u003d command.indexOf(\"e/\") + 2;","lastModifiedDate":"2024-03-27"},{"lineNumber":573,"author":{"gitId":"jasonlienardi"},"content":"        int durationIndex \u003d command.indexOf(\"d/\") + 2;","lastModifiedDate":"2024-03-27"},{"lineNumber":574,"author":{"gitId":"jasonlienardi"},"content":"        int intensityIndex \u003d command.indexOf(\"i/\") + 2;","lastModifiedDate":"2024-03-27"},{"lineNumber":575,"author":{"gitId":"claribelho"},"content":"        if (intensityIndex \u003e\u003d command.length() || durationIndex \u003c descriptionIndex || intensityIndex \u003c descriptionIndex","lastModifiedDate":"2024-04-02"},{"lineNumber":576,"author":{"gitId":"claribelho"},"content":"                || intensityIndex \u003c durationIndex) {","lastModifiedDate":"2024-04-02"},{"lineNumber":577,"author":{"gitId":"jasonlienardi"},"content":"            throw new IncompleteExerciseException();","lastModifiedDate":"2024-03-27"},{"lineNumber":578,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":579,"author":{"gitId":"jasonlienardi"},"content":"        exerciseDescription \u003d command.substring(descriptionIndex, durationIndex - 2).trim().toLowerCase();","lastModifiedDate":"2024-03-27"},{"lineNumber":580,"author":{"gitId":"jasonlienardi"},"content":"        if (exerciseDescription.isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":581,"author":{"gitId":"jasonlienardi"},"content":"            throw new IncompleteExerciseException();","lastModifiedDate":"2024-03-27"},{"lineNumber":582,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":583,"author":{"gitId":"jasonlienardi"},"content":"        if (!Exercise.getExerciseDetails().containsKey(exerciseDescription)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":584,"author":{"gitId":"jasonlienardi"},"content":"            throw new UnregisteredExerciseException();","lastModifiedDate":"2024-03-27"},{"lineNumber":585,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":586,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":587,"author":{"gitId":"jasonlienardi"},"content":"        exerciseDuration \u003d Integer.parseInt(command.substring(durationIndex, intensityIndex - 2).trim());","lastModifiedDate":"2024-03-27"},{"lineNumber":588,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkIntegerGreaterThanZero(exerciseDuration);","lastModifiedDate":"2024-03-30"},{"lineNumber":589,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":590,"author":{"gitId":"jasonlienardi"},"content":"        String intensityString \u003d command.substring(intensityIndex).trim().toUpperCase();","lastModifiedDate":"2024-03-27"},{"lineNumber":591,"author":{"gitId":"jasonlienardi"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":592,"author":{"gitId":"jasonlienardi"},"content":"            exerciseIntensity \u003d ExerciseIntensity.valueOf(intensityString);","lastModifiedDate":"2024-03-27"},{"lineNumber":593,"author":{"gitId":"jasonlienardi"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":594,"author":{"gitId":"jasonlienardi"},"content":"            throw new IncompleteExerciseException(); // Invalid intensity","lastModifiedDate":"2024-03-27"},{"lineNumber":595,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":596,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":597,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":598,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":599,"author":{"gitId":"edwardhumi"},"content":"     * Parses the nutrient information for a meal.","lastModifiedDate":"2024-04-02"},{"lineNumber":600,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":601,"author":{"gitId":"edwardhumi"},"content":"     * @param data The nutrient data string to be parsed.","lastModifiedDate":"2024-04-02"},{"lineNumber":602,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":603,"author":{"gitId":"jasonlienardi"},"content":"    public static void parseMealNutrient(String data) throws  IllegalArgumentException, NegativeValueException {","lastModifiedDate":"2024-04-02"},{"lineNumber":604,"author":{"gitId":"edwardhumi"},"content":"        String delimiter \u003d \",\";","lastModifiedDate":"2024-03-31"},{"lineNumber":605,"author":{"gitId":"edwardhumi"},"content":"        String[] arrayOfMealNutrient \u003d data.split(delimiter);","lastModifiedDate":"2024-03-31"},{"lineNumber":606,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":607,"author":{"gitId":"jasonlienardi"},"content":"        for (int i \u003d 0; i \u003c arrayOfMealNutrient.length; i++) {","lastModifiedDate":"2024-04-12"},{"lineNumber":608,"author":{"gitId":"jasonlienardi"},"content":"            arrayOfMealNutrient[i] \u003d arrayOfMealNutrient[i].trim();","lastModifiedDate":"2024-04-12"},{"lineNumber":609,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":610,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":611,"author":{"gitId":"jasonlienardi"},"content":"        if (arrayOfMealNutrient.length !\u003d 7) {","lastModifiedDate":"2024-04-02"},{"lineNumber":612,"author":{"gitId":"jasonlienardi"},"content":"            throw new IllegalArgumentException(\"Invalid number of arguments provided. Expected 7, got \"","lastModifiedDate":"2024-04-02"},{"lineNumber":613,"author":{"gitId":"jasonlienardi"},"content":"                    + arrayOfMealNutrient.length);","lastModifiedDate":"2024-04-02"},{"lineNumber":614,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":615,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":616,"author":{"gitId":"jasonlienardi"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":617,"author":{"gitId":"edwardhumi"},"content":"            mealNutrientDescription \u003d arrayOfMealNutrient[0].trim().toLowerCase();","lastModifiedDate":"2024-03-31"},{"lineNumber":618,"author":{"gitId":"edwardhumi"},"content":"            mealNutrientCalories \u003d Integer.parseInt(arrayOfMealNutrient[1]);","lastModifiedDate":"2024-03-31"},{"lineNumber":619,"author":{"gitId":"edwardhumi"},"content":"            mealNutrientCarbs \u003d Integer.parseInt(arrayOfMealNutrient[2]);","lastModifiedDate":"2024-03-31"},{"lineNumber":620,"author":{"gitId":"edwardhumi"},"content":"            mealNutrientProtein \u003d Integer.parseInt(arrayOfMealNutrient[3]);","lastModifiedDate":"2024-03-31"},{"lineNumber":621,"author":{"gitId":"edwardhumi"},"content":"            mealNutrientFat \u003d Integer.parseInt(arrayOfMealNutrient[4]);","lastModifiedDate":"2024-03-31"},{"lineNumber":622,"author":{"gitId":"edwardhumi"},"content":"            mealNutrientFiber \u003d Integer.parseInt(arrayOfMealNutrient[5]);","lastModifiedDate":"2024-03-31"},{"lineNumber":623,"author":{"gitId":"edwardhumi"},"content":"            mealNutrientSugar \u003d Integer.parseInt(arrayOfMealNutrient[6]);","lastModifiedDate":"2024-03-31"},{"lineNumber":624,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":625,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(mealNutrientCalories);","lastModifiedDate":"2024-04-02"},{"lineNumber":626,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(mealNutrientCarbs);","lastModifiedDate":"2024-04-02"},{"lineNumber":627,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(mealNutrientProtein);","lastModifiedDate":"2024-04-02"},{"lineNumber":628,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(mealNutrientFat);","lastModifiedDate":"2024-04-02"},{"lineNumber":629,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(mealNutrientFiber);","lastModifiedDate":"2024-04-02"},{"lineNumber":630,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(mealNutrientSugar);","lastModifiedDate":"2024-04-02"},{"lineNumber":631,"author":{"gitId":"jasonlienardi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":632,"author":{"gitId":"jasonlienardi"},"content":"            throw new IllegalArgumentException(\"Invalid numeric format, please input an integer\");","lastModifiedDate":"2024-04-02"},{"lineNumber":633,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":634,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":635,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":636,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":637,"author":{"gitId":"edwardhumi"},"content":"     * Parses the nutrient information for a drink.","lastModifiedDate":"2024-04-02"},{"lineNumber":638,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":639,"author":{"gitId":"edwardhumi"},"content":"     * @param data The nutrient data string to be parsed.","lastModifiedDate":"2024-04-02"},{"lineNumber":640,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":641,"author":{"gitId":"jasonlienardi"},"content":"    public static void parseDrinkNutrient(String data) throws  IllegalArgumentException, NegativeValueException {","lastModifiedDate":"2024-04-02"},{"lineNumber":642,"author":{"gitId":"edwardhumi"},"content":"        String delimiter \u003d \",\";","lastModifiedDate":"2024-03-31"},{"lineNumber":643,"author":{"gitId":"edwardhumi"},"content":"        String[] arrayOfDrinkNutrient \u003d data.split(delimiter);","lastModifiedDate":"2024-03-31"},{"lineNumber":644,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":645,"author":{"gitId":"jasonlienardi"},"content":"        for (int i \u003d 0; i \u003c arrayOfDrinkNutrient.length; i++) {","lastModifiedDate":"2024-04-12"},{"lineNumber":646,"author":{"gitId":"jasonlienardi"},"content":"            arrayOfDrinkNutrient[i] \u003d arrayOfDrinkNutrient[i].trim();","lastModifiedDate":"2024-04-12"},{"lineNumber":647,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":648,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":649,"author":{"gitId":"jasonlienardi"},"content":"        if (arrayOfDrinkNutrient.length !\u003d 6) {","lastModifiedDate":"2024-04-02"},{"lineNumber":650,"author":{"gitId":"jasonlienardi"},"content":"            throw new IllegalArgumentException(\"Invalid number of arguments provided. Expected 6, got \"","lastModifiedDate":"2024-04-02"},{"lineNumber":651,"author":{"gitId":"jasonlienardi"},"content":"                    + arrayOfDrinkNutrient.length);","lastModifiedDate":"2024-04-02"},{"lineNumber":652,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":653,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":654,"author":{"gitId":"jasonlienardi"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":655,"author":{"gitId":"edwardhumi"},"content":"            drinkNutrientDescription \u003d arrayOfDrinkNutrient[0].trim().toLowerCase();","lastModifiedDate":"2024-03-31"},{"lineNumber":656,"author":{"gitId":"edwardhumi"},"content":"            drinkNutrientCalories \u003d Integer.parseInt(arrayOfDrinkNutrient[1]);","lastModifiedDate":"2024-03-31"},{"lineNumber":657,"author":{"gitId":"edwardhumi"},"content":"            drinkNutrientCarbs \u003d Integer.parseInt(arrayOfDrinkNutrient[2]);","lastModifiedDate":"2024-03-31"},{"lineNumber":658,"author":{"gitId":"edwardhumi"},"content":"            drinkNutrientSugar \u003d Integer.parseInt(arrayOfDrinkNutrient[3]);","lastModifiedDate":"2024-03-31"},{"lineNumber":659,"author":{"gitId":"edwardhumi"},"content":"            drinkNutrientProtein \u003d Integer.parseInt(arrayOfDrinkNutrient[4]);","lastModifiedDate":"2024-03-31"},{"lineNumber":660,"author":{"gitId":"edwardhumi"},"content":"            drinkNutrientFat \u003d Integer.parseInt(arrayOfDrinkNutrient[5]);","lastModifiedDate":"2024-03-31"},{"lineNumber":661,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":662,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(drinkNutrientCalories);","lastModifiedDate":"2024-04-02"},{"lineNumber":663,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(drinkNutrientCarbs);","lastModifiedDate":"2024-04-02"},{"lineNumber":664,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(drinkNutrientSugar);","lastModifiedDate":"2024-04-02"},{"lineNumber":665,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(drinkNutrientProtein);","lastModifiedDate":"2024-04-02"},{"lineNumber":666,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterOrEqualThanZero(drinkNutrientFat);","lastModifiedDate":"2024-04-02"},{"lineNumber":667,"author":{"gitId":"jasonlienardi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":668,"author":{"gitId":"jasonlienardi"},"content":"            throw new IllegalArgumentException(\"Invalid numeric format, please input an integer\");","lastModifiedDate":"2024-04-02"},{"lineNumber":669,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":670,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":671,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":672,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":673,"author":{"gitId":"edwardhumi"},"content":"     * Parses the calorie information for an exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":674,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":675,"author":{"gitId":"edwardhumi"},"content":"     * @param data The calorie data string to be parsed.","lastModifiedDate":"2024-04-02"},{"lineNumber":676,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":677,"author":{"gitId":"jasonlienardi"},"content":"    public static void parseExerciseCalories(String data) throws IllegalArgumentException, NonPositiveValueException {","lastModifiedDate":"2024-04-12"},{"lineNumber":678,"author":{"gitId":"edwardhumi"},"content":"        String delimiter \u003d \",\";","lastModifiedDate":"2024-04-01"},{"lineNumber":679,"author":{"gitId":"edwardhumi"},"content":"        String[] arrayOfExerciseCalories \u003d data.split(delimiter);","lastModifiedDate":"2024-04-01"},{"lineNumber":680,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":681,"author":{"gitId":"jasonlienardi"},"content":"        for (int i \u003d 0; i \u003c arrayOfExerciseCalories.length; i++) {","lastModifiedDate":"2024-04-12"},{"lineNumber":682,"author":{"gitId":"jasonlienardi"},"content":"            arrayOfExerciseCalories[i] \u003d arrayOfExerciseCalories[i].trim();","lastModifiedDate":"2024-04-12"},{"lineNumber":683,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":684,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":685,"author":{"gitId":"jasonlienardi"},"content":"        if (arrayOfExerciseCalories.length !\u003d 4) {","lastModifiedDate":"2024-04-02"},{"lineNumber":686,"author":{"gitId":"jasonlienardi"},"content":"            throw new IllegalArgumentException(\"Invalid number of arguments provided. Expected 4, got \"","lastModifiedDate":"2024-04-02"},{"lineNumber":687,"author":{"gitId":"jasonlienardi"},"content":"                    + arrayOfExerciseCalories.length);","lastModifiedDate":"2024-04-02"},{"lineNumber":688,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":689,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":690,"author":{"gitId":"jasonlienardi"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":691,"author":{"gitId":"edwardhumi"},"content":"            exerciseCaloriesDescription \u003d arrayOfExerciseCalories[0].trim().toLowerCase();","lastModifiedDate":"2024-04-01"},{"lineNumber":692,"author":{"gitId":"edwardhumi"},"content":"            exerciseCaloriesHigh \u003d Integer.parseInt(arrayOfExerciseCalories[1]);","lastModifiedDate":"2024-04-01"},{"lineNumber":693,"author":{"gitId":"edwardhumi"},"content":"            exerciseCaloriesMedium \u003d Integer.parseInt(arrayOfExerciseCalories[2]);","lastModifiedDate":"2024-04-01"},{"lineNumber":694,"author":{"gitId":"edwardhumi"},"content":"            exerciseCaloriesLow \u003d Integer.parseInt(arrayOfExerciseCalories[3]);","lastModifiedDate":"2024-04-01"},{"lineNumber":695,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":696,"author":{"gitId":"jasonlienardi"},"content":"            if (exerciseCaloriesHigh \u003c\u003d exerciseCaloriesMedium || exerciseCaloriesMedium \u003c\u003d exerciseCaloriesLow) {","lastModifiedDate":"2024-04-12"},{"lineNumber":697,"author":{"gitId":"jasonlienardi"},"content":"                throw new IllegalArgumentException(\"HIGH intensity must be greater than MEDIUM intensity and MEDIUM \" +","lastModifiedDate":"2024-04-12"},{"lineNumber":698,"author":{"gitId":"jasonlienardi"},"content":"                        \"intensity must be larger than LOW intensity.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":699,"author":{"gitId":"jasonlienardi"},"content":"            }","lastModifiedDate":"2024-04-12"},{"lineNumber":700,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":701,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterThanZero(exerciseCaloriesHigh);","lastModifiedDate":"2024-04-12"},{"lineNumber":702,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterThanZero(exerciseCaloriesMedium);","lastModifiedDate":"2024-04-12"},{"lineNumber":703,"author":{"gitId":"jasonlienardi"},"content":"            IntegerValidation.checkIntegerGreaterThanZero(exerciseCaloriesLow);","lastModifiedDate":"2024-04-12"},{"lineNumber":704,"author":{"gitId":"jasonlienardi"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":705,"author":{"gitId":"jasonlienardi"},"content":"            throw new IllegalArgumentException(\"Invalid numeric format, please input an integer\");","lastModifiedDate":"2024-04-02"},{"lineNumber":706,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":707,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":708,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":709,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":710,"author":{"gitId":"edwardhumi"},"content":"     * Parses the date from a command string.","lastModifiedDate":"2024-04-02"},{"lineNumber":711,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":712,"author":{"gitId":"edwardhumi"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2024-04-02"},{"lineNumber":713,"author":{"gitId":"edwardhumi"},"content":"     * @return The parsed date string.","lastModifiedDate":"2024-04-02"},{"lineNumber":714,"author":{"gitId":"edwardhumi"},"content":"     * @throws FutureDateException If the date format is invalid.","lastModifiedDate":"2024-04-15"},{"lineNumber":715,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":716,"author":{"gitId":"claribelho"},"content":"    public static String parseListDate(String command) throws FutureDateException, ParseException {","lastModifiedDate":"2024-04-10"},{"lineNumber":717,"author":{"gitId":"edwardhumi"},"content":"        int indexOfDate \u003d command.indexOf(\"d/\") + 2;","lastModifiedDate":"2024-04-01"},{"lineNumber":718,"author":{"gitId":"edwardhumi"},"content":"        String date \u003d command.substring(indexOfDate);","lastModifiedDate":"2024-04-01"},{"lineNumber":719,"author":{"gitId":"claribelho"},"content":"        return DateValidation.formatDateIfValid(date);","lastModifiedDate":"2024-04-10"},{"lineNumber":720,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":721,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":722,"author":{"gitId":"jasonlienardi"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":723,"author":{"gitId":"jasonlienardi"},"content":"     * Parses the newMeal command from a command string.","lastModifiedDate":"2024-04-12"},{"lineNumber":724,"author":{"gitId":"jasonlienardi"},"content":"     *","lastModifiedDate":"2024-04-12"},{"lineNumber":725,"author":{"gitId":"jasonlienardi"},"content":"     * @param command The command entered by the user containing the new meal they want to add and its nutrient details","lastModifiedDate":"2024-04-12"},{"lineNumber":726,"author":{"gitId":"jasonlienardi"},"content":"     * @throws NegativeValueException If a negative value is encountered.","lastModifiedDate":"2024-04-12"},{"lineNumber":727,"author":{"gitId":"jasonlienardi"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":728,"author":{"gitId":"jasonlienardi"},"content":"    public static void parseNewMeal(String command) throws NegativeValueException {","lastModifiedDate":"2024-04-02"},{"lineNumber":729,"author":{"gitId":"jasonlienardi"},"content":"        String mealNutrients \u003d command.substring(8).trim();","lastModifiedDate":"2024-04-02"},{"lineNumber":730,"author":{"gitId":"jasonlienardi"},"content":"        parseMealNutrient(mealNutrients);","lastModifiedDate":"2024-04-02"},{"lineNumber":731,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":732,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":733,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":734,"author":{"gitId":"jasonlienardi"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":735,"author":{"gitId":"jasonlienardi"},"content":"     * Parses the newDrink command from a command string.","lastModifiedDate":"2024-04-12"},{"lineNumber":736,"author":{"gitId":"jasonlienardi"},"content":"     *","lastModifiedDate":"2024-04-12"},{"lineNumber":737,"author":{"gitId":"jasonlienardi"},"content":"     * @param command The command entered by the user containing the new drink they want to add and its nutrient details","lastModifiedDate":"2024-04-12"},{"lineNumber":738,"author":{"gitId":"jasonlienardi"},"content":"     * @throws NegativeValueException If a negative value is encountered.","lastModifiedDate":"2024-04-12"},{"lineNumber":739,"author":{"gitId":"jasonlienardi"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":740,"author":{"gitId":"jasonlienardi"},"content":"    public static void parseNewDrink(String command) throws NegativeValueException {","lastModifiedDate":"2024-04-02"},{"lineNumber":741,"author":{"gitId":"jasonlienardi"},"content":"        String drinkNutrients \u003d command.substring(9).trim();","lastModifiedDate":"2024-04-02"},{"lineNumber":742,"author":{"gitId":"jasonlienardi"},"content":"        parseDrinkNutrient(drinkNutrients);","lastModifiedDate":"2024-04-02"},{"lineNumber":743,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":744,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":745,"author":{"gitId":"jasonlienardi"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":746,"author":{"gitId":"jasonlienardi"},"content":"     * Parses the newMeal command from a command string.","lastModifiedDate":"2024-04-12"},{"lineNumber":747,"author":{"gitId":"jasonlienardi"},"content":"     *","lastModifiedDate":"2024-04-12"},{"lineNumber":748,"author":{"gitId":"jasonlienardi"},"content":"     * @param command The command entered by the user containing the new exercise they want to add and its calories","lastModifiedDate":"2024-04-12"},{"lineNumber":749,"author":{"gitId":"jasonlienardi"},"content":"     *                burnt details","lastModifiedDate":"2024-04-12"},{"lineNumber":750,"author":{"gitId":"jasonlienardi"},"content":"     * @throws NonPositiveValueException If a negative value is encountered.","lastModifiedDate":"2024-04-12"},{"lineNumber":751,"author":{"gitId":"jasonlienardi"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":752,"author":{"gitId":"jasonlienardi"},"content":"    public static void parseNewExercise(String command) throws NonPositiveValueException {","lastModifiedDate":"2024-04-12"},{"lineNumber":753,"author":{"gitId":"jasonlienardi"},"content":"        String exerciseDetails \u003d command.substring(12).trim();","lastModifiedDate":"2024-04-02"},{"lineNumber":754,"author":{"gitId":"jasonlienardi"},"content":"        parseExerciseCalories(exerciseDetails);","lastModifiedDate":"2024-04-02"},{"lineNumber":755,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":756,"author":{"gitId":"edwardhumi"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"edwardhumi":275,"jasonlienardi":206,"BryanCastorius":69,"claribelho":206}},{"path":"src/main/java/seedu/fitnus/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edwardhumi"},"content":"package seedu.fitnus.storage;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"edwardhumi"},"content":"import java.io.File;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"edwardhumi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"edwardhumi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"edwardhumi"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"edwardhumi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"edwardhumi"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"edwardhumi"},"content":"public class Storage {","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"edwardhumi"},"content":"    public String textContent;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"edwardhumi"},"content":"    public String folderPath;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"edwardhumi"},"content":"    public String filePath;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"edwardhumi"},"content":"    public Storage(String folderPath, String filePath) {","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"edwardhumi"},"content":"        this.textContent \u003d \"\";","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"edwardhumi"},"content":"        this.folderPath \u003d folderPath;","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"edwardhumi"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"edwardhumi"},"content":"        assert (filePath !\u003d null \u0026\u0026 !filePath.isEmpty()) : \"File path should not be empty\";","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"edwardhumi"},"content":"        assert (folderPath !\u003d null \u0026\u0026 !folderPath.isEmpty()) : \"Folder path should not be empty\";","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"edwardhumi"},"content":"     * Append the contents to a single string that will be saved","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"edwardhumi"},"content":"     * @param content String to be appended","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"edwardhumi"},"content":"    public void appendTextContent(String content) {","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"edwardhumi"},"content":"        textContent +\u003d (content + \u0027\\n\u0027);","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"edwardhumi"},"content":"     * Load the saved file and convert it into list of text formatted commands","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"edwardhumi"},"content":"     * @return List of text formatted commands","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"edwardhumi"},"content":"     * @throws FileNotFoundException If the file does not exist","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"edwardhumi"},"content":"    public ArrayList\u003cString\u003e readFile() throws FileNotFoundException {","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"edwardhumi"},"content":"        assert (filePath !\u003d null \u0026\u0026 !filePath.isEmpty()) : \"File path should not be empty\";","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"edwardhumi"},"content":"        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"edwardhumi"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"edwardhumi"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"edwardhumi"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"edwardhumi"},"content":"            input.add(s.nextLine());","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"edwardhumi"},"content":"        s.close();","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"edwardhumi"},"content":"        return input;","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"edwardhumi"},"content":"     * Creates new folder and file if both did not exist","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"edwardhumi"},"content":"    public void createFile() {","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"edwardhumi"},"content":"            File dataFolder \u003d new File(folderPath);","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"edwardhumi"},"content":"            if (!dataFolder.exists()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"edwardhumi"},"content":"                if (!dataFolder.mkdirs()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"edwardhumi"},"content":"                    System.err.println(\"Failed to create data folder.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"edwardhumi"},"content":"            File textFile \u003d new File(filePath);","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"edwardhumi"},"content":"            if (!textFile.createNewFile()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"edwardhumi"},"content":"                System.err.println(\"Failed to create file.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"edwardhumi"},"content":"        } catch (IOException err) {","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"Failed to create file: \" + err.getMessage());","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"edwardhumi"},"content":"     * Write the given string to the text file","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"edwardhumi"},"content":"     * @param textToAdd String to be written","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"edwardhumi"},"content":"     * @throws IOException If there is any error encountered","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"edwardhumi"},"content":"    public void writeFile(String textToAdd) throws IOException {","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"edwardhumi"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"edwardhumi"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"edwardhumi"},"content":"        fw.close();","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"    public void clearFile() {","lastModifiedDate":"2024-04-15"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"        try {","lastModifiedDate":"2024-04-15"},{"lineNumber":81,"author":{"gitId":"claribelho"},"content":"            assert (filePath !\u003d null \u0026\u0026 !filePath.isEmpty()) : \"File path should not be empty\";","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"            new FileWriter(filePath, false).close();","lastModifiedDate":"2024-04-15"},{"lineNumber":83,"author":{"gitId":"claribelho"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-15"},{"lineNumber":84,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Failed to clear file. Please manually delete it from your device.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":85,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-15"},{"lineNumber":86,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-15"},{"lineNumber":87,"author":{"gitId":"edwardhumi"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"edwardhumi":78,"claribelho":9}},{"path":"src/main/java/seedu/fitnus/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"edwardhumi"},"content":"package seedu.fitnus.storage;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.date.Date;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.date.DateValidation;","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.FutureDateException;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.NegativeValueException;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.StorageErrorException;","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.meal.Meal;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.drink.Drink;","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exercise.ExerciseIntensity;","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exercise.Exercise;","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.drink.Water;","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.user.User;","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.NonPositiveValueException;","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.UnregisteredExerciseException;","lastModifiedDate":"2024-04-10"},{"lineNumber":16,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.parser.Parser;","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"edwardhumi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-04-10"},{"lineNumber":19,"author":{"gitId":"edwardhumi"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"import java.text.ParseException;","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"edwardhumi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"edwardhumi"},"content":"import java.util.Map;","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"edwardhumi"},"content":"public class StorageManager {","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"edwardhumi"},"content":"    public StorageManager(Storage mealStorage, Storage drinkStorage, Storage exerciseStorage,","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"edwardhumi"},"content":"                          Storage mealNutrientStorage, Storage drinkNutrientStorage, Storage exerciseCaloriesStorage) {","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"edwardhumi"},"content":"            loadMealNutrient(mealNutrientStorage);","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"edwardhumi"},"content":"            loadDrinkNutrient(drinkNutrientStorage);","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"edwardhumi"},"content":"            loadExerciseCalories(exerciseCaloriesStorage);","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"edwardhumi"},"content":"            loadMeal(mealStorage);","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"edwardhumi"},"content":"            loadDrink(drinkStorage);","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"edwardhumi"},"content":"            loadExercise(exerciseStorage);","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"jasonlienardi"},"content":"        } catch (NonPositiveValueException e) {","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println(\"Calories burnt must be greater than 0\");","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"edwardhumi"},"content":"        } catch (NegativeValueException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println(\"Nutrient details cannot be negative\");","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"edwardhumi"},"content":"     * Loads any previously stored mealList from the user and","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"edwardhumi"},"content":"     * adds the saved meals into the ArrayList mealListAll.","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"edwardhumi"},"content":"     * @param mealStorage contains filePath and folderPath of where the saved meals are stored.","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"edwardhumi"},"content":"    public void loadMeal(Storage mealStorage) {","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"edwardhumi"},"content":"            ArrayList\u003cString\u003e mealStorageList \u003d mealStorage.readFile();","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"edwardhumi"},"content":"            if (!mealStorageList.isEmpty()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"edwardhumi"},"content":"                for (String s : mealStorageList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"edwardhumi"},"content":"                    Parser.parseMealStorage(s);","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"edwardhumi"},"content":"                    String mealDescription \u003d Parser.mealStorageDescription;","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"edwardhumi"},"content":"                    int mealSize \u003d Parser.mealStorageSize;","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"                    String savedDate \u003d Parser.mealStorageDate;","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"                    DateValidation.formatDateIfValid(savedDate);","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"                    User.myMealList.mealListAll.add(new Meal(mealDescription, mealSize, savedDate));","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":62,"author":{"gitId":"edwardhumi"},"content":"            Date currentDate \u003d new Date();","lastModifiedDate":"2024-04-10"},{"lineNumber":63,"author":{"gitId":"edwardhumi"},"content":"            String todayDate \u003d currentDate.getDate();","lastModifiedDate":"2024-04-10"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"            for (Meal m : User.myMealList.mealListAll) {","lastModifiedDate":"2024-04-10"},{"lineNumber":66,"author":{"gitId":"edwardhumi"},"content":"                if (m.getDate().equals(todayDate)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"                    User.myMealList.mealList.add(m);","lastModifiedDate":"2024-04-10"},{"lineNumber":68,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-04-10"},{"lineNumber":69,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"            User.myMealList.mealListAll.removeAll(User.myMealList.mealList);","lastModifiedDate":"2024-04-10"},{"lineNumber":71,"author":{"gitId":"edwardhumi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":72,"author":{"gitId":"edwardhumi"},"content":"            mealStorage.createFile();","lastModifiedDate":"2024-04-10"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"        } catch (NonPositiveValueException | StorageErrorException | NumberFormatException | ParseException |","lastModifiedDate":"2024-04-15"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"                 FutureDateException e) {","lastModifiedDate":"2024-04-15"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"A saved meal data was corrupted. \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"                    \"Unfortunately, i will need to clear all saved data for your meals. \\n\" +","lastModifiedDate":"2024-04-15"},{"lineNumber":77,"author":{"gitId":"claribelho"},"content":"                    \"A new file for your mealList will be created for you.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"            mealStorage.clearFile();","lastModifiedDate":"2024-04-15"},{"lineNumber":79,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":80,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":81,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":82,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":83,"author":{"gitId":"edwardhumi"},"content":"     * Loads any previously stored drinkList from the user and","lastModifiedDate":"2024-04-10"},{"lineNumber":84,"author":{"gitId":"edwardhumi"},"content":"     * adds the saved drinks into the ArrayList drinkListAll.","lastModifiedDate":"2024-04-10"},{"lineNumber":85,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":86,"author":{"gitId":"edwardhumi"},"content":"     * @param drinkStorage contains filePath and folderPath of where the saved drinks are stored.","lastModifiedDate":"2024-04-10"},{"lineNumber":87,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":88,"author":{"gitId":"edwardhumi"},"content":"    public void loadDrink(Storage drinkStorage) {","lastModifiedDate":"2024-04-10"},{"lineNumber":89,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":90,"author":{"gitId":"edwardhumi"},"content":"            ArrayList\u003cString\u003e drinkStorageList \u003d drinkStorage.readFile();","lastModifiedDate":"2024-04-10"},{"lineNumber":91,"author":{"gitId":"edwardhumi"},"content":"            if (!drinkStorageList.isEmpty()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":92,"author":{"gitId":"edwardhumi"},"content":"                for (String s : drinkStorageList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":93,"author":{"gitId":"edwardhumi"},"content":"                    Parser.parseDrinkStorage(s);","lastModifiedDate":"2024-04-10"},{"lineNumber":94,"author":{"gitId":"edwardhumi"},"content":"                    String drinkDescription \u003d Parser.drinkStorageDescription;","lastModifiedDate":"2024-04-10"},{"lineNumber":95,"author":{"gitId":"claribelho"},"content":"                    int drinkSize \u003d Parser.drinkStorageSize;","lastModifiedDate":"2024-04-15"},{"lineNumber":96,"author":{"gitId":"edwardhumi"},"content":"                    String drinkDate \u003d Parser.drinkStorageDate;","lastModifiedDate":"2024-04-10"},{"lineNumber":97,"author":{"gitId":"claribelho"},"content":"                    DateValidation.formatDateIfValid(drinkDate);","lastModifiedDate":"2024-04-15"},{"lineNumber":98,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":99,"author":{"gitId":"claribelho"},"content":"                    if (drinkDescription.trim().equals(\"water\")) {","lastModifiedDate":"2024-04-15"},{"lineNumber":100,"author":{"gitId":"BryanCastorius"},"content":"                        User.myDrinkList.waterListAll.add(new Water(drinkSize, drinkDate));","lastModifiedDate":"2024-04-10"},{"lineNumber":101,"author":{"gitId":"edwardhumi"},"content":"                    } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":102,"author":{"gitId":"BryanCastorius"},"content":"                        User.myDrinkList.drinkListAll.add(new Drink(drinkDescription, drinkSize, drinkDate));","lastModifiedDate":"2024-04-10"},{"lineNumber":103,"author":{"gitId":"edwardhumi"},"content":"                    }","lastModifiedDate":"2024-04-10"},{"lineNumber":104,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-04-10"},{"lineNumber":105,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":106,"author":{"gitId":"edwardhumi"},"content":"            Date currentDate \u003d new Date();","lastModifiedDate":"2024-04-10"},{"lineNumber":107,"author":{"gitId":"edwardhumi"},"content":"            String todayDate \u003d currentDate.getDate();","lastModifiedDate":"2024-04-10"},{"lineNumber":108,"author":{"gitId":"BryanCastorius"},"content":"            for (Drink d : User.myDrinkList.drinkListAll) {","lastModifiedDate":"2024-04-10"},{"lineNumber":109,"author":{"gitId":"edwardhumi"},"content":"                if (d.getDate().equals(todayDate)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":110,"author":{"gitId":"BryanCastorius"},"content":"                    User.myDrinkList.drinkList.add(d);","lastModifiedDate":"2024-04-10"},{"lineNumber":111,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-04-10"},{"lineNumber":112,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":113,"author":{"gitId":"BryanCastorius"},"content":"            User.myDrinkList.drinkListAll.removeAll(User.myDrinkList.drinkList);","lastModifiedDate":"2024-04-10"},{"lineNumber":114,"author":{"gitId":"BryanCastorius"},"content":"            for (Water w : User.myDrinkList.waterListAll) {","lastModifiedDate":"2024-04-10"},{"lineNumber":115,"author":{"gitId":"edwardhumi"},"content":"                if (w.getDate().equals(todayDate)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":116,"author":{"gitId":"BryanCastorius"},"content":"                    User.myDrinkList.waterList.add(w);","lastModifiedDate":"2024-04-10"},{"lineNumber":117,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-04-10"},{"lineNumber":118,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":119,"author":{"gitId":"BryanCastorius"},"content":"            User.myDrinkList.waterListAll.removeAll(User.myDrinkList.waterList);","lastModifiedDate":"2024-04-10"},{"lineNumber":120,"author":{"gitId":"edwardhumi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":121,"author":{"gitId":"edwardhumi"},"content":"            drinkStorage.createFile();","lastModifiedDate":"2024-04-10"},{"lineNumber":122,"author":{"gitId":"claribelho"},"content":"        } catch (NonPositiveValueException | StorageErrorException | NumberFormatException | ParseException |","lastModifiedDate":"2024-04-15"},{"lineNumber":123,"author":{"gitId":"claribelho"},"content":"                 FutureDateException e) {","lastModifiedDate":"2024-04-15"},{"lineNumber":124,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"A saved drink data was corrupted. \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":125,"author":{"gitId":"claribelho"},"content":"                    \"Unfortunately, i will need to clear all saved data for your drinks. \\n\" +","lastModifiedDate":"2024-04-15"},{"lineNumber":126,"author":{"gitId":"claribelho"},"content":"                    \"A new file for your drinkList will be created for you.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":127,"author":{"gitId":"claribelho"},"content":"            drinkStorage.clearFile();","lastModifiedDate":"2024-04-15"},{"lineNumber":128,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":129,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":130,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":131,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":132,"author":{"gitId":"edwardhumi"},"content":"     * Loads any previously stored exerciseList from the user and","lastModifiedDate":"2024-04-10"},{"lineNumber":133,"author":{"gitId":"edwardhumi"},"content":"     * adds the saved exercises into the ArrayList exerciseListAll.","lastModifiedDate":"2024-04-10"},{"lineNumber":134,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":135,"author":{"gitId":"edwardhumi"},"content":"     * @param exerciseStorage contains filePath and folderPath of where the saved exerciseList was stored.","lastModifiedDate":"2024-04-10"},{"lineNumber":136,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":137,"author":{"gitId":"edwardhumi"},"content":"    public void loadExercise(Storage exerciseStorage) {","lastModifiedDate":"2024-04-10"},{"lineNumber":138,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":139,"author":{"gitId":"edwardhumi"},"content":"            ArrayList\u003cString\u003e exerciseStorageList \u003d exerciseStorage.readFile();","lastModifiedDate":"2024-04-10"},{"lineNumber":140,"author":{"gitId":"edwardhumi"},"content":"            if (!exerciseStorageList.isEmpty()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":141,"author":{"gitId":"edwardhumi"},"content":"                for (String s : exerciseStorageList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":142,"author":{"gitId":"edwardhumi"},"content":"                    Parser.parseExerciseStorage(s);","lastModifiedDate":"2024-04-10"},{"lineNumber":143,"author":{"gitId":"edwardhumi"},"content":"                    String exerciseDescription \u003d Parser.exerciseStorageDescription;","lastModifiedDate":"2024-04-10"},{"lineNumber":144,"author":{"gitId":"edwardhumi"},"content":"                    int exerciseDuration \u003d Parser.exerciseStorageDuration;","lastModifiedDate":"2024-04-10"},{"lineNumber":145,"author":{"gitId":"edwardhumi"},"content":"                    ExerciseIntensity exerciseIntensity \u003d Parser.exerciseStorageIntensity;","lastModifiedDate":"2024-04-10"},{"lineNumber":146,"author":{"gitId":"claribelho"},"content":"                    String savedDate \u003d Parser.exerciseStorageDate;","lastModifiedDate":"2024-04-15"},{"lineNumber":147,"author":{"gitId":"claribelho"},"content":"                    DateValidation.formatDateIfValid(savedDate);","lastModifiedDate":"2024-04-15"},{"lineNumber":148,"author":{"gitId":"jasonlienardi"},"content":"                    User.myExerciseList.exerciseListAll.add(new Exercise(exerciseDescription,","lastModifiedDate":"2024-04-10"},{"lineNumber":149,"author":{"gitId":"jasonlienardi"},"content":"                            exerciseDuration, exerciseIntensity,","lastModifiedDate":"2024-04-10"},{"lineNumber":150,"author":{"gitId":"claribelho"},"content":"                            savedDate));","lastModifiedDate":"2024-04-15"},{"lineNumber":151,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-04-10"},{"lineNumber":152,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":153,"author":{"gitId":"edwardhumi"},"content":"            Date currentDate \u003d new Date();","lastModifiedDate":"2024-04-10"},{"lineNumber":154,"author":{"gitId":"edwardhumi"},"content":"            String todayDate \u003d currentDate.getDate();","lastModifiedDate":"2024-04-10"},{"lineNumber":155,"author":{"gitId":"jasonlienardi"},"content":"            for (Exercise e : User.myExerciseList.exerciseListAll) {","lastModifiedDate":"2024-04-10"},{"lineNumber":156,"author":{"gitId":"edwardhumi"},"content":"                if (e.getDate().equals(todayDate)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":157,"author":{"gitId":"jasonlienardi"},"content":"                    User.myExerciseList.exerciseList.add(e);","lastModifiedDate":"2024-04-10"},{"lineNumber":158,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-04-10"},{"lineNumber":159,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":160,"author":{"gitId":"jasonlienardi"},"content":"            User.myExerciseList.exerciseListAll.removeAll(User.myExerciseList.exerciseList);","lastModifiedDate":"2024-04-10"},{"lineNumber":161,"author":{"gitId":"edwardhumi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":162,"author":{"gitId":"edwardhumi"},"content":"            exerciseStorage.createFile();","lastModifiedDate":"2024-04-10"},{"lineNumber":163,"author":{"gitId":"edwardhumi"},"content":"        } catch (UnregisteredExerciseException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":164,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Sorry that exercise is not registered in the database. Please check the spelling and \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":165,"author":{"gitId":"edwardhumi"},"content":"                    \"try again\");","lastModifiedDate":"2024-04-10"},{"lineNumber":166,"author":{"gitId":"claribelho"},"content":"        } catch (NonPositiveValueException | StorageErrorException | NumberFormatException | ParseException |","lastModifiedDate":"2024-04-15"},{"lineNumber":167,"author":{"gitId":"claribelho"},"content":"                 FutureDateException e) {","lastModifiedDate":"2024-04-15"},{"lineNumber":168,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"A saved data was corrupted. \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":169,"author":{"gitId":"claribelho"},"content":"                    \"Unfortunately, i will need to clear all saved data for your exercises. \\n\" +","lastModifiedDate":"2024-04-15"},{"lineNumber":170,"author":{"gitId":"claribelho"},"content":"                    \"A new file for your exerciseList will be created for you.\");","lastModifiedDate":"2024-04-15"},{"lineNumber":171,"author":{"gitId":"claribelho"},"content":"            exerciseStorage.clearFile();","lastModifiedDate":"2024-04-15"},{"lineNumber":172,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":173,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":174,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":175,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":176,"author":{"gitId":"edwardhumi"},"content":"     * Loads the file where pre-defined meals and their nutrient counts are stored.","lastModifiedDate":"2024-04-10"},{"lineNumber":177,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":178,"author":{"gitId":"edwardhumi"},"content":"     * @param mealNutrientStorage contains filePath and folderPath of where the pre-defined meals are stored.","lastModifiedDate":"2024-04-10"},{"lineNumber":179,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":180,"author":{"gitId":"edwardhumi"},"content":"    public void loadMealNutrient(Storage mealNutrientStorage) throws NegativeValueException {","lastModifiedDate":"2024-04-10"},{"lineNumber":181,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":182,"author":{"gitId":"edwardhumi"},"content":"            ArrayList\u003cString\u003e mealNutrientList \u003d mealNutrientStorage.readFile();","lastModifiedDate":"2024-04-10"},{"lineNumber":183,"author":{"gitId":"edwardhumi"},"content":"            if (!mealNutrientList.isEmpty()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":184,"author":{"gitId":"edwardhumi"},"content":"                for (String s : mealNutrientList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":185,"author":{"gitId":"edwardhumi"},"content":"                    Parser.parseMealNutrient(s);","lastModifiedDate":"2024-04-10"},{"lineNumber":186,"author":{"gitId":"edwardhumi"},"content":"                    String description \u003d Parser.mealNutrientDescription;","lastModifiedDate":"2024-04-10"},{"lineNumber":187,"author":{"gitId":"edwardhumi"},"content":"                    int calories \u003d Parser.mealNutrientCalories;","lastModifiedDate":"2024-04-10"},{"lineNumber":188,"author":{"gitId":"edwardhumi"},"content":"                    int carbs \u003d Parser.mealNutrientCarbs;","lastModifiedDate":"2024-04-10"},{"lineNumber":189,"author":{"gitId":"edwardhumi"},"content":"                    int protein \u003d Parser.mealNutrientProtein;","lastModifiedDate":"2024-04-10"},{"lineNumber":190,"author":{"gitId":"edwardhumi"},"content":"                    int fat \u003d Parser.mealNutrientFat;","lastModifiedDate":"2024-04-10"},{"lineNumber":191,"author":{"gitId":"edwardhumi"},"content":"                    int fiber \u003d Parser.mealNutrientFiber;","lastModifiedDate":"2024-04-10"},{"lineNumber":192,"author":{"gitId":"edwardhumi"},"content":"                    int sugar \u003d Parser.mealNutrientSugar;","lastModifiedDate":"2024-04-10"},{"lineNumber":193,"author":{"gitId":"edwardhumi"},"content":"                    Meal.nutrientDetails.put(description, new int[]{calories, carbs, protein, fat, fiber, sugar});","lastModifiedDate":"2024-04-10"},{"lineNumber":194,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-04-10"},{"lineNumber":195,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":196,"author":{"gitId":"edwardhumi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":197,"author":{"gitId":"edwardhumi"},"content":"            mealNutrientStorage.createFile();","lastModifiedDate":"2024-04-10"},{"lineNumber":198,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":199,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":200,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":201,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":202,"author":{"gitId":"edwardhumi"},"content":"     * Loads the file where pre-defined drinks and their nutrient counts are stored.","lastModifiedDate":"2024-04-10"},{"lineNumber":203,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":204,"author":{"gitId":"edwardhumi"},"content":"     * @param drinkNutrientStorage contains filePath and folderPath of where the pre-defined drinks are stored.","lastModifiedDate":"2024-04-10"},{"lineNumber":205,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":206,"author":{"gitId":"edwardhumi"},"content":"    public void loadDrinkNutrient(Storage drinkNutrientStorage) throws NegativeValueException {","lastModifiedDate":"2024-04-10"},{"lineNumber":207,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":208,"author":{"gitId":"edwardhumi"},"content":"            ArrayList\u003cString\u003e drinkNutrientList \u003d drinkNutrientStorage.readFile();","lastModifiedDate":"2024-04-10"},{"lineNumber":209,"author":{"gitId":"edwardhumi"},"content":"            if (!drinkNutrientList.isEmpty()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":210,"author":{"gitId":"edwardhumi"},"content":"                for (String s : drinkNutrientList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":211,"author":{"gitId":"edwardhumi"},"content":"                    Parser.parseDrinkNutrient(s);","lastModifiedDate":"2024-04-10"},{"lineNumber":212,"author":{"gitId":"edwardhumi"},"content":"                    String description \u003d Parser.drinkNutrientDescription;","lastModifiedDate":"2024-04-10"},{"lineNumber":213,"author":{"gitId":"edwardhumi"},"content":"                    int calories \u003d Parser.drinkNutrientCalories;","lastModifiedDate":"2024-04-10"},{"lineNumber":214,"author":{"gitId":"edwardhumi"},"content":"                    int carbs \u003d Parser.drinkNutrientCarbs;","lastModifiedDate":"2024-04-10"},{"lineNumber":215,"author":{"gitId":"edwardhumi"},"content":"                    int sugar \u003d Parser.drinkNutrientSugar;","lastModifiedDate":"2024-04-10"},{"lineNumber":216,"author":{"gitId":"edwardhumi"},"content":"                    int protein \u003d Parser.drinkNutrientProtein;","lastModifiedDate":"2024-04-10"},{"lineNumber":217,"author":{"gitId":"edwardhumi"},"content":"                    int fat \u003d Parser.drinkNutrientFat;","lastModifiedDate":"2024-04-10"},{"lineNumber":218,"author":{"gitId":"edwardhumi"},"content":"                    Drink.nutrientDetails.put(description, new int[]{calories, carbs, sugar, protein, fat});","lastModifiedDate":"2024-04-10"},{"lineNumber":219,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-04-10"},{"lineNumber":220,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":221,"author":{"gitId":"edwardhumi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":222,"author":{"gitId":"edwardhumi"},"content":"            drinkNutrientStorage.createFile();","lastModifiedDate":"2024-04-10"},{"lineNumber":223,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":224,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":225,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":226,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":227,"author":{"gitId":"edwardhumi"},"content":"     * Loads the file where pre-defined exercises and the number of calories burnt per minute for","lastModifiedDate":"2024-04-10"},{"lineNumber":228,"author":{"gitId":"edwardhumi"},"content":"     * respective intensities (HIGH, MEDIUM, LOW) are stored.","lastModifiedDate":"2024-04-10"},{"lineNumber":229,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":230,"author":{"gitId":"edwardhumi"},"content":"     * @param exerciseCaloriesStorage contains filePath and folderPath of where the pre-defined exercises are stored.","lastModifiedDate":"2024-04-10"},{"lineNumber":231,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":232,"author":{"gitId":"jasonlienardi"},"content":"    public void loadExerciseCalories(Storage exerciseCaloriesStorage) throws NonPositiveValueException {","lastModifiedDate":"2024-04-12"},{"lineNumber":233,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":234,"author":{"gitId":"edwardhumi"},"content":"            ArrayList\u003cString\u003e exerciseCaloriesList \u003d exerciseCaloriesStorage.readFile();","lastModifiedDate":"2024-04-10"},{"lineNumber":235,"author":{"gitId":"edwardhumi"},"content":"            if (!exerciseCaloriesList.isEmpty()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":236,"author":{"gitId":"edwardhumi"},"content":"                for (String s : exerciseCaloriesList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":237,"author":{"gitId":"edwardhumi"},"content":"                    Parser.parseExerciseCalories(s);","lastModifiedDate":"2024-04-10"},{"lineNumber":238,"author":{"gitId":"edwardhumi"},"content":"                    String description \u003d Parser.exerciseCaloriesDescription;","lastModifiedDate":"2024-04-10"},{"lineNumber":239,"author":{"gitId":"edwardhumi"},"content":"                    int caloriesHigh \u003d Parser.exerciseCaloriesHigh;","lastModifiedDate":"2024-04-10"},{"lineNumber":240,"author":{"gitId":"edwardhumi"},"content":"                    int caloriesMedium \u003d Parser.exerciseCaloriesMedium;","lastModifiedDate":"2024-04-10"},{"lineNumber":241,"author":{"gitId":"edwardhumi"},"content":"                    int caloriesLow \u003d Parser.exerciseCaloriesLow;","lastModifiedDate":"2024-04-10"},{"lineNumber":242,"author":{"gitId":"edwardhumi"},"content":"                    Exercise.exerciseDetails.put(description, new int[]{caloriesHigh, caloriesMedium, caloriesLow});","lastModifiedDate":"2024-04-10"},{"lineNumber":243,"author":{"gitId":"edwardhumi"},"content":"                }","lastModifiedDate":"2024-04-10"},{"lineNumber":244,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":245,"author":{"gitId":"edwardhumi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":246,"author":{"gitId":"edwardhumi"},"content":"            exerciseCaloriesStorage.createFile();","lastModifiedDate":"2024-04-10"},{"lineNumber":247,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":248,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":249,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":250,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":251,"author":{"gitId":"edwardhumi"},"content":"     * Saves the user\u0027s meals when the user exits the program.","lastModifiedDate":"2024-04-10"},{"lineNumber":252,"author":{"gitId":"edwardhumi"},"content":"     * Meals from the current day is saved with the date into the .txt file.","lastModifiedDate":"2024-04-10"},{"lineNumber":253,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":254,"author":{"gitId":"edwardhumi"},"content":"     * @param mealStorage contains filePath and folderPath of where the saved meals are stored.","lastModifiedDate":"2024-04-10"},{"lineNumber":255,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":256,"author":{"gitId":"edwardhumi"},"content":"    public void saveMeal(Storage mealStorage) {","lastModifiedDate":"2024-04-10"},{"lineNumber":257,"author":{"gitId":"claribelho"},"content":"        for (Meal meal : User.myMealList.mealListAll) {","lastModifiedDate":"2024-04-10"},{"lineNumber":258,"author":{"gitId":"edwardhumi"},"content":"            String mealSavedData \u003d meal.getName() + \",\" + meal.getServingSize() + \",\" + meal.getDate();","lastModifiedDate":"2024-04-10"},{"lineNumber":259,"author":{"gitId":"edwardhumi"},"content":"            mealStorage.appendTextContent(mealSavedData);","lastModifiedDate":"2024-04-10"},{"lineNumber":260,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":261,"author":{"gitId":"claribelho"},"content":"        for (Meal meal : User.myMealList.mealList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":262,"author":{"gitId":"edwardhumi"},"content":"            String mealSavedData \u003d meal.getName() + \",\" + meal.getServingSize() + \",\" + meal.getDate();","lastModifiedDate":"2024-04-10"},{"lineNumber":263,"author":{"gitId":"edwardhumi"},"content":"            mealStorage.appendTextContent(mealSavedData);","lastModifiedDate":"2024-04-10"},{"lineNumber":264,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":265,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":266,"author":{"gitId":"edwardhumi"},"content":"            mealStorage.writeFile(mealStorage.textContent);","lastModifiedDate":"2024-04-10"},{"lineNumber":267,"author":{"gitId":"edwardhumi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":268,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"Failed saving meal: \" + e.getMessage());","lastModifiedDate":"2024-04-10"},{"lineNumber":269,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":270,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":271,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":272,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":273,"author":{"gitId":"edwardhumi"},"content":"     * Saves the user\u0027s drinks when the user exits the program.","lastModifiedDate":"2024-04-10"},{"lineNumber":274,"author":{"gitId":"edwardhumi"},"content":"     * MealDrinkss from the current day is saved with the date into the .txt file.","lastModifiedDate":"2024-04-10"},{"lineNumber":275,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":276,"author":{"gitId":"edwardhumi"},"content":"     * @param drinkStorage contains filePath and folderPath of where the saved drinksList are stored.","lastModifiedDate":"2024-04-10"},{"lineNumber":277,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":278,"author":{"gitId":"edwardhumi"},"content":"    public void saveDrink(Storage drinkStorage) {","lastModifiedDate":"2024-04-10"},{"lineNumber":279,"author":{"gitId":"BryanCastorius"},"content":"        for (Water water : User.myDrinkList.waterListAll) {","lastModifiedDate":"2024-04-10"},{"lineNumber":280,"author":{"gitId":"edwardhumi"},"content":"            String waterSavedData \u003d \"water\" + \",\" + water.getWater() + \",\" + water.getDate();","lastModifiedDate":"2024-04-10"},{"lineNumber":281,"author":{"gitId":"edwardhumi"},"content":"            drinkStorage.appendTextContent(waterSavedData);","lastModifiedDate":"2024-04-10"},{"lineNumber":282,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":283,"author":{"gitId":"BryanCastorius"},"content":"        for (Water water : User.myDrinkList.waterList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":284,"author":{"gitId":"edwardhumi"},"content":"            String waterSavedData \u003d \"water\" + \",\" + water.getWater() + \",\" + water.getDate();","lastModifiedDate":"2024-04-10"},{"lineNumber":285,"author":{"gitId":"edwardhumi"},"content":"            drinkStorage.appendTextContent(waterSavedData);","lastModifiedDate":"2024-04-10"},{"lineNumber":286,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":287,"author":{"gitId":"BryanCastorius"},"content":"        for (Drink drink : User.myDrinkList.drinkListAll) {","lastModifiedDate":"2024-04-10"},{"lineNumber":288,"author":{"gitId":"edwardhumi"},"content":"            String drinkSavedData \u003d drink.getName() + \",\" + drink.getDrinkVolumeSize() + \",\" + drink.getDate();","lastModifiedDate":"2024-04-10"},{"lineNumber":289,"author":{"gitId":"edwardhumi"},"content":"            drinkStorage.appendTextContent(drinkSavedData);","lastModifiedDate":"2024-04-10"},{"lineNumber":290,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":291,"author":{"gitId":"BryanCastorius"},"content":"        for (Drink drink : User.myDrinkList.drinkList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":292,"author":{"gitId":"edwardhumi"},"content":"            String drinkSavedData \u003d drink.getName() + \",\" + drink.getDrinkVolumeSize() + \",\" + drink.getDate();","lastModifiedDate":"2024-04-10"},{"lineNumber":293,"author":{"gitId":"edwardhumi"},"content":"            drinkStorage.appendTextContent(drinkSavedData);","lastModifiedDate":"2024-04-10"},{"lineNumber":294,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":295,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":296,"author":{"gitId":"edwardhumi"},"content":"            drinkStorage.writeFile(drinkStorage.textContent);","lastModifiedDate":"2024-04-10"},{"lineNumber":297,"author":{"gitId":"edwardhumi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":298,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"Failed saving drink: \" + e.getMessage());","lastModifiedDate":"2024-04-10"},{"lineNumber":299,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":300,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":301,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":302,"author":{"gitId":"edwardhumi"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":303,"author":{"gitId":"edwardhumi"},"content":"     * Saves the user\u0027s exercises when the user exits the program.","lastModifiedDate":"2024-04-10"},{"lineNumber":304,"author":{"gitId":"edwardhumi"},"content":"     * Exercises from the current day is saved with the date into the .txt file.","lastModifiedDate":"2024-04-10"},{"lineNumber":305,"author":{"gitId":"edwardhumi"},"content":"     *","lastModifiedDate":"2024-04-10"},{"lineNumber":306,"author":{"gitId":"edwardhumi"},"content":"     * @param exerciseStorage contains filePath and folderPath of where the saved exerciseList are stored.","lastModifiedDate":"2024-04-10"},{"lineNumber":307,"author":{"gitId":"edwardhumi"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":308,"author":{"gitId":"edwardhumi"},"content":"    public void saveExercise(Storage exerciseStorage) {","lastModifiedDate":"2024-04-10"},{"lineNumber":309,"author":{"gitId":"jasonlienardi"},"content":"        for (Exercise exercise : User.myExerciseList.exerciseListAll) {","lastModifiedDate":"2024-04-10"},{"lineNumber":310,"author":{"gitId":"edwardhumi"},"content":"            String exerciseSavedData \u003d exercise.getName() + \",\" + exercise.getDuration() + \",\"","lastModifiedDate":"2024-04-10"},{"lineNumber":311,"author":{"gitId":"edwardhumi"},"content":"                    + exercise.getIntensity() + \",\" + exercise.getDate();","lastModifiedDate":"2024-04-10"},{"lineNumber":312,"author":{"gitId":"edwardhumi"},"content":"            exerciseStorage.appendTextContent(exerciseSavedData);","lastModifiedDate":"2024-04-10"},{"lineNumber":313,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":314,"author":{"gitId":"jasonlienardi"},"content":"        for (Exercise exercise : User.myExerciseList.exerciseList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":315,"author":{"gitId":"edwardhumi"},"content":"            String exerciseSavedData \u003d exercise.getName() + \",\" + exercise.getDuration() + \",\"","lastModifiedDate":"2024-04-10"},{"lineNumber":316,"author":{"gitId":"edwardhumi"},"content":"                    + exercise.getIntensity() + \",\" + exercise.getDate();","lastModifiedDate":"2024-04-10"},{"lineNumber":317,"author":{"gitId":"edwardhumi"},"content":"            exerciseStorage.appendTextContent(exerciseSavedData);","lastModifiedDate":"2024-04-10"},{"lineNumber":318,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":319,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":320,"author":{"gitId":"edwardhumi"},"content":"            exerciseStorage.writeFile(exerciseStorage.textContent);","lastModifiedDate":"2024-04-10"},{"lineNumber":321,"author":{"gitId":"edwardhumi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":322,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"Failed saving drink: \" + e.getMessage());","lastModifiedDate":"2024-04-10"},{"lineNumber":323,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":324,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":325,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":326,"author":{"gitId":"jasonlienardi"},"content":"    //@@author jasonlienardi","lastModifiedDate":"2024-04-10"},{"lineNumber":327,"author":{"gitId":"jasonlienardi"},"content":"    public void saveMealNutrients(Storage mealNutrientStorage) {","lastModifiedDate":"2024-04-10"},{"lineNumber":328,"author":{"gitId":"jasonlienardi"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-04-10"},{"lineNumber":329,"author":{"gitId":"jasonlienardi"},"content":"        for (Map.Entry\u003cString, int[]\u003e entry : Meal.nutrientDetails.entrySet()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":330,"author":{"gitId":"jasonlienardi"},"content":"            result.append(entry.getKey()).append(\",\");","lastModifiedDate":"2024-04-10"},{"lineNumber":331,"author":{"gitId":"jasonlienardi"},"content":"            int[] values \u003d entry.getValue();","lastModifiedDate":"2024-04-10"},{"lineNumber":332,"author":{"gitId":"jasonlienardi"},"content":"            for (int value : values) {","lastModifiedDate":"2024-04-10"},{"lineNumber":333,"author":{"gitId":"jasonlienardi"},"content":"                result.append(value).append(\",\");","lastModifiedDate":"2024-04-10"},{"lineNumber":334,"author":{"gitId":"jasonlienardi"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":335,"author":{"gitId":"jasonlienardi"},"content":"            result \u003d new StringBuilder(result.substring(0, result.length() - 1));","lastModifiedDate":"2024-04-10"},{"lineNumber":336,"author":{"gitId":"jasonlienardi"},"content":"            result.append(\"\\n\");","lastModifiedDate":"2024-04-10"},{"lineNumber":337,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":338,"author":{"gitId":"jasonlienardi"},"content":"        mealNutrientStorage.appendTextContent(result.toString());","lastModifiedDate":"2024-04-10"},{"lineNumber":339,"author":{"gitId":"jasonlienardi"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":340,"author":{"gitId":"jasonlienardi"},"content":"            mealNutrientStorage.writeFile(mealNutrientStorage.textContent);","lastModifiedDate":"2024-04-10"},{"lineNumber":341,"author":{"gitId":"jasonlienardi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":342,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println(\"Failed adding meal nutrients: \" + e.getMessage());","lastModifiedDate":"2024-04-10"},{"lineNumber":343,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":344,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":345,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":346,"author":{"gitId":"jasonlienardi"},"content":"    //@@author jasonlienardi","lastModifiedDate":"2024-04-10"},{"lineNumber":347,"author":{"gitId":"jasonlienardi"},"content":"    public void saveDrinkNutrients(Storage drinkNutrientStorage) {","lastModifiedDate":"2024-04-10"},{"lineNumber":348,"author":{"gitId":"jasonlienardi"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-04-10"},{"lineNumber":349,"author":{"gitId":"jasonlienardi"},"content":"        for (Map.Entry\u003cString, int[]\u003e entry : Drink.nutrientDetails.entrySet()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":350,"author":{"gitId":"jasonlienardi"},"content":"            result.append(entry.getKey()).append(\",\");","lastModifiedDate":"2024-04-10"},{"lineNumber":351,"author":{"gitId":"jasonlienardi"},"content":"            int[] values \u003d entry.getValue();","lastModifiedDate":"2024-04-10"},{"lineNumber":352,"author":{"gitId":"jasonlienardi"},"content":"            for (int value : values) {","lastModifiedDate":"2024-04-10"},{"lineNumber":353,"author":{"gitId":"jasonlienardi"},"content":"                result.append(value).append(\",\");","lastModifiedDate":"2024-04-10"},{"lineNumber":354,"author":{"gitId":"jasonlienardi"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":355,"author":{"gitId":"jasonlienardi"},"content":"            result \u003d new StringBuilder(result.substring(0, result.length() - 1));","lastModifiedDate":"2024-04-10"},{"lineNumber":356,"author":{"gitId":"jasonlienardi"},"content":"            result.append(\"\\n\");","lastModifiedDate":"2024-04-10"},{"lineNumber":357,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":358,"author":{"gitId":"jasonlienardi"},"content":"        drinkNutrientStorage.appendTextContent(result.toString());","lastModifiedDate":"2024-04-10"},{"lineNumber":359,"author":{"gitId":"jasonlienardi"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":360,"author":{"gitId":"jasonlienardi"},"content":"            drinkNutrientStorage.writeFile(drinkNutrientStorage.textContent);","lastModifiedDate":"2024-04-10"},{"lineNumber":361,"author":{"gitId":"jasonlienardi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":362,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println(\"Failed adding drink nutrients: \" + e.getMessage());","lastModifiedDate":"2024-04-10"},{"lineNumber":363,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":364,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":365,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":366,"author":{"gitId":"jasonlienardi"},"content":"    //@@author jasonlienardi","lastModifiedDate":"2024-04-10"},{"lineNumber":367,"author":{"gitId":"jasonlienardi"},"content":"    public void saveExerciseCalories(Storage exerciseCaloriesStorage) {","lastModifiedDate":"2024-04-10"},{"lineNumber":368,"author":{"gitId":"jasonlienardi"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-04-10"},{"lineNumber":369,"author":{"gitId":"jasonlienardi"},"content":"        for (Map.Entry\u003cString, int[]\u003e entry : Exercise.exerciseDetails.entrySet()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":370,"author":{"gitId":"jasonlienardi"},"content":"            result.append(entry.getKey()).append(\",\");","lastModifiedDate":"2024-04-10"},{"lineNumber":371,"author":{"gitId":"jasonlienardi"},"content":"            int[] values \u003d entry.getValue();","lastModifiedDate":"2024-04-10"},{"lineNumber":372,"author":{"gitId":"jasonlienardi"},"content":"            for (int value : values) {","lastModifiedDate":"2024-04-10"},{"lineNumber":373,"author":{"gitId":"jasonlienardi"},"content":"                result.append(value).append(\",\");","lastModifiedDate":"2024-04-10"},{"lineNumber":374,"author":{"gitId":"jasonlienardi"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":375,"author":{"gitId":"jasonlienardi"},"content":"            result \u003d new StringBuilder(result.substring(0, result.length() - 1));","lastModifiedDate":"2024-04-10"},{"lineNumber":376,"author":{"gitId":"jasonlienardi"},"content":"            result.append(\"\\n\");","lastModifiedDate":"2024-04-10"},{"lineNumber":377,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":378,"author":{"gitId":"jasonlienardi"},"content":"        exerciseCaloriesStorage.appendTextContent(result.toString());","lastModifiedDate":"2024-04-10"},{"lineNumber":379,"author":{"gitId":"jasonlienardi"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":380,"author":{"gitId":"jasonlienardi"},"content":"            exerciseCaloriesStorage.writeFile(exerciseCaloriesStorage.textContent);","lastModifiedDate":"2024-04-10"},{"lineNumber":381,"author":{"gitId":"jasonlienardi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":382,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println(\"Failed adding exercise calories: \" + e.getMessage());","lastModifiedDate":"2024-04-10"},{"lineNumber":383,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":384,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":385,"author":{"gitId":"jasonlienardi"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"edwardhumi":253,"jasonlienardi":75,"BryanCastorius":15,"claribelho":42}},{"path":"src/main/java/seedu/fitnus/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"BryanCastorius"},"content":"package seedu.fitnus.ui;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.drink.Drink;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.meal.Meal;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exercise.Exercise;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.parser.Parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.storage.Storage;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.storage.StorageManager;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.user.User;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"jasonlienardi"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"jasonlienardi"},"content":"public class Ui {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"jasonlienardi"},"content":"    public static final String LINE \u003d \"_________________________________________________________________\";","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"jasonlienardi"},"content":"    static Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"jasonlienardi"},"content":"    public boolean isExit \u003d false;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"edwardhumi"},"content":"    private Storage mealStorage \u003d new Storage(\"./data\", \"./data/MealList.txt\");","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"edwardhumi"},"content":"    private Storage drinkStorage \u003d new Storage(\"./data\", \"./data/DrinkList.txt\");","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"BryanCastorius"},"content":"    private Storage exerciseStorage \u003d new Storage (\"./data\", \"./data/ExerciseList.txt\");","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"edwardhumi"},"content":"    private Storage mealNutrientStorage \u003d new Storage(\"./db\", \"./db/Meal_db.csv\");","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"edwardhumi"},"content":"    private Storage drinkNutrientStorage \u003d new Storage(\"./db\", \"./db/Drink_db.csv\");","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"edwardhumi"},"content":"    private Storage exerciseCaloriesStorage \u003d new Storage(\"./db\", \"./db/Exercise_db.csv\");","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"edwardhumi"},"content":"    private User user \u003d new User();","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"edwardhumi"},"content":"    private StorageManager storageManager \u003d new StorageManager(mealStorage, drinkStorage, exerciseStorage,","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"edwardhumi"},"content":"            mealNutrientStorage, drinkNutrientStorage, exerciseCaloriesStorage);","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"edwardhumi"},"content":"    private Parser parser \u003d new Parser(user);","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"     * Prints the welcome message upon the start of the application,","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"     * including all pre-defined meals, drinks and exercises.","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"     * */","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"jasonlienardi"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Hello! Welcome to FitNUS\");","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"What would you like to track today?\");","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"BryanCastorius"},"content":"        Meal.printAvailableMeals();","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"BryanCastorius"},"content":"        Drink.printAvailableDrinks();","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"jasonlienardi"},"content":"        Exercise.printAvailableExercises();","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"     * Prints the goodbye message when the user exits the program.","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"     * The lists for meal, drink and exercise would be stores before exiting.","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"jasonlienardi"},"content":"    public void handleExit() {","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"jasonlienardi"},"content":"        input.close();","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"jasonlienardi"},"content":"        isExit \u003d true;","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"edwardhumi"},"content":"        storageManager.saveMeal(mealStorage);","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"edwardhumi"},"content":"        storageManager.saveDrink(drinkStorage);","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"edwardhumi"},"content":"        storageManager.saveExercise(exerciseStorage);","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"edwardhumi"},"content":"        storageManager.saveMealNutrients(mealNutrientStorage);","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"edwardhumi"},"content":"        storageManager.saveDrinkNutrients(drinkNutrientStorage);","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"edwardhumi"},"content":"        storageManager.saveExerciseCalories(exerciseCaloriesStorage);","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"     * Prints the divider line between messages.","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"    public void showLine() {","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"     * Reads the user\u0027s input into command line.","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"jasonlienardi"},"content":"    public void readCommand() {","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"jasonlienardi"},"content":"        String command \u003d input.nextLine();","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"jasonlienardi"},"content":"        showLine();","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"        if (command.trim().equals(\"exit\")) {","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"jasonlienardi"},"content":"            handleExit();","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"jasonlienardi"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"            parser.parseCommand(command);","lastModifiedDate":"2024-04-14"},{"lineNumber":76,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"jasonlienardi"},"content":"        showLine();","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"jasonlienardi"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"edwardhumi":20,"jasonlienardi":36,"BryanCastorius":5,"claribelho":18}},{"path":"src/main/java/seedu/fitnus/unused/CSVReader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.unused;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"tinaliu27"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"tinaliu27"},"content":"import java.io.File;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"tinaliu27"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"tinaliu27"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"tinaliu27"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"tinaliu27"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"//@@author tinaliu27 -unused","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class CSVReader {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String DELIMITER \u003d \",\";","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static HashMap\u003cString, String[]\u003e foodItems \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static void main(String[] args){","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String mealCsvFile \u003d \"./db/Meal_db.csv\";","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        String drinkCSVFile \u003d \"./db/Drink_db.csv\";","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        CSVReader.read(mealCsvFile);","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        printInfo();","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        readMealInfo(mealCsvFile, \"Pepper lunch \");","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static void read(String filename) {","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try{","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            File file \u003d new File(filename);","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            FileReader fr \u003d new FileReader(file);","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            BufferedReader br \u003d new BufferedReader(fr);","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            String line \u003d \"\";","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            String[] tempArr;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                tempArr \u003d line.split(DELIMITER);","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                String itemFullName \u003d tempArr[0];","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                String[] itemDetails \u003d new String[tempArr.length-1];","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                for(int i \u003d 1; i \u003c tempArr.length; i++) {","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    itemDetails[i-1] \u003d tempArr[i];","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                foodItems.put(itemFullName, itemDetails);","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            br.close();","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            ex.printStackTrace();","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static void readMealInfo(String filename, String foodName) {","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        read(filename);","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        boolean found \u003d false;","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String[] nutrientInfo \u003d null;","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (foodItems.containsKey(foodName)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            nutrientInfo \u003d foodItems.get(foodName);","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            found \u003d true;","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            System.out.println(\"Error! Food not found. Please input a valid item.\");","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (found \u0026\u0026 nutrientInfo !\u003d null) {","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            for (String nutrients : nutrientInfo) {","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                System.out.println(nutrients);","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void printInfo() {","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        for (HashMap.Entry\u003cString, String[]\u003e entry : foodItems.entrySet()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            String key \u003d entry.getKey();","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            String[] value \u003d entry.getValue();","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            System.out.print(\"Key: \" + key + \", Value: [\");","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c value.length; i++) {","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                System.out.print(value[i]);","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                if (i \u003c value.length - 1) {","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                    System.out.print(\", \");","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            System.out.println(\"]\");","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"tinaliu27":6,"-":70,"claribelho":1}},{"path":"src/main/java/seedu/fitnus/unused/CSVWriter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.unused;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"tinaliu27"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"BryanCastorius"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"BryanCastorius"},"content":"import java.io.File;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"BryanCastorius"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"tinaliu27"},"content":"import java.text.DateFormat;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"tinaliu27"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"tinaliu27"},"content":"import java.util.Date;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"tinaliu27"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"//@@author tinaliu27 -unused","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CSVWriter {","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        writeIntoFile(\"hi\", \"FOOD\");","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void writeIntoFile(String foodItem, String fileName) {","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        DateFormat df \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        File file \u003d null;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (fileName.toLowerCase().contains(\"food\")) {","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            file \u003d new File(\"./db/Output_Food_\" + df.format(new Date())+\".csv\");","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            file \u003d new File(\"./db/Output_Drink_\" + df.format(new Date())+\".csv\");","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            try{","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                file.createNewFile();","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                System.out.println(\"error with creating a file\");","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try (FileWriter fw \u003d new FileWriter(file)){","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            BufferedWriter writer \u003d new BufferedWriter(fw);","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            writer.write(foodItem);","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            writer.newLine();","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            writer.close();","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            System.out.println(\"error trying to add something into the file\");","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"tinaliu27":5,"BryanCastorius":4,"-":30,"claribelho":1}},{"path":"src/main/java/seedu/fitnus/user/User.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.user;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.drink.Drink;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.drink.DrinkList;","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.drink.Water;","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.ExceedTypeLongException;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.FutureDateException;","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.meal.Meal;","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.meal.MealList;","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exercise.Exercise;","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exercise.ExerciseList;","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.parser.Parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.validator.IntegerValidation;","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.InvalidDateException;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"import java.text.ParseException;","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":" * Handles all methods related to the user\u0027s meals, drinks and exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"public class User {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"    public static MealList myMealList;","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"    public static DrinkList myDrinkList;","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"    public static ExerciseList myExerciseList;","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"    private static final int MAX_WATER_INTAKE \u003d 10000;","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"    private static final int RECOMMEND_WATER_INTAKE \u003d 2600;","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"    private static final long RECOMMEND_CALORIE_INTAKE \u003d 2200;","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"edwardhumi"},"content":"    public User() {","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"        myMealList \u003d new MealList();","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"BryanCastorius"},"content":"        myDrinkList \u003d new DrinkList();","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"jasonlienardi"},"content":"        myExerciseList \u003d new ExerciseList();","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"     * Prints the user\u0027s net calorie intake of the day.","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"     * The method sums up the calories from meals and drinks, and subtracts calories burnt from exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"    public void handleViewCalories() throws ExceedTypeLongException {","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"        long caloriesIntakeCount \u003d 0;","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"        for (Meal meal: myMealList.mealList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"            caloriesIntakeCount +\u003d meal.getCalories();","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"BryanCastorius"},"content":"        for (Drink drink: myDrinkList.drinkList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"            caloriesIntakeCount +\u003d drink.getCalories();","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkNoOverflowForSum(caloriesIntakeCount);","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"        assert caloriesIntakeCount \u003e\u003d 0: \"total calories intake has to be a non-negative value\";","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"        try {","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"            long caloriesBurntCount \u003d 0;","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"jasonlienardi"},"content":"            for (Exercise exercise : myExerciseList.exerciseList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"                caloriesBurntCount +\u003d exercise.getCaloriesBurnt();","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"            }","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"            IntegerValidation.checkNoOverflowForSum(caloriesBurntCount);","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"            assert caloriesBurntCount \u003e\u003d 0: \"total calories burnt has to be a non-negative value\";","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"            long caloriesCount \u003d caloriesIntakeCount - caloriesBurntCount;","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Total Calories: \" + caloriesCount + \" kcal\");","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"        } catch (ExceedTypeLongException e) {","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"the amount of calories you burnt has exceeded our data limits. please do a quick \" +","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"                    \"check to make sure your exerciseList is accurate!\");","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"     * Prints the user\u0027s total carbohydrate intake of the day.","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"     * The method sums up the carbohydrates from meals and drinks.","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"    public void handleViewCarbohydrates() throws ExceedTypeLongException {","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"        long carbohydratesCount \u003d 0;","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"        for (Meal meal: myMealList.mealList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"            carbohydratesCount +\u003d meal.getCarbs();","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"BryanCastorius"},"content":"        for (Drink drink: myDrinkList.drinkList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"            carbohydratesCount +\u003d drink.getCarbs();","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkNoOverflowForSum(carbohydratesCount);","lastModifiedDate":"2024-04-12"},{"lineNumber":81,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Total Carbohydrates: \" + carbohydratesCount + \" grams\");","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"claribelho"},"content":"     * Prints the user\u0027s total protein intake of the day.","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"claribelho"},"content":"     * The method sums up the protein from meals and drinks.","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"    public void handleViewProteins() throws ExceedTypeLongException {","lastModifiedDate":"2024-04-12"},{"lineNumber":89,"author":{"gitId":"claribelho"},"content":"        long proteinCount \u003d 0;","lastModifiedDate":"2024-04-12"},{"lineNumber":90,"author":{"gitId":"claribelho"},"content":"        for (Meal meal: myMealList.mealList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":91,"author":{"gitId":"claribelho"},"content":"            proteinCount +\u003d meal.getProtein();","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"BryanCastorius"},"content":"        for (Drink drink: myDrinkList.drinkList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":94,"author":{"gitId":"claribelho"},"content":"            proteinCount +\u003d drink.getProtein();","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkNoOverflowForSum(proteinCount);","lastModifiedDate":"2024-04-12"},{"lineNumber":97,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Total Proteins: \" + proteinCount + \" grams\");","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"claribelho"},"content":"     * Prints the user\u0027s total fiber intake of the day.","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"claribelho"},"content":"     * The method sums up the fiber from meals.","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"claribelho"},"content":"    public void handleViewFiber() throws ExceedTypeLongException {","lastModifiedDate":"2024-04-12"},{"lineNumber":105,"author":{"gitId":"claribelho"},"content":"        long fibreCount \u003d 0;","lastModifiedDate":"2024-04-12"},{"lineNumber":106,"author":{"gitId":"claribelho"},"content":"        for (Meal meal: myMealList.mealList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":107,"author":{"gitId":"claribelho"},"content":"            fibreCount +\u003d meal.getFiber();","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkNoOverflowForSum(fibreCount);","lastModifiedDate":"2024-04-12"},{"lineNumber":110,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Total Fiber: \" + fibreCount + \" grams\");","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"claribelho"},"content":"     * Prints the user\u0027s total fat intake of the day.","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"claribelho"},"content":"     * The method sums up the fat from meals and drinks.","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"claribelho"},"content":"    public void handleViewFat() throws ExceedTypeLongException {","lastModifiedDate":"2024-04-12"},{"lineNumber":118,"author":{"gitId":"claribelho"},"content":"        long fatCount \u003d 0;","lastModifiedDate":"2024-04-12"},{"lineNumber":119,"author":{"gitId":"claribelho"},"content":"        for (Meal meal: myMealList.mealList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":120,"author":{"gitId":"jasonlienardi"},"content":"            fatCount +\u003d meal.getFat();","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"BryanCastorius"},"content":"        for (Drink drink: myDrinkList.drinkList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":123,"author":{"gitId":"jasonlienardi"},"content":"            fatCount +\u003d drink.getFat();","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkNoOverflowForSum(fatCount);","lastModifiedDate":"2024-04-12"},{"lineNumber":126,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Total Fat: \" + fatCount + \" grams\");","lastModifiedDate":"2024-04-01"},{"lineNumber":127,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"claribelho"},"content":"     * Prints the user\u0027s total sugar intake of the day.","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"claribelho"},"content":"     * The method sums up the sugar from meals and drinks.","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"claribelho"},"content":"    public void handleViewSugar() throws ExceedTypeLongException {","lastModifiedDate":"2024-04-12"},{"lineNumber":134,"author":{"gitId":"claribelho"},"content":"        long sugarCount \u003d 0;","lastModifiedDate":"2024-04-12"},{"lineNumber":135,"author":{"gitId":"claribelho"},"content":"        for (Meal meal: myMealList.mealList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":136,"author":{"gitId":"jasonlienardi"},"content":"            sugarCount +\u003d meal.getSugar();","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"BryanCastorius"},"content":"        for (Drink drink: myDrinkList.drinkList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":139,"author":{"gitId":"jasonlienardi"},"content":"            sugarCount +\u003d drink.getSugar();","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"claribelho"},"content":"        IntegerValidation.checkNoOverflowForSum(sugarCount);","lastModifiedDate":"2024-04-12"},{"lineNumber":142,"author":{"gitId":"jasonlienardi"},"content":"        System.out.println(\"Total Sugar: \" + sugarCount + \" grams\");","lastModifiedDate":"2024-04-01"},{"lineNumber":143,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"claribelho"},"content":"     * Handles when the user is listing all meals and drinks they have inputted today.","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"claribelho"},"content":"     * Method first checks if the lists is empty.","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"jasonlienardi"},"content":"    public void handleListEverything() {","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"here\u0027s what you have consumed today\");","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"BryanCastorius"},"content":"        if (myDrinkList.drinkList.isEmpty() \u0026\u0026 myMealList.mealList.isEmpty()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":152,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"BryanCastorius"},"content":"            System.out.println();","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"BryanCastorius"},"content":"            myDrinkList.handleViewWaterIntake();","lastModifiedDate":"2024-04-10"},{"lineNumber":155,"author":{"gitId":"claribelho"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"claribelho"},"content":"            MealList.printMealList(1, myMealList.mealList);","lastModifiedDate":"2024-04-10"},{"lineNumber":157,"author":{"gitId":"BryanCastorius"},"content":"            myDrinkList.printDrinkList(myMealList.mealList.size()+1, myDrinkList.drinkList);","lastModifiedDate":"2024-04-10"},{"lineNumber":158,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println();","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"BryanCastorius"},"content":"            myDrinkList.handleViewWaterIntake();","lastModifiedDate":"2024-04-10"},{"lineNumber":160,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":161,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":162,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"       ~~~\");","lastModifiedDate":"2024-03-31"},{"lineNumber":163,"author":{"gitId":"jasonlienardi"},"content":"        myExerciseList.handleListExercises();","lastModifiedDate":"2024-04-10"},{"lineNumber":164,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":165,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":166,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":167,"author":{"gitId":"claribelho"},"content":"     * Handles when the user is listing all meals and drinks they have inputted,","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"claribelho"},"content":"     * inclusive of previously saved meals and drinks.","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"claribelho"},"content":"     * Method first checks if the lists is empty.","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"edwardhumi"},"content":"    public void handleListEverythingAll() {","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"here\u0027s what you have consumed so far\");","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"BryanCastorius"},"content":"        if (myDrinkList.drinkListAll.isEmpty() \u0026\u0026 myMealList.mealListAll.isEmpty() \u0026\u0026 myDrinkList.drinkList.isEmpty()","lastModifiedDate":"2024-04-10"},{"lineNumber":174,"author":{"gitId":"claribelho"},"content":"                \u0026\u0026 myMealList.mealList.isEmpty()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":175,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-03-31"},{"lineNumber":176,"author":{"gitId":"edwardhumi"},"content":"            System.out.println();","lastModifiedDate":"2024-03-31"},{"lineNumber":177,"author":{"gitId":"BryanCastorius"},"content":"            myDrinkList.handleViewWaterIntake();","lastModifiedDate":"2024-04-10"},{"lineNumber":178,"author":{"gitId":"edwardhumi"},"content":"        } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":179,"author":{"gitId":"claribelho"},"content":"            MealList.printMealList(1, myMealList.mealListAll);","lastModifiedDate":"2024-04-10"},{"lineNumber":180,"author":{"gitId":"claribelho"},"content":"            MealList.printMealList(myMealList.mealListAll.size() + 1, myMealList.mealList);","lastModifiedDate":"2024-04-10"},{"lineNumber":181,"author":{"gitId":"BryanCastorius"},"content":"            myDrinkList.printDrinkList(myMealList.mealListAll.size()","lastModifiedDate":"2024-04-10"},{"lineNumber":182,"author":{"gitId":"BryanCastorius"},"content":"                    + myMealList.mealList.size() + 1, myDrinkList.drinkListAll);","lastModifiedDate":"2024-04-10"},{"lineNumber":183,"author":{"gitId":"BryanCastorius"},"content":"            myDrinkList.printDrinkList(myMealList.mealListAll.size() + myMealList.mealList.size()","lastModifiedDate":"2024-04-10"},{"lineNumber":184,"author":{"gitId":"BryanCastorius"},"content":"                    + myDrinkList.drinkListAll.size() + 1, myDrinkList.drinkList);","lastModifiedDate":"2024-04-10"},{"lineNumber":185,"author":{"gitId":"jasonlienardi"},"content":"            System.out.println();","lastModifiedDate":"2024-03-18"},{"lineNumber":186,"author":{"gitId":"BryanCastorius"},"content":"            myDrinkList.handleViewWaterIntake();","lastModifiedDate":"2024-04-10"},{"lineNumber":187,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":188,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":189,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"       ~~~\");","lastModifiedDate":"2024-03-30"},{"lineNumber":190,"author":{"gitId":"jasonlienardi"},"content":"        myExerciseList.handleListExercisesAll();","lastModifiedDate":"2024-04-10"},{"lineNumber":191,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":192,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":193,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"claribelho"},"content":"     * Handles when the user is listing all meals and drinks they have consumed on a certain date.","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"claribelho"},"content":"     * Method will first extract all meals and drinks that have this corresponding date,","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"claribelho"},"content":"     * before printing.","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"claribelho"},"content":"     * @param command string inputted by the user, containing the date of which they would like to list","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"claribelho"},"content":"     * @throws InvalidDateException if the date inputted by user is invalid","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"claribelho"},"content":"    public void handleListEverythingDate(String command) throws InvalidDateException, FutureDateException,","lastModifiedDate":"2024-04-10"},{"lineNumber":202,"author":{"gitId":"claribelho"},"content":"            ParseException {","lastModifiedDate":"2024-04-10"},{"lineNumber":203,"author":{"gitId":"edwardhumi"},"content":"        String date \u003d Parser.parseListDate(command);","lastModifiedDate":"2024-04-01"},{"lineNumber":204,"author":{"gitId":"edwardhumi"},"content":"        ArrayList\u003cMeal\u003e mealListDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":205,"author":{"gitId":"claribelho"},"content":"        for (Meal m : myMealList.mealListAll) {","lastModifiedDate":"2024-04-10"},{"lineNumber":206,"author":{"gitId":"edwardhumi"},"content":"            if (m.getDate().equals(date)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":207,"author":{"gitId":"edwardhumi"},"content":"                mealListDate.add(m);","lastModifiedDate":"2024-04-01"},{"lineNumber":208,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":209,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":210,"author":{"gitId":"claribelho"},"content":"        for (Meal m : myMealList.mealList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":211,"author":{"gitId":"edwardhumi"},"content":"            if (m.getDate().equals(date)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":212,"author":{"gitId":"edwardhumi"},"content":"                mealListDate.add(m);","lastModifiedDate":"2024-04-01"},{"lineNumber":213,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":214,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":215,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":216,"author":{"gitId":"edwardhumi"},"content":"        ArrayList\u003cDrink\u003e drinkListDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":217,"author":{"gitId":"BryanCastorius"},"content":"        for (Drink d : myDrinkList.drinkListAll) {","lastModifiedDate":"2024-04-10"},{"lineNumber":218,"author":{"gitId":"edwardhumi"},"content":"            if (d.getDate().equals(date)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":219,"author":{"gitId":"edwardhumi"},"content":"                drinkListDate.add(d);","lastModifiedDate":"2024-04-01"},{"lineNumber":220,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":221,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":222,"author":{"gitId":"BryanCastorius"},"content":"        for (Drink d : myDrinkList.drinkList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":223,"author":{"gitId":"edwardhumi"},"content":"            if (d.getDate().equals(date)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":224,"author":{"gitId":"edwardhumi"},"content":"                drinkListDate.add(d);","lastModifiedDate":"2024-04-01"},{"lineNumber":225,"author":{"gitId":"edwardhumi"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":226,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":227,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":228,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"here\u0027s what you have consumed on \" + date);","lastModifiedDate":"2024-04-01"},{"lineNumber":229,"author":{"gitId":"edwardhumi"},"content":"        if (mealListDate.isEmpty() \u0026\u0026 drinkListDate.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":230,"author":{"gitId":"edwardhumi"},"content":"            System.out.println(\"  \u003e\u003e nothing so far :o\");","lastModifiedDate":"2024-04-01"},{"lineNumber":231,"author":{"gitId":"edwardhumi"},"content":"            System.out.println();","lastModifiedDate":"2024-04-01"},{"lineNumber":232,"author":{"gitId":"edwardhumi"},"content":"        } else {","lastModifiedDate":"2024-04-01"},{"lineNumber":233,"author":{"gitId":"claribelho"},"content":"            MealList.printMealList(1, mealListDate);","lastModifiedDate":"2024-04-10"},{"lineNumber":234,"author":{"gitId":"BryanCastorius"},"content":"            myDrinkList.printDrinkList(1 + mealListDate.size(), drinkListDate);","lastModifiedDate":"2024-04-10"},{"lineNumber":235,"author":{"gitId":"edwardhumi"},"content":"            System.out.println();","lastModifiedDate":"2024-04-01"},{"lineNumber":236,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":237,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":238,"author":{"gitId":"edwardhumi"},"content":"        System.out.println(\"       ~~~\");","lastModifiedDate":"2024-04-01"},{"lineNumber":239,"author":{"gitId":"jasonlienardi"},"content":"        myExerciseList.handleListExercisesDate(command);","lastModifiedDate":"2024-04-10"},{"lineNumber":240,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":241,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":242,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":243,"author":{"gitId":"claribelho"},"content":"     * Handle when user would like to clear all entries from today.","lastModifiedDate":"2024-04-02"},{"lineNumber":244,"author":{"gitId":"claribelho"},"content":"     * This includes all meals, drinks and exercise.","lastModifiedDate":"2024-04-02"},{"lineNumber":245,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":246,"author":{"gitId":"jasonlienardi"},"content":"    public void handleClear() {","lastModifiedDate":"2024-03-18"},{"lineNumber":247,"author":{"gitId":"claribelho"},"content":"        myMealList.mealList.clear();","lastModifiedDate":"2024-04-10"},{"lineNumber":248,"author":{"gitId":"BryanCastorius"},"content":"        myDrinkList.drinkList.clear();","lastModifiedDate":"2024-04-10"},{"lineNumber":249,"author":{"gitId":"BryanCastorius"},"content":"        myDrinkList.waterList.clear();","lastModifiedDate":"2024-04-10"},{"lineNumber":250,"author":{"gitId":"jasonlienardi"},"content":"        myExerciseList.exerciseList.clear();","lastModifiedDate":"2024-04-10"},{"lineNumber":251,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":252,"author":{"gitId":"claribelho"},"content":"        assert myMealList.mealList.isEmpty(): \"clearing of meal list failed\";","lastModifiedDate":"2024-04-10"},{"lineNumber":253,"author":{"gitId":"BryanCastorius"},"content":"        assert myDrinkList.drinkList.isEmpty(): \"clearing of drink list failed\";","lastModifiedDate":"2024-04-10"},{"lineNumber":254,"author":{"gitId":"jasonlienardi"},"content":"        assert myExerciseList.exerciseList.isEmpty(): \"clearing of exercise list failed\";","lastModifiedDate":"2024-04-10"},{"lineNumber":255,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":256,"author":{"gitId":"claribelho"},"content":"        System.out.println(\"All meals, drinks and exercise entries that you added to your lists today have been \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":257,"author":{"gitId":"claribelho"},"content":"                \"deleted\");","lastModifiedDate":"2024-04-15"},{"lineNumber":258,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":259,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":260,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":261,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":262,"author":{"gitId":"claribelho"},"content":"     * Handles when user would like to see what is recommended to them,","lastModifiedDate":"2024-04-02"},{"lineNumber":263,"author":{"gitId":"claribelho"},"content":"     * only regarding the calorie and water intake.","lastModifiedDate":"2024-04-02"},{"lineNumber":264,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":265,"author":{"gitId":"BryanCastorius"},"content":"    public void handleRecommendations() {","lastModifiedDate":"2024-04-02"},{"lineNumber":266,"author":{"gitId":"BryanCastorius"},"content":"        int waterIntake \u003d 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":267,"author":{"gitId":"BryanCastorius"},"content":"        for (Water water: myDrinkList.waterList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":268,"author":{"gitId":"BryanCastorius"},"content":"            waterIntake +\u003d water.getWater();","lastModifiedDate":"2024-04-02"},{"lineNumber":269,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":270,"author":{"gitId":"BryanCastorius"},"content":"        int waterDifference \u003d RECOMMEND_WATER_INTAKE - waterIntake;","lastModifiedDate":"2024-04-02"},{"lineNumber":271,"author":{"gitId":"BryanCastorius"},"content":"        if (waterIntake \u003c RECOMMEND_WATER_INTAKE) {","lastModifiedDate":"2024-04-02"},{"lineNumber":272,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"We recommend drinking more water.\\n Please drink \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":273,"author":{"gitId":"claribelho"},"content":"                    waterDifference + \" ml more water by the end of the day to hit the daily water intake goal :)\");","lastModifiedDate":"2024-04-15"},{"lineNumber":274,"author":{"gitId":"claribelho"},"content":"        } else if (waterIntake \u003e MAX_WATER_INTAKE) {","lastModifiedDate":"2024-04-15"},{"lineNumber":275,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"You drank more than 10,000ml of water today! Did you really drink so much?\\nPlease \" +","lastModifiedDate":"2024-04-15"},{"lineNumber":276,"author":{"gitId":"claribelho"},"content":"                    \"editWater if necessary, else be mindful to drink less water tomorrow :)\\n\" +","lastModifiedDate":"2024-04-15"},{"lineNumber":277,"author":{"gitId":"claribelho"},"content":"                    \"Scientifically, you should drink less than 800ml an hour !\");","lastModifiedDate":"2024-04-15"},{"lineNumber":278,"author":{"gitId":"BryanCastorius"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":279,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Great! You are on track with the water intake today!\");","lastModifiedDate":"2024-04-15"},{"lineNumber":280,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":281,"author":{"gitId":"BryanCastorius"},"content":"        System.out.println(\"    ~~\");","lastModifiedDate":"2024-04-02"},{"lineNumber":282,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":283,"author":{"gitId":"claribelho"},"content":"        long caloriesIntakeCount \u003d 0;","lastModifiedDate":"2024-04-12"},{"lineNumber":284,"author":{"gitId":"claribelho"},"content":"        for (Meal meal: myMealList.mealList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":285,"author":{"gitId":"claribelho"},"content":"            caloriesIntakeCount +\u003d meal.getCalories();","lastModifiedDate":"2024-04-12"},{"lineNumber":286,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":287,"author":{"gitId":"BryanCastorius"},"content":"        for (Drink drink: myDrinkList.drinkList) {","lastModifiedDate":"2024-04-10"},{"lineNumber":288,"author":{"gitId":"claribelho"},"content":"            caloriesIntakeCount +\u003d drink.getCalories();","lastModifiedDate":"2024-04-12"},{"lineNumber":289,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":290,"author":{"gitId":"claribelho"},"content":"        long caloriesDifference \u003d RECOMMEND_CALORIE_INTAKE - caloriesIntakeCount;","lastModifiedDate":"2024-04-12"},{"lineNumber":291,"author":{"gitId":"claribelho"},"content":"        if (caloriesIntakeCount \u003c RECOMMEND_CALORIE_INTAKE) {","lastModifiedDate":"2024-04-12"},{"lineNumber":292,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"We recommend eating more food. Please eat \" + caloriesDifference + \" more calories by\" +","lastModifiedDate":"2024-04-15"},{"lineNumber":293,"author":{"gitId":"claribelho"},"content":"                    \" today :)\");","lastModifiedDate":"2024-04-15"},{"lineNumber":294,"author":{"gitId":"claribelho"},"content":"        } else if (caloriesIntakeCount \u003e RECOMMEND_CALORIE_INTAKE ","lastModifiedDate":"2024-04-12"},{"lineNumber":295,"author":{"gitId":"claribelho"},"content":"                   \u0026\u0026 caloriesIntakeCount \u003c RECOMMEND_CALORIE_INTAKE + 200) {","lastModifiedDate":"2024-04-12"},{"lineNumber":296,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"Great! You are on track with the calorie intake for the day!\");","lastModifiedDate":"2024-04-15"},{"lineNumber":297,"author":{"gitId":"BryanCastorius"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":298,"author":{"gitId":"claribelho"},"content":"            System.out.println(\"You ate \" + -caloriesDifference","lastModifiedDate":"2024-04-15"},{"lineNumber":299,"author":{"gitId":"claribelho"},"content":"                    + \" calories above the recommended calorie intake amount, consider exercising!\");","lastModifiedDate":"2024-04-12"},{"lineNumber":300,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":301,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":302,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"edwardhumi":46,"jasonlienardi":32,"BryanCastorius":43,"claribelho":181}},{"path":"src/main/java/seedu/fitnus/validator/IntegerValidation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.validator;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.ExceedTypeLongException;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.NegativeValueException;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.NonPositiveValueException;","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":" * Validates whether an integer value complies with the condition stated.","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"public class IntegerValidation {","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"     * Validates whether the integer value is a positive integer.","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"     * @param value integer value to check","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"jasonlienardi"},"content":"     * @throws NonPositiveValueException if the value is less than or equals to zero","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"jasonlienardi"},"content":"    public static void checkIntegerGreaterThanZero (int value) throws NonPositiveValueException {","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"        if (value \u003c\u003d 0) {","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"jasonlienardi"},"content":"            throw new NonPositiveValueException();","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"jasonlienardi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"jasonlienardi"},"content":"    public static void checkIntegerGreaterOrEqualThanZero (int value) throws NegativeValueException {","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"jasonlienardi"},"content":"        if (value \u003c 0) {","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"jasonlienardi"},"content":"            throw new NegativeValueException();","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"jasonlienardi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"jasonlienardi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"    public static void checkNoOverflowForSum(long value) throws ExceedTypeLongException {","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"        if (value \u003c 0) {","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"            throw new ExceedTypeLongException();","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"jasonlienardi":10,"claribelho":25}},{"path":"src/test/java/seedu/fitnus/drink/DrinkListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.drink;","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.date.Date;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.ExceedTypeIntException;","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.IncompleteDeleteException;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.IncompleteDrinkException;","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.IncompleteEditException;","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.InvalidListIndexException;","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.NonPositiveValueException;","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.UnregisteredDrinkException;","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"public class DrinkListTest {","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"    DrinkList testerDrinkList;","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"    String todayDate;","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"    ArrayList\u003cDrink\u003e testDrinkList;","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"    ArrayList\u003cDrink\u003e testDrinkListAll;","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"    public void setUp() {","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"        testerDrinkList \u003d new DrinkList();","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"        testDrinkList \u003d testerDrinkList.drinkList;","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"        testDrinkListAll \u003d testerDrinkList.drinkListAll;","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"        todayDate \u003d currentDate.getDate();","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"        testDrinkList.add(new Drink(\"kopi\", 100, todayDate));","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"    public void handleDrink_validInputs_correctlyAddDrink() throws IncompleteDrinkException,","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"            UnregisteredDrinkException, NonPositiveValueException, ExceedTypeIntException {","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"        String command \u003d \"drink d/kopi s/500\";","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"        testerDrinkList.handleDrink(command);","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"        assertEquals(\"kopi\", testDrinkList.get(1).getName());","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"        assertEquals(500, testDrinkList.get(1).getDrinkVolumeSize());","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"    ","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"    public void handleListDrinks_emptyList_printListAccurate() {","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"        testDrinkList.clear();","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"        testerDrinkList.handleListDrinks();","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"        String expectedOutput \u003d \"here\u0027s what you have drank today\" + System.lineSeparator()  +","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"                \"  \u003e\u003e nothing so far :o\";","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"    public void handleListDrinks_validList_printListAccurate() {","lastModifiedDate":"2024-04-12"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"        testerDrinkList.handleListDrinks();","lastModifiedDate":"2024-04-12"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"        String expectedOutput \u003d \"here\u0027s what you have drank today\" + System.lineSeparator() +","lastModifiedDate":"2024-04-12"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"                \"1. kopi (volume: 100ml) | date: \" + todayDate + System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"                \"Total water intake today: 0 ml\";","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-12"},{"lineNumber":77,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"    public void handleEditDrinkServingSize_validCommand_editDrinkSuccessful() throws InvalidListIndexException,","lastModifiedDate":"2024-04-12"},{"lineNumber":81,"author":{"gitId":"claribelho"},"content":"            IncompleteEditException, NonPositiveValueException {","lastModifiedDate":"2024-04-12"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"        String command \u003d \"editDrink 1 s/100000000\";","lastModifiedDate":"2024-04-12"},{"lineNumber":83,"author":{"gitId":"claribelho"},"content":"        testerDrinkList.handleEditDrinkServingSize(command);","lastModifiedDate":"2024-04-12"},{"lineNumber":84,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":85,"author":{"gitId":"claribelho"},"content":"        int drinkIndex \u003d 0;","lastModifiedDate":"2024-04-12"},{"lineNumber":86,"author":{"gitId":"claribelho"},"content":"        assertEquals(\"kopi\", testDrinkList.get(drinkIndex).getName());","lastModifiedDate":"2024-04-12"},{"lineNumber":87,"author":{"gitId":"claribelho"},"content":"        assertEquals(100000000, testDrinkList.get(drinkIndex).getDrinkVolumeSize());","lastModifiedDate":"2024-04-12"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":89,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":90,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":91,"author":{"gitId":"claribelho"},"content":"    public void handleDeleteDrink_invalidDrinkIndex_exceptionThrown() throws InvalidListIndexException {","lastModifiedDate":"2024-04-12"},{"lineNumber":92,"author":{"gitId":"claribelho"},"content":"        Exception exception \u003d assertThrows(InvalidListIndexException.class, () -\u003e {","lastModifiedDate":"2024-04-12"},{"lineNumber":93,"author":{"gitId":"claribelho"},"content":"            String command \u003d \"deleteDrink 5\";","lastModifiedDate":"2024-04-12"},{"lineNumber":94,"author":{"gitId":"claribelho"},"content":"            testerDrinkList.handleDeleteDrink(command);","lastModifiedDate":"2024-04-12"},{"lineNumber":95,"author":{"gitId":"claribelho"},"content":"        });","lastModifiedDate":"2024-04-12"},{"lineNumber":96,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":97,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":98,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":99,"author":{"gitId":"claribelho"},"content":"    public void handleDeleteDrink_validCommand_deleteDrinkSuccessful() throws InvalidListIndexException,","lastModifiedDate":"2024-04-12"},{"lineNumber":100,"author":{"gitId":"claribelho"},"content":"            IncompleteDeleteException {","lastModifiedDate":"2024-04-12"},{"lineNumber":101,"author":{"gitId":"claribelho"},"content":"        String command \u003d \"deleteDrink 1\";","lastModifiedDate":"2024-04-12"},{"lineNumber":102,"author":{"gitId":"claribelho"},"content":"        testerDrinkList.handleDeleteDrink(command);","lastModifiedDate":"2024-04-12"},{"lineNumber":103,"author":{"gitId":"claribelho"},"content":"        assertEquals(0, testDrinkList.size());","lastModifiedDate":"2024-04-12"},{"lineNumber":104,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":105,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"claribelho":105}},{"path":"src/test/java/seedu/fitnus/exercise/ExerciseListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.exercise;","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.date.Date;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.ExceedTypeLongException;","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.IncompleteDeleteException;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.IncompleteExerciseException;","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.InvalidListIndexException;","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.NonPositiveValueException;","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.UnregisteredExerciseException;","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"public class ExerciseListTest {","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"    ExerciseList testerExerciseList;","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"    String todayDate;","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"    ArrayList\u003cExercise\u003e testExerciseList;","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"    ArrayList\u003cExercise\u003e testExerciseListAll;","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"    public void setUp() throws UnregisteredExerciseException {","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"        testerExerciseList \u003d new ExerciseList();","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"        testExerciseList \u003d testerExerciseList.exerciseList;","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"        testExerciseListAll \u003d testerExerciseList.exerciseListAll;","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"        todayDate \u003d currentDate.getDate();","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"        testExerciseList.add(new Exercise(\"swimming\", 20, ExerciseIntensity.HIGH, todayDate));","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"    public void handleExercise_validInputs_correctlyAddExercise() throws IncompleteExerciseException,","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"            UnregisteredExerciseException, NonPositiveValueException {","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"        String command \u003d \"exercise e/running d/30 i/HIGH\";","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"        testerExerciseList.handleExercise(command);","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"        assertEquals(\"running\", testExerciseList.get(1).getName());","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"        assertEquals(30, testExerciseList.get(1).getDuration());","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"        assertEquals(ExerciseIntensity.HIGH, testExerciseList.get(1).getIntensity());","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"    public void handleViewCaloriesBurnt_correctCalorieBurntCalculation_viewCaloriesBurntAccurate()","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"            throws ExceedTypeLongException {","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"        testerExerciseList.handleCaloriesBurnt();","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"        String expectedOutput \u003d \"Total calories burnt: 240 kcal\";","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"        assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"    public void handleListExercise_emptyList_printListAccurate() {","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"        testExerciseList.clear();","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"        testerExerciseList.handleListExercises();","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"        String expectedOutput \u003d \"here\u0027s the exercises you\u0027ve done today\" + System.lineSeparator()  +","lastModifiedDate":"2024-04-12"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"                \"  \u003e\u003e nothing so far :o\";","lastModifiedDate":"2024-04-12"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-12"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"    public void handleListExercise_validList_printListAccurate() {","lastModifiedDate":"2024-04-12"},{"lineNumber":77,"author":{"gitId":"claribelho"},"content":"        testerExerciseList.handleListExercises();","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"        String expectedOutput \u003d \"here\u0027s the exercises you\u0027ve done today\" + System.lineSeparator() +","lastModifiedDate":"2024-04-12"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"                \"1. swimming | duration: 20 | intensity: HIGH | date: \" + todayDate;","lastModifiedDate":"2024-04-12"},{"lineNumber":81,"author":{"gitId":"claribelho"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-12"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":83,"author":{"gitId":"claribelho"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-12"},{"lineNumber":84,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":85,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":86,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":87,"author":{"gitId":"claribelho"},"content":"    public void handleDeleteExercise_validCommand_deleteMealSuccessful() throws InvalidListIndexException,","lastModifiedDate":"2024-04-12"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"            IncompleteDeleteException {","lastModifiedDate":"2024-04-12"},{"lineNumber":89,"author":{"gitId":"claribelho"},"content":"        String command \u003d \"deleteExercise 1\";","lastModifiedDate":"2024-04-12"},{"lineNumber":90,"author":{"gitId":"claribelho"},"content":"        testerExerciseList.handleDeleteExercise(command);","lastModifiedDate":"2024-04-12"},{"lineNumber":91,"author":{"gitId":"claribelho"},"content":"        assertEquals(0, testExerciseList.size());","lastModifiedDate":"2024-04-12"},{"lineNumber":92,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":93,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"claribelho":93}},{"path":"src/test/java/seedu/fitnus/meal/MealListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.meal;","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.date.Date;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.IncompleteDeleteException;","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.IncompleteEditException;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.IncompleteMealException;","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.InvalidListIndexException;","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.NonPositiveValueException;","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.UnregisteredMealException;","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"public class MealListTest {","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"    MealList testerMealList;","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"    String todayDate;","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"    ArrayList\u003cMeal\u003e testMealList;","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"    ArrayList\u003cMeal\u003e testMealListAll;","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"    public void setUp() {","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"        testerMealList \u003d new MealList();","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"        testMealList \u003d testerMealList.mealList;","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"        testMealListAll \u003d testerMealList.mealListAll;","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"        todayDate \u003d currentDate.getDate();","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"        testMealList.add(new Meal(\"kaya toast\", 4, todayDate));","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"        testMealList.add(new Meal(\"laksa\", 10, todayDate));","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"    public void handleMeal_validInputs_correctlyAddMeal() throws IncompleteMealException, UnregisteredMealException,","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"            NonPositiveValueException {","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"        String command \u003d \"eat m/kaya toast s/3\";","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"        testerMealList.handleMeal(command);","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"        assertFalse(testMealList.isEmpty());","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"        assertEquals(\"kaya toast\", testMealList.get(2).getName());","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"        assertEquals(3, testMealList.get(2).getServingSize());","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"    public void handleListMeals_emptyList_printListAccurate() {","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"        testMealList.clear();","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"        testerMealList.handleListMeals();","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"        String expectedOutput \u003d \"here\u0027s what you have eaten today\" + System.lineSeparator() +","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"                \"  \u003e\u003e nothing so far :o\";","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"    public void handleListMeals_validList_printListAccurate() {","lastModifiedDate":"2024-04-12"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"        testerMealList.handleListMeals();","lastModifiedDate":"2024-04-12"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"        String expectedOutput \u003d \"here\u0027s what you have eaten today\" + System.lineSeparator() +","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"                \"1. kaya toast (serving size: 4) | date: \" + todayDate + System.lineSeparator() +","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"                \"2. laksa (serving size: 10) | date: \" + todayDate ;","lastModifiedDate":"2024-04-12"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-12"},{"lineNumber":77,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-12"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":81,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"    public void handleEditMealServingSize_invalidMealIndex_exceptionThrown() throws InvalidListIndexException {","lastModifiedDate":"2024-04-12"},{"lineNumber":83,"author":{"gitId":"claribelho"},"content":"        Exception exception \u003d assertThrows(InvalidListIndexException.class, () -\u003e {","lastModifiedDate":"2024-04-12"},{"lineNumber":84,"author":{"gitId":"claribelho"},"content":"            String command \u003d \"editMeal 5 s/10\";","lastModifiedDate":"2024-04-12"},{"lineNumber":85,"author":{"gitId":"claribelho"},"content":"            testerMealList.handleEditMealServingSize(command);","lastModifiedDate":"2024-04-12"},{"lineNumber":86,"author":{"gitId":"claribelho"},"content":"        });","lastModifiedDate":"2024-04-12"},{"lineNumber":87,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":89,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":90,"author":{"gitId":"claribelho"},"content":"    public void handleEditMealServingSize_validCommand_editMealSuccessful() throws InvalidListIndexException,","lastModifiedDate":"2024-04-12"},{"lineNumber":91,"author":{"gitId":"claribelho"},"content":"            IncompleteEditException, NonPositiveValueException {","lastModifiedDate":"2024-04-12"},{"lineNumber":92,"author":{"gitId":"claribelho"},"content":"        String command \u003d \"editMeal 2 s/1000000\";","lastModifiedDate":"2024-04-12"},{"lineNumber":93,"author":{"gitId":"claribelho"},"content":"        testerMealList.handleEditMealServingSize(command);","lastModifiedDate":"2024-04-12"},{"lineNumber":94,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":95,"author":{"gitId":"claribelho"},"content":"        int mealIndex \u003d 2 - 1;","lastModifiedDate":"2024-04-12"},{"lineNumber":96,"author":{"gitId":"claribelho"},"content":"        assertEquals(\"laksa\", testMealList.get(mealIndex).getName());","lastModifiedDate":"2024-04-12"},{"lineNumber":97,"author":{"gitId":"claribelho"},"content":"        assertEquals(1000000, testMealList.get(mealIndex).getServingSize());","lastModifiedDate":"2024-04-12"},{"lineNumber":98,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":99,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":100,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":101,"author":{"gitId":"claribelho"},"content":"    public void handleDeleteMeal_noIndexInput_exceptionThrown() throws InvalidListIndexException,","lastModifiedDate":"2024-04-12"},{"lineNumber":102,"author":{"gitId":"claribelho"},"content":"            IncompleteDeleteException {","lastModifiedDate":"2024-04-12"},{"lineNumber":103,"author":{"gitId":"claribelho"},"content":"        Exception exception \u003d assertThrows(IncompleteDeleteException.class, () -\u003e {","lastModifiedDate":"2024-04-12"},{"lineNumber":104,"author":{"gitId":"claribelho"},"content":"            String command \u003d \"deleteMeal \";","lastModifiedDate":"2024-04-12"},{"lineNumber":105,"author":{"gitId":"claribelho"},"content":"            testerMealList.handleDeleteMeal(command);","lastModifiedDate":"2024-04-12"},{"lineNumber":106,"author":{"gitId":"claribelho"},"content":"        });","lastModifiedDate":"2024-04-12"},{"lineNumber":107,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":108,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":109,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":110,"author":{"gitId":"claribelho"},"content":"    public void handleDeleteMeal_noIntegerInput_exceptionThrown() throws InvalidListIndexException,","lastModifiedDate":"2024-04-12"},{"lineNumber":111,"author":{"gitId":"claribelho"},"content":"            IncompleteDeleteException {","lastModifiedDate":"2024-04-12"},{"lineNumber":112,"author":{"gitId":"claribelho"},"content":"        Exception exception \u003d assertThrows(NumberFormatException.class, () -\u003e {","lastModifiedDate":"2024-04-12"},{"lineNumber":113,"author":{"gitId":"claribelho"},"content":"            String command \u003d \"deleteMeal         \";","lastModifiedDate":"2024-04-12"},{"lineNumber":114,"author":{"gitId":"claribelho"},"content":"            testerMealList.handleDeleteMeal(command);","lastModifiedDate":"2024-04-12"},{"lineNumber":115,"author":{"gitId":"claribelho"},"content":"        });","lastModifiedDate":"2024-04-12"},{"lineNumber":116,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":117,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":118,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":119,"author":{"gitId":"claribelho"},"content":"    public void handleDeleteMeal_validCommand_deleteMealSuccessful() throws InvalidListIndexException,","lastModifiedDate":"2024-04-12"},{"lineNumber":120,"author":{"gitId":"claribelho"},"content":"            IncompleteDeleteException {","lastModifiedDate":"2024-04-12"},{"lineNumber":121,"author":{"gitId":"claribelho"},"content":"        String command \u003d \"deleteMeal 1\";","lastModifiedDate":"2024-04-12"},{"lineNumber":122,"author":{"gitId":"claribelho"},"content":"        testerMealList.handleDeleteMeal(command);","lastModifiedDate":"2024-04-12"},{"lineNumber":123,"author":{"gitId":"claribelho"},"content":"        assertEquals(1, testMealList.size());","lastModifiedDate":"2024-04-12"},{"lineNumber":124,"author":{"gitId":"claribelho"},"content":"        assertEquals(\"laksa\", testMealList.get(0).getName());","lastModifiedDate":"2024-04-12"},{"lineNumber":125,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":126,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"claribelho":126}},{"path":"src/test/java/seedu/fitnus/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"edwardhumi"},"content":"package seedu.fitnus.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"edwardhumi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.FutureDateException;","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.exception.IncompleteEditException;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.exception.IncompleteEditWaterException;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.IncompleteExerciseException;","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"BryanCastorius"},"content":"import seedu.fitnus.exception.IncompleteInfoException;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.InvalidDateException;","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.NegativeValueException;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.NonPositiveValueException;","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.StorageErrorException;","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.UnregisteredDrinkException;","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"edwardhumi"},"content":"import seedu.fitnus.exception.UnregisteredExerciseException;","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exception.UnregisteredMealException;","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"jasonlienardi"},"content":"import seedu.fitnus.exercise.ExerciseIntensity;","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"import java.text.ParseException;","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"edwardhumi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"edwardhumi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"edwardhumi"},"content":"public class ParserTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"    public void parseInfoMeal_unregisteredMeal_exceptionThrown() throws IncompleteInfoException {","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"edwardhumi"},"content":"        String command \u003d \"infoMeal blablabla\";","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"edwardhumi"},"content":"            Parser.parseInfoMeal(command);","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"edwardhumi"},"content":"        } catch (UnregisteredMealException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"edwardhumi"},"content":"            assertTrue(true);","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"edwardhumi"},"content":"    public void parseInfoExercise_unregisteredExercise_exceptionThrown() throws IncompleteInfoException {","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"edwardhumi"},"content":"        String command \u003d \"infoExercise blabla\";","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"edwardhumi"},"content":"            String infoExercise \u003d Parser.parseInfoExercise(command);","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"edwardhumi"},"content":"        } catch (UnregisteredExerciseException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"edwardhumi"},"content":"            assertTrue(true);","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"edwardhumi"},"content":"    public void parseInfoDrink_unregisteredDrink_exceptionThrown() throws IncompleteInfoException {","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"edwardhumi"},"content":"        String command \u003d \"infoDrink blabla\";","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"edwardhumi"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"edwardhumi"},"content":"            String infoDrink \u003d Parser.parseInfoDrink(command);","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"edwardhumi"},"content":"        } catch (UnregisteredDrinkException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"edwardhumi"},"content":"            assertTrue(true);","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"edwardhumi"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"jasonlienardi"},"content":"    public void parseEditMeal_validInputs_success() throws IncompleteEditException, NonPositiveValueException {","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"edwardhumi"},"content":"        String command \u003d \"editMeal 3 s/120\";","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"edwardhumi"},"content":"        Parser.parseEditMeal(command);","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"edwardhumi"},"content":"        // Meal list starts from 1, however the array index starts from 0, hence the n - 1","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(2, Parser.editMealIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(120, Parser.editMealSize);","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"jasonlienardi"},"content":"    public void parseEditDrink_validInputs_success() throws IncompleteEditException, NonPositiveValueException {","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"edwardhumi"},"content":"        String command \u003d \"editDrink 1 s/500\";","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"edwardhumi"},"content":"        Parser.parseEditDrink(command);","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"edwardhumi"},"content":"        // Drink list starts from 1, however the array index starts from 0, hence the n - 1","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(0, Parser.editDrinkIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(500, Parser.editDrinkSize);","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"BryanCastorius"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"jasonlienardi"},"content":"    public void parseEditDrink_unregisteredMeal_exceptionThrown() throws NonPositiveValueException {","lastModifiedDate":"2024-04-12"},{"lineNumber":76,"author":{"gitId":"BryanCastorius"},"content":"        String command \u003d \"editDrink s/100\";","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"BryanCastorius"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"BryanCastorius"},"content":"            Parser.parseEditDrink(command);","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"BryanCastorius"},"content":"        } catch (IncompleteEditException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"BryanCastorius"},"content":"            assertTrue(true);","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"BryanCastorius"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"BryanCastorius"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"BryanCastorius"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"BryanCastorius"},"content":"    public void parseEditWater_validInputs_success() throws NonPositiveValueException,","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"BryanCastorius"},"content":"            IncompleteEditWaterException {","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"claribelho"},"content":"        String command2 \u003d \"editWater s/500\";","lastModifiedDate":"2024-04-15"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"        Parser.parseEditWater(command2);","lastModifiedDate":"2024-04-15"},{"lineNumber":89,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(500, Parser.editWaterSize);","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"claribelho"},"content":"    public void parseMealStorage_validInputs_success() throws NonPositiveValueException, StorageErrorException {","lastModifiedDate":"2024-04-15"},{"lineNumber":94,"author":{"gitId":"edwardhumi"},"content":"        String data \u003d \"chicken rice,1,12-02-2024\";","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"edwardhumi"},"content":"        Parser.parseMealStorage(data);","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"chicken rice\", Parser.mealStorageDescription);","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(1, Parser.mealStorageSize);","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"12-02-2024\", Parser.mealStorageDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"claribelho"},"content":"    public void parseDrinkStorage_validInputs_success() throws NonPositiveValueException, StorageErrorException {","lastModifiedDate":"2024-04-15"},{"lineNumber":103,"author":{"gitId":"edwardhumi"},"content":"        String data \u003d \"milo,200,12-02-2024\";","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"edwardhumi"},"content":"        Parser.parseDrinkStorage(data);","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"milo\", Parser.drinkStorageDescription);","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(200, Parser.drinkStorageSize);","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"12-02-2024\", Parser.drinkStorageDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"claribelho"},"content":"    public void parseExerciseStorage_validInputs_success() throws NonPositiveValueException, StorageErrorException {","lastModifiedDate":"2024-04-15"},{"lineNumber":112,"author":{"gitId":"edwardhumi"},"content":"        String data \u003d \"cycling,100,LOW,29-02-2024\";","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"edwardhumi"},"content":"        Parser.parseExerciseStorage(data);","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"cycling\", Parser.exerciseStorageDescription);","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(100, Parser.exerciseStorageDuration);","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(ExerciseIntensity.LOW, Parser.exerciseStorageIntensity);","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"29-02-2024\", Parser.exerciseStorageDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"jasonlienardi"},"content":"    public void parseExercise_validInputs_success() throws IncompleteExerciseException, NonPositiveValueException,","lastModifiedDate":"2024-04-12"},{"lineNumber":122,"author":{"gitId":"edwardhumi"},"content":"            UnregisteredExerciseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"edwardhumi"},"content":"        String command \u003d \"exercise e/cycling d/100 i/LOW\";","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"edwardhumi"},"content":"        Parser.parseExercise(command);","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"cycling\", Parser.exerciseDescription);","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(100, Parser.exerciseDuration);","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(ExerciseIntensity.LOW, Parser.exerciseIntensity);","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"jasonlienardi"},"content":"    public void parseMealNutrient_validInputs_success() throws NegativeValueException {","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"edwardhumi"},"content":"        String data \u003d \"fried rice,100,10,9,8,7,6\";","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"edwardhumi"},"content":"        Parser.parseMealNutrient(data);","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"fried rice\", Parser.mealNutrientDescription);","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(100, Parser.mealNutrientCalories);","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(10, Parser.mealNutrientCarbs);","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(9, Parser.mealNutrientProtein);","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(8, Parser.mealNutrientFat);","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(7, Parser.mealNutrientFiber);","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(6, Parser.mealNutrientSugar);","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"jasonlienardi"},"content":"    public void parseDrinkNutrient_validInputs_success() throws NegativeValueException {","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"edwardhumi"},"content":"        String data \u003d \"Guava Juice,143,38,10,9,5\";","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"edwardhumi"},"content":"        Parser.parseDrinkNutrient(data);","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"guava juice\", Parser.drinkNutrientDescription);","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(143, Parser.drinkNutrientCalories);","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(38, Parser.drinkNutrientCarbs);","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(10, Parser.drinkNutrientSugar);","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(9, Parser.drinkNutrientProtein);","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(5, Parser.drinkNutrientFat);","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"jasonlienardi"},"content":"    public void parseExerciseCalories_validInputs_success() throws NonPositiveValueException {","lastModifiedDate":"2024-04-12"},{"lineNumber":157,"author":{"gitId":"edwardhumi"},"content":"        String data \u003d \"Running,14,10,7\";","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"edwardhumi"},"content":"        Parser.parseExerciseCalories(data);","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"running\", Parser.exerciseCaloriesDescription);","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(14, Parser.exerciseCaloriesHigh);","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(10, Parser.exerciseCaloriesMedium);","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(7, Parser.exerciseCaloriesLow);","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"edwardhumi"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"edwardhumi"},"content":"    @Test","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"claribelho"},"content":"    public void parseListDate_validInputs_success() throws InvalidDateException, FutureDateException, ParseException {","lastModifiedDate":"2024-04-10"},{"lineNumber":167,"author":{"gitId":"edwardhumi"},"content":"        String command \u003d \"listMeals d/12-02-2024\";","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"edwardhumi"},"content":"        String date \u003d Parser.parseListDate(command);","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"edwardhumi"},"content":"        assertEquals(\"12-02-2024\", date);","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"edwardhumi"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"edwardhumi"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"edwardhumi":129,"jasonlienardi":13,"BryanCastorius":17,"claribelho":12}},{"path":"src/test/java/seedu/fitnus/user/UserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"claribelho"},"content":"package seedu.fitnus.user;","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.date.Date;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.drink.Drink;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.ExceedTypeLongException;","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exercise.Exercise;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exercise.ExerciseIntensity;","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.meal.Meal;","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"claribelho"},"content":"import seedu.fitnus.exception.UnregisteredExerciseException;","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"claribelho"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"claribelho"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"claribelho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"claribelho"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"claribelho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"claribelho"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"claribelho"},"content":"public class UserTest {","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"claribelho"},"content":"    User testUser;","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"claribelho"},"content":"    String todayDate;","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"claribelho"},"content":"    ArrayList\u003cMeal\u003e testMealList;","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"claribelho"},"content":"    ArrayList\u003cDrink\u003e testDrinkList;","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"claribelho"},"content":"    ArrayList\u003cExercise\u003e testExerciseList;","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"claribelho"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"claribelho"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"claribelho"},"content":"    public void setUp() throws UnregisteredExerciseException {","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"claribelho"},"content":"        testUser \u003d new User();","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"claribelho"},"content":"        testMealList \u003d testUser.myMealList.mealList;","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"claribelho"},"content":"        testDrinkList \u003d testUser.myDrinkList.drinkList;","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"claribelho"},"content":"        testExerciseList \u003d testUser.myExerciseList.exerciseList;","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"claribelho"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"claribelho"},"content":"        todayDate \u003d currentDate.getDate();","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"claribelho"},"content":"        testMealList.add(new Meal(\"kaya toast\", 4, todayDate));","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"claribelho"},"content":"        testMealList.add(new Meal(\"laksa\", 10, todayDate));","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"claribelho"},"content":"        testDrinkList.add(new Drink(\"kopi\", 100, todayDate));","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"claribelho"},"content":"        testExerciseList.add(new Exercise(\"swimming\", 20, ExerciseIntensity.HIGH, todayDate));","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"claribelho"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"claribelho"},"content":"    public void handleViewCalories_correctCalorieCalculation_viewCaloriesAccurate() throws ExceedTypeLongException {","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"claribelho"},"content":"        testUser.handleViewCalories();","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"claribelho"},"content":"        String expectedOutput \u003d \"Total Calories: 5507 kcal\";","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"claribelho"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"claribelho"},"content":"        assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"claribelho"},"content":"    public void handleViewCarbohydrates_correctCarbsCalculation_viewCarbsAccurate() throws ExceedTypeLongException {","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"claribelho"},"content":"        testUser.handleViewCarbohydrates();","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"claribelho"},"content":"        String expectedOutput \u003d \"Total Carbohydrates: 912 grams\";","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"claribelho"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"claribelho"},"content":"        assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"claribelho"},"content":"    public void handleViewProtein_correctProteinCalculation_viewProteinAccurate() throws ExceedTypeLongException {","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"claribelho"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-04-12"},{"lineNumber":69,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":70,"author":{"gitId":"claribelho"},"content":"        testUser.handleViewProteins();","lastModifiedDate":"2024-04-12"},{"lineNumber":71,"author":{"gitId":"claribelho"},"content":"        String expectedOutput \u003d \"Total Proteins: 215 grams\";","lastModifiedDate":"2024-04-12"},{"lineNumber":72,"author":{"gitId":"claribelho"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"claribelho"},"content":"        assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":76,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":77,"author":{"gitId":"claribelho"},"content":"    public void handleViewFiber_correctFiberCalculation_viewFiberAccurate() throws ExceedTypeLongException {","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"claribelho"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-04-12"},{"lineNumber":79,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":80,"author":{"gitId":"claribelho"},"content":"        testUser.handleViewFiber();","lastModifiedDate":"2024-04-12"},{"lineNumber":81,"author":{"gitId":"claribelho"},"content":"        String expectedOutput \u003d \"Total Fiber: 80 grams\";","lastModifiedDate":"2024-04-12"},{"lineNumber":82,"author":{"gitId":"claribelho"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-12"},{"lineNumber":83,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":84,"author":{"gitId":"claribelho"},"content":"        assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2024-04-12"},{"lineNumber":85,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":86,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":87,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":88,"author":{"gitId":"claribelho"},"content":"    public void handleViewFat_correctFatCalculation_viewFatAccurate() throws ExceedTypeLongException {","lastModifiedDate":"2024-04-12"},{"lineNumber":89,"author":{"gitId":"claribelho"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-04-12"},{"lineNumber":90,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":91,"author":{"gitId":"claribelho"},"content":"        testUser.handleViewFat();","lastModifiedDate":"2024-04-12"},{"lineNumber":92,"author":{"gitId":"claribelho"},"content":"        String expectedOutput \u003d \"Total Fat: 129 grams\";","lastModifiedDate":"2024-04-12"},{"lineNumber":93,"author":{"gitId":"claribelho"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-12"},{"lineNumber":94,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":95,"author":{"gitId":"claribelho"},"content":"        assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2024-04-12"},{"lineNumber":96,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":97,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":98,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":99,"author":{"gitId":"claribelho"},"content":"    public void handleViewSugar_correctSugarCalculation_viewSugarAccurate() throws ExceedTypeLongException {","lastModifiedDate":"2024-04-12"},{"lineNumber":100,"author":{"gitId":"claribelho"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-04-12"},{"lineNumber":101,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":102,"author":{"gitId":"claribelho"},"content":"        testUser.handleViewSugar();","lastModifiedDate":"2024-04-12"},{"lineNumber":103,"author":{"gitId":"claribelho"},"content":"        String expectedOutput \u003d \"Total Sugar: 106 grams\";","lastModifiedDate":"2024-04-12"},{"lineNumber":104,"author":{"gitId":"claribelho"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-12"},{"lineNumber":105,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":106,"author":{"gitId":"claribelho"},"content":"        assertEquals(actualOutput, expectedOutput);","lastModifiedDate":"2024-04-12"},{"lineNumber":107,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":108,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":109,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":110,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":111,"author":{"gitId":"claribelho"},"content":"    public void handleListEverything_allEmptyLists_printListAccurate() {","lastModifiedDate":"2024-04-12"},{"lineNumber":112,"author":{"gitId":"claribelho"},"content":"        testMealList.clear();","lastModifiedDate":"2024-04-12"},{"lineNumber":113,"author":{"gitId":"claribelho"},"content":"        testDrinkList.clear();","lastModifiedDate":"2024-04-12"},{"lineNumber":114,"author":{"gitId":"claribelho"},"content":"        testExerciseList.clear();","lastModifiedDate":"2024-04-12"},{"lineNumber":115,"author":{"gitId":"claribelho"},"content":"        testUser.handleListEverything();","lastModifiedDate":"2024-04-12"},{"lineNumber":116,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":117,"author":{"gitId":"claribelho"},"content":"        String expectedOutput \u003d \"here\u0027s what you have consumed today\" + System.lineSeparator() +","lastModifiedDate":"2024-04-12"},{"lineNumber":118,"author":{"gitId":"claribelho"},"content":"                \"  \u003e\u003e nothing so far :o\" + System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2024-04-12"},{"lineNumber":119,"author":{"gitId":"claribelho"},"content":"                \"Total water intake today: 0 ml\" + System.lineSeparator() + \"       ~~~\" + System.lineSeparator() +","lastModifiedDate":"2024-04-12"},{"lineNumber":120,"author":{"gitId":"claribelho"},"content":"                \"here\u0027s the exercises you\u0027ve done today\" + System.lineSeparator() +","lastModifiedDate":"2024-04-12"},{"lineNumber":121,"author":{"gitId":"claribelho"},"content":"                \"  \u003e\u003e nothing so far :o\";","lastModifiedDate":"2024-04-12"},{"lineNumber":122,"author":{"gitId":"claribelho"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-12"},{"lineNumber":123,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":124,"author":{"gitId":"claribelho"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-12"},{"lineNumber":125,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":126,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":127,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":128,"author":{"gitId":"claribelho"},"content":"    public void handleListEverything_validList_printListAccurate() {","lastModifiedDate":"2024-04-12"},{"lineNumber":129,"author":{"gitId":"claribelho"},"content":"        testUser.handleListEverything();","lastModifiedDate":"2024-04-12"},{"lineNumber":130,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":131,"author":{"gitId":"claribelho"},"content":"        String expectedOutput \u003d \"here\u0027s what you have consumed today\" + System.lineSeparator() +","lastModifiedDate":"2024-04-12"},{"lineNumber":132,"author":{"gitId":"claribelho"},"content":"                \"1. kaya toast (serving size: 4) | date: \" + todayDate + System.lineSeparator() +","lastModifiedDate":"2024-04-12"},{"lineNumber":133,"author":{"gitId":"claribelho"},"content":"                \"2. laksa (serving size: 10) | date: \" + todayDate + System.lineSeparator() +","lastModifiedDate":"2024-04-12"},{"lineNumber":134,"author":{"gitId":"claribelho"},"content":"                \"3. kopi (volume: 100ml) | date: \" + todayDate + System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2024-04-12"},{"lineNumber":135,"author":{"gitId":"claribelho"},"content":"                \"Total water intake today: 0 ml\" + System.lineSeparator() + \"       ~~~\" + System.lineSeparator() +","lastModifiedDate":"2024-04-12"},{"lineNumber":136,"author":{"gitId":"claribelho"},"content":"                \"here\u0027s the exercises you\u0027ve done today\" + System.lineSeparator() +","lastModifiedDate":"2024-04-12"},{"lineNumber":137,"author":{"gitId":"claribelho"},"content":"                \"1. swimming | duration: 20 | intensity: HIGH | date: \" + todayDate;","lastModifiedDate":"2024-04-12"},{"lineNumber":138,"author":{"gitId":"claribelho"},"content":"        String actualOutput \u003d outputStream.toString().trim();","lastModifiedDate":"2024-04-12"},{"lineNumber":139,"author":{"gitId":"claribelho"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2024-04-12"},{"lineNumber":140,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":141,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":142,"author":{"gitId":"claribelho"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":143,"author":{"gitId":"claribelho"},"content":"    public void handleClear_validCommand_clearListsSuccessful() {","lastModifiedDate":"2024-04-12"},{"lineNumber":144,"author":{"gitId":"claribelho"},"content":"        testUser.handleClear();","lastModifiedDate":"2024-04-12"},{"lineNumber":145,"author":{"gitId":"claribelho"},"content":"        assertEquals(0, testMealList.size());","lastModifiedDate":"2024-04-12"},{"lineNumber":146,"author":{"gitId":"claribelho"},"content":"        assertEquals(0, testDrinkList.size());","lastModifiedDate":"2024-04-12"},{"lineNumber":147,"author":{"gitId":"claribelho"},"content":"        assertEquals(0, testExerciseList.size());","lastModifiedDate":"2024-04-12"},{"lineNumber":148,"author":{"gitId":"claribelho"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":149,"author":{"gitId":"claribelho"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":150,"author":{"gitId":"claribelho"},"content":"}","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"claribelho":150}}]
