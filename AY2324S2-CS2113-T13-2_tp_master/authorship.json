[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"z-wenqing"},"content":"# Timetable Comparer","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ZhuSijia0711"},"content":"   |____/ \\__,_|_|\\_\\___","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"ZhuSijia0711":1,"z-wenqing":1,"-":62}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName.set(\"duke\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"ZhuSijia0711"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ZhuSijia0711":1,"john-nng":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |      Name      | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"Leong-ZM"},"content":"--------|:--------------:|:--------------:|:---------:","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"Leong-ZM"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Leong Zhe Ming | [Github](https://github.com/Leong-ZM) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"z-wenqing"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhang Wenqing | [Github](https://github.com/z-wenqing) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"ZhuSijia0711"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhu Sijia | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"john-nng"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Nguyen | [Github](https://github.com/john-nng) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"ZhuSijia0711":1,"john-nng":1,"Leong-ZM":2,"-":3,"z-wenqing":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"ZhuSijia0711"},"content":"{Describe the target user profile}: Students (NUS student?)","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...                                           |","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"ZhuSijia0711"},"content":"|--------|----------|---------------|-------------------------------------------------------------|","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"|v1.0| new user |see usage instructions| refer to them when I forget how to use the application      |","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"|v2.0| user     |find a to-do item by name| locate a to-do without having to go through the entire list |","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"ZhuSijia0711"},"content":"|    | user     |add a task to the timetable| record when a task needs to be done  |","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"ZhuSijia0711"},"content":" ","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"ZhuSijia0711":4,"-":36}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{Give a product intro}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"Leong-ZM"},"content":"2. Down the latest version of `Duke` from [here](http://link.to/duke).","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Adds a new item to the list of todo items.","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Format: `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* The `DEADLINE` can be in a natural language format.","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* The `TODO_NAME` cannot contain punctuation.  ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"`todo n/Write the rest of the User Guide d/next week`","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Add todo `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"Leong-ZM":1,"-":41}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Leong-ZM"},"content":"import seedu.duke.ui.UI;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Leong-ZM"},"content":"    static final Scanner IN \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Leong-ZM"},"content":"    static boolean isFinished \u003d false;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Leong-ZM"},"content":"    public static void setIsFinished(boolean b) {","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Leong-ZM"},"content":"        isFinished \u003d b;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Leong-ZM"},"content":"        UI.printGreeting();","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Leong-ZM"},"content":"        UserList userList \u003d new UserList();","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Leong-ZM"},"content":"        while (!isFinished) {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"john-nng"},"content":"            try {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Leong-ZM"},"content":"                String input \u003d IN.nextLine();","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"john-nng"},"content":"                Parser parser \u003d new Parser();","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Leong-ZM"},"content":"                parser.parseCommand(input, userList);","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"john-nng"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"john-nng"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Leong-ZM"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Leong-ZM"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"john-nng":8,"Leong-ZM":15,"-":8}},{"path":"src/main/java/seedu/duke/InputValidator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"john-nng"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"john-nng"},"content":"public class InputValidator {","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Leong-ZM"},"content":"     * Validates correctly formatted compare command. The expected format is","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"Leong-ZM"},"content":"     * \"compare user1 user2\"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"john-nng"},"content":"     * @param input String Input.","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Leong-ZM"},"content":"     * @throws InvalidFormatException If the input does not match the expected format.","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"john-nng"},"content":"    public static void validateCompareInput(String input) throws InvalidFormatException {","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"john-nng"},"content":"        // Define the regex pattern for the expected format with case-insensitive flag","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"john-nng"},"content":"        String regex \u003d \"(?i)^compare\\\\s+\\\\w+\\\\s+\\\\w+$\";","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"john-nng"},"content":"        if (!input.matches(regex)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Leong-ZM"},"content":"            throw new InvalidFormatException(\"[ERROR] Invalid compare format. \" +","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Leong-ZM"},"content":"                    \"Expected format: compare \u003cuser1\u003e \u003cuser2\u003e\");","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Leong-ZM"},"content":"     * Validates correctly formatted addTask command. The expected format is","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Leong-ZM"},"content":"     * \"addtask /on [date] /task [description] /from [start time] /to [start time]\" format","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Leong-ZM"},"content":"     * Note: Start and End times should be formatted as such: HH:mm","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"john-nng"},"content":"     * @param input String Input.","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Leong-ZM"},"content":"     * @throws InvalidFormatException If the input does not match the expected format.","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"john-nng"},"content":"    public static void validateAddTaskInput(String input) throws InvalidFormatException {","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"john-nng"},"content":"        // Define the regex pattern for the expected format with case-insensitive flag","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Leong-ZM"},"content":"        String regex \u003d \"(?i)^addtask\\\\s+/on\\\\s+(\\\\w+)\\\\s+/task\\\\s+(.+?)\\\\s\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Leong-ZM"},"content":"                \"+/from\\\\s+(\\\\d{1,2}:\\\\d{2})\\\\s+/to\\\\s+(\\\\d{1,2}:\\\\d{2})$\";","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"john-nng"},"content":"        if (!input.matches(regex)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"john-nng"},"content":"            throw new InvalidFormatException(\"[ERROR] Invalid addTask format. \" +","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"john-nng"},"content":"                    \"Expected format: addTask /on [day] /task [description] /from [start time] /to [start time]\");","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Leong-ZM"},"content":"     * Validates correctly formatted deleteTask command. The expected format is","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Leong-ZM"},"content":"     * \"deletetask /on [day] /index [index]\" format","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Leong-ZM"},"content":"     * Note: index is the index of the task in the task list for the given day","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"john-nng"},"content":"     * @param input String Input.","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Leong-ZM"},"content":"     * @throws InvalidFormatException If the input does not match the expected format.","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"john-nng"},"content":"    public static void validateDeleteTaskInput(String input) throws InvalidFormatException {","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"john-nng"},"content":"        // Define the regex pattern for the expected format with case-insensitive flag","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"john-nng"},"content":"        String regex \u003d \"(?i)^deletetask\\\\s+/on\\\\s+(\\\\w+)\\\\s+/index\\\\s+(\\\\d+)$\";","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"john-nng"},"content":"        if (!input.matches(regex)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"john-nng"},"content":"            throw new InvalidFormatException(\"[ERROR] Invalid deleteTask format. \" +","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"john-nng"},"content":"                    \"Expected format: deleteTask /on [day] /index [index]\");","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"Leong-ZM"},"content":"     * Validates correctly formatted addUser command. The expected format is \"adduser user\"","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"john-nng"},"content":"     * @param input String Input.","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"Leong-ZM"},"content":"     * @throws InvalidFormatException If the input does not match the expected format.","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"john-nng"},"content":"    public static void validateAddUserInput(String input) throws InvalidFormatException {","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"john-nng"},"content":"        // Define the regex pattern for the expected format with case-insensitive flag","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"john-nng"},"content":"        String regex \u003d \"(?i)^adduser\\\\s+\\\\w+$\";","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"john-nng"},"content":"        if (!input.matches(regex)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"Leong-ZM"},"content":"            throw new InvalidFormatException(\"[ERROR] Invalid addUser format. \" +","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"Leong-ZM"},"content":"                    \"Expected format: addUser \u003cdesired user\u0027s name\u003e\");","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"Leong-ZM"},"content":"     * Validates correctly formatted switch command. The expected format is \"switch user\"","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"john-nng"},"content":"     * @param input String Input.","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"Leong-ZM"},"content":"     * @throws InvalidFormatException If the input does not match the expected format.","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"john-nng"},"content":"    public static void validateSwitchInput(String input) throws InvalidFormatException {","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"john-nng"},"content":"        // Define the regex pattern for the expected format with case-insensitive flag","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"john-nng"},"content":"        String regex \u003d \"(?i)^switch\\\\s+\\\\w+$\";","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"john-nng"},"content":"        if (!input.matches(regex)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"Leong-ZM"},"content":"            throw new InvalidFormatException(\"[ERROR] Invalid switch format. \" +","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"Leong-ZM"},"content":"                    \"Expected format: switch \u003cdesired user\u0027s name\u003e\");","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"john-nng"},"content":"     * Validates correctly spelled usernames that currently exist in the user database.","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"john-nng"},"content":"     * @param input String Input.","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"Leong-ZM"},"content":"     * @throws InvalidUserException If the input does not match any current user\u0027s name in the user database.","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"Leong-ZM"},"content":"    public static void validateUserInput(String input, UserList userList) throws InvalidUserException {","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"Leong-ZM"},"content":"        if (userList.getUsers().isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"john-nng"},"content":"            throw new InvalidUserException(\"[ERROR] Current User List is empty. Please add users.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"Leong-ZM"},"content":"        for (User u : userList.getUsers()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"john-nng"},"content":"            if (u.getName().toLowerCase().equals(input)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"john-nng"},"content":"                return;","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"john-nng"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"john-nng"},"content":"        throw new InvalidUserException(\"[ERROR] Invalid User: \" + input + \". Please input a existing user name\");","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"john-nng"},"content":"     * Validates if the inputted string is an actual day.","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"john-nng"},"content":"     * @param input String Input.","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"Leong-ZM"},"content":"     * @throws InvalidDayException If the input is not an actual day.","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"john-nng"},"content":"    public static void validateDay(String input) throws InvalidDayException {","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"john-nng"},"content":"        String[] validDays \u003d new String[]{\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\"};","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"john-nng"},"content":"        for (String day : validDays) {","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"Leong-ZM"},"content":"            if (day.equalsIgnoreCase(input)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"john-nng"},"content":"                return;","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"john-nng"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"john-nng"},"content":"        throw new InvalidDayException(\"[ERROR] Invalid day. Please enter a day from Monday - Sunday.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"john-nng"},"content":"     * Validates whether a Timetable exist or not.","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"john-nng"},"content":"     * @param table inputted Timetable.","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"Leong-ZM"},"content":"     * @throws NullPointerException If the input Timetable does not exist.","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"john-nng"},"content":"    public static void validateTableExistence(Timetable table) throws NullPointerException {","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"john-nng"},"content":"        if (table \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"john-nng"},"content":"            throw new NullPointerException(\"Timetable object is null.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"john-nng"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"john-nng":106,"Leong-ZM":30}},{"path":"src/main/java/seedu/duke/InvalidDayException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"john-nng"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"john-nng"},"content":"public class InvalidDayException extends Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"john-nng"},"content":"    public InvalidDayException(String message) {","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"john-nng"},"content":"        super(message);","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"john-nng"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"john-nng":8}},{"path":"src/main/java/seedu/duke/InvalidFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"john-nng"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"john-nng"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"john-nng"},"content":" * This class represents Expections expected from the InputValidator class.","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"john-nng"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"john-nng"},"content":"public class InvalidFormatException extends Exception{","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"john-nng"},"content":"    public InvalidFormatException(String message) {","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"john-nng"},"content":"        super(message);","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"john-nng"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"john-nng":10}},{"path":"src/main/java/seedu/duke/InvalidUserException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"john-nng"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"john-nng"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"john-nng"},"content":" * This class represents user Expections expected from the InputValidator class.","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"john-nng"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"john-nng"},"content":"public class InvalidUserException extends Exception{","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"john-nng"},"content":"    public InvalidUserException(String message) {","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"john-nng"},"content":"        super(message);","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"john-nng"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"john-nng":10}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leong-ZM"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"z-wenqing"},"content":"import seedu.duke.ui.UI;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"john-nng"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"john-nng"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"john-nng"},"content":"public class Parser {","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"john-nng"},"content":"     * Parses User Input and Identifies the command used.","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"john-nng"},"content":"     * @param command The users text input.","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Leong-ZM"},"content":"    public void parseCommand(String command, UserList userList) {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Leong-ZM"},"content":"        if (command.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"john-nng"},"content":"            UI.printListingUsers();","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Leong-ZM"},"content":"            userList.listAll();","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Leong-ZM"},"content":"        } else if (command.equalsIgnoreCase(\"help\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Leong-ZM"},"content":"            UI.printHelp();","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Leong-ZM"},"content":"        } else if (command.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"john-nng"},"content":"            UI.printBye();","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Leong-ZM"},"content":"            Duke.setIsFinished(true);","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Leong-ZM"},"content":"        } else if (command.equalsIgnoreCase(\"current\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Leong-ZM"},"content":"            UI.printActiveUser(userList.getActiveUser().getName());","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Leong-ZM"},"content":"        } else if (command.equalsIgnoreCase(\"view\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Leong-ZM"},"content":"            userList.getActiveUser().viewTimetable();","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"john-nng"},"content":"        } else if (command.toLowerCase().startsWith(\"adduser\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"john-nng"},"content":"            try {","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"john-nng"},"content":"                InputValidator.validateAddUserInput(command);","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"john-nng"},"content":"                String[] parts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"john-nng"},"content":"                String userName \u003d parts[1];","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"john-nng"},"content":"                User newUser \u003d new User(userName);","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"john-nng"},"content":"                UI.printNewUser(newUser.getName());","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Leong-ZM"},"content":"                userList.addUser(newUser);","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"john-nng"},"content":"            } catch (InvalidFormatException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"john-nng"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"john-nng"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"john-nng"},"content":"        } else if (command.toLowerCase().startsWith(\"switch\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"john-nng"},"content":"            try {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"john-nng"},"content":"                InputValidator.validateSwitchInput(command);","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"john-nng"},"content":"                String[] parts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"john-nng"},"content":"                String userName \u003d parts[1];","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Leong-ZM"},"content":"                userList.setActiveUser(userList.findUser(userName));","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Leong-ZM"},"content":"                UI.printActiveUser(userList.getActiveUser().getName());","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"john-nng"},"content":"            } catch (InvalidFormatException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"john-nng"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"john-nng"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"john-nng"},"content":"        } else if (command.toLowerCase().startsWith(\"addtask\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"john-nng"},"content":"            try {","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"john-nng"},"content":"                InputValidator.validateAddTaskInput(command);","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"john-nng"},"content":"                String[] parts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"john-nng"},"content":"                List\u003cString\u003e wordList \u003d Arrays.asList(parts);","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"john-nng"},"content":"                String day \u003d parts[2];","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"john-nng"},"content":"                String description \u003d parseDescription(wordList);","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"john-nng"},"content":"                String startTime \u003d parts[wordList.indexOf(\"/from\") + 1];","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"john-nng"},"content":"                String endTime \u003d parts[wordList.indexOf(\"/to\") + 1];","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"john-nng"},"content":"                InputValidator.validateDay(day);","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"john-nng"},"content":"                Task task \u003d new Task(description, day, startTime, endTime);","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"Leong-ZM"},"content":"                userList.getActiveUser().getTimetable().addUserTask(day, task);","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"Leong-ZM"},"content":"                UI.printAddTask(task);","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"john-nng"},"content":"            } catch (InvalidFormatException | InvalidDayException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"john-nng"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"ZhuSijia0711"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"john-nng"},"content":"        } else if (command.toLowerCase().startsWith(\"deletetask\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"john-nng"},"content":"            try {","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"john-nng"},"content":"                InputValidator.validateDeleteTaskInput(command);","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"john-nng"},"content":"                String[] parts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"john-nng"},"content":"                String day \u003d parts[2];","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"john-nng"},"content":"                int index \u003d Integer.parseInt(parts[4]);","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"john-nng"},"content":"                InputValidator.validateDay(day);","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"Leong-ZM"},"content":"                userList.getActiveUser().getTimetable().deleteUserTask(day, index);","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"john-nng"},"content":"            } catch (InvalidFormatException | InvalidDayException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"john-nng"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"ZhuSijia0711"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"john-nng"},"content":"        } else if (command.toLowerCase().startsWith(\"compare\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"john-nng"},"content":"            try {","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"john-nng"},"content":"                InputValidator.validateCompareInput(command);","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"john-nng"},"content":"                String[] parts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"john-nng"},"content":"                String user1 \u003d parts[1];","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"john-nng"},"content":"                String user2 \u003d parts[2];","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"Leong-ZM"},"content":"                InputValidator.validateUserInput(user1, userList);","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"Leong-ZM"},"content":"                InputValidator.validateUserInput(user2, userList);","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"Leong-ZM"},"content":"                Timetable.compareTimetable(userList.findUser(user1).getTimetable(),","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"Leong-ZM"},"content":"                        userList.findUser(user2).getTimetable());","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"john-nng"},"content":"            } catch (InvalidFormatException | InvalidUserException | NullPointerException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"john-nng"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"john-nng"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"john-nng"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"john-nng"},"content":"            UI.printInvalidCommand();","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"john-nng"},"content":"    private String parseDescription(List\u003cString\u003e words) {","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"john-nng"},"content":"        int startIndex \u003d words.indexOf(\"/task\") + 1;","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"john-nng"},"content":"        int endIndex \u003d words.indexOf(\"/from\") - 1;","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"john-nng"},"content":"        StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"john-nng"},"content":"        for (int i \u003d startIndex; i \u003c\u003d endIndex; i++) {","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"john-nng"},"content":"            description.append(words.get(i));","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"john-nng"},"content":"            if (i \u003c endIndex) {","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"john-nng"},"content":"                description.append(\" \");","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"john-nng"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"john-nng"},"content":"        return description.toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"Leong-ZM"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ZhuSijia0711":8,"john-nng":73,"Leong-ZM":23,"z-wenqing":3}},{"path":"src/main/java/seedu/duke/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhuSijia0711"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"john-nng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"ZhuSijia0711"},"content":"public class Task {","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"ZhuSijia0711"},"content":"    protected String description;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"z-wenqing"},"content":"    protected String day;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"john-nng"},"content":"    protected LocalTime startTime;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"john-nng"},"content":"    protected LocalTime endTime;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Leong-ZM"},"content":"    public Task(String description, String day, String from, String to) {","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"john-nng"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"john-nng"},"content":"        this.day \u003d day;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Leong-ZM"},"content":"        String fromHour \u003d from.split(\":\")[0];","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Leong-ZM"},"content":"        String fromMinute \u003d from.split(\":\")[1];","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Leong-ZM"},"content":"        String toHour \u003d to.split(\":\")[0];","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Leong-ZM"},"content":"        String toMinute \u003d to.split(\":\")[1];","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Leong-ZM"},"content":"        String formattedFrom \u003d formatDates(fromHour) + \":\" + formatDates(fromMinute);","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Leong-ZM"},"content":"        String formattedTo \u003d formatDates(toHour) + \":\" + formatDates(toMinute);","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Leong-ZM"},"content":"        this.startTime \u003d LocalTime.parse(formattedFrom);","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Leong-ZM"},"content":"        this.endTime \u003d LocalTime.parse(formattedTo);","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"john-nng"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"john-nng"},"content":"        return startTime;","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"john-nng"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"john-nng"},"content":"        return endTime;","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"z-wenqing"},"content":"    private String formatDates(String time) {","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"z-wenqing"},"content":"        return time.length() \u003d\u003d 1 ? \"0\" + time : time;","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"z-wenqing"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"z-wenqing"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"john-nng"},"content":"        return description + \" (\" + day + \" from \" + startTime + \" to \" + endTime + \")\";","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"ZhuSijia0711"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"ZhuSijia0711":6,"john-nng":18,"Leong-ZM":11,"z-wenqing":7}},{"path":"src/main/java/seedu/duke/Timetable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leong-ZM"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"john-nng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"john-nng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"z-wenqing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"john-nng"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"john-nng"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"john-nng"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"john-nng"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"john-nng"},"content":" * This class represents the Timetable object consisting of Arraylist of Tasks for each day of the week.","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"john-nng"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Leong-ZM"},"content":"public class Timetable {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Leong-ZM"},"content":"    protected static final String[] DAYS \u003d new String[]","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Leong-ZM"},"content":"        {\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"};","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"john-nng"},"content":"    private Map\u003cString, ArrayList\u003cTask\u003e\u003e weeklyTasks; // Map to store tasks for each day","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"john-nng"},"content":"    public Timetable() {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"john-nng"},"content":"        weeklyTasks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"john-nng"},"content":"        //Initialize the map with empty lists for each day","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Leong-ZM"},"content":"        for (String day : DAYS) {","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"john-nng"},"content":"            weeklyTasks.put(day, new ArrayList\u003c\u003e());","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"z-wenqing"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"john-nng"},"content":"    public Map\u003cString, ArrayList\u003cTask\u003e\u003e getWeeklyTasks() {","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"john-nng"},"content":"        return weeklyTasks;","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"john-nng"},"content":"     * Adds task on dayOfWeek at an index","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"john-nng"},"content":"     * @param dayOfWeek first Timetable.","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"john-nng"},"content":"     * @param task      task to add.","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"john-nng"},"content":"    public void addUserTask(String dayOfWeek, Task task) {","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"john-nng"},"content":"        String capitalizedDay \u003d dayOfWeek.substring(0, 1).toUpperCase() + dayOfWeek.substring(1);","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"john-nng"},"content":"        weeklyTasks.get(capitalizedDay).add(task);","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"john-nng"},"content":"     * Deletes task on dayOfWeek at an index","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"john-nng"},"content":"     * @param dayOfWeek first Timetable.","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"john-nng"},"content":"     * @param index     index of task within task list","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"john-nng"},"content":"    public void deleteUserTask(String dayOfWeek, int index) {","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"john-nng"},"content":"        String capitalizedDay \u003d dayOfWeek.substring(0, 1).toUpperCase() + dayOfWeek.substring(1);","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"john-nng"},"content":"        //check if index is a valid number within a day\u0027s tasklist","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"john-nng"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c weeklyTasks.get(capitalizedDay).size()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"john-nng"},"content":"            Task taskDeleted \u003d weeklyTasks.get(capitalizedDay).get(index);","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"john-nng"},"content":"            weeklyTasks.get(capitalizedDay).remove(index);","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"z-wenqing"},"content":"            System.out.println(\"Task \" + taskDeleted.description + \" is deleted from \" + dayOfWeek);","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"john-nng"},"content":"            System.out.println(\"New task list for \" + capitalizedDay + \":\");","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"john-nng"},"content":"            printTasksOfTheDay(dayOfWeek);","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"Leong-ZM"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"john-nng"},"content":"            System.out.println(\"Invalid task index. Please try again.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"john-nng"},"content":"     * Compares and prints overlapping free time between two Timetables.","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"john-nng"},"content":"     * @param table1 first Timetable.","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"john-nng"},"content":"     * @param table2 second Timetable","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"Leong-ZM"},"content":"     *               \u003cp\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"john-nng"},"content":"     *               Prints the overlapping free time for each day in the format:","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"john-nng"},"content":"     *               ----------------------","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"john-nng"},"content":"     *               Shared Free Time on [day]","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"john-nng"},"content":"     *               HH:mm - HH:mm: Overlapping Free Time","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"john-nng"},"content":"    public static void compareTimetable(Timetable table1, Timetable table2) {","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"john-nng"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"john-nng"},"content":"            InputValidator.validateTableExistence(table1);","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"john-nng"},"content":"            InputValidator.validateTableExistence(table2);","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"Leong-ZM"},"content":"            for (String day : Timetable.DAYS) {","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"john-nng"},"content":"                System.out.println(\"----------------------\\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"john-nng"},"content":"                        \"Shared Free Time on \" + day + \":\");","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"john-nng"},"content":"                // Merge tasks from both timetables and sort them by start time","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"Leong-ZM"},"content":"                ArrayList\u003cTask\u003e mergedTasks \u003d mergeAndSortTasks(table1.getWeeklyTasks().get(day),","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"Leong-ZM"},"content":"                        table2.getWeeklyTasks().get(day));","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"john-nng"},"content":"                // Calculate overlapping free time intervals then print them","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"Leong-ZM"},"content":"                findOverlappingFreeTime(mergedTasks, day);","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"john-nng"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"john-nng"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"john-nng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"john-nng"},"content":"    private static ArrayList\u003cTask\u003e mergeAndSortTasks(ArrayList\u003cTask\u003e taskList1, ArrayList\u003cTask\u003e taskList2) {","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"john-nng"},"content":"        ArrayList\u003cTask\u003e mergedTasks \u003d new ArrayList\u003c\u003e(taskList1);","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"john-nng"},"content":"        mergedTasks.addAll(taskList2);","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"john-nng"},"content":"        mergedTasks.sort(Comparator.comparing(Task::getStartTime));","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"john-nng"},"content":"        return mergedTasks;","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"Leong-ZM"},"content":"    private static void findOverlappingFreeTime(ArrayList\u003cTask\u003e tasks, String day) {","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"john-nng"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"john-nng"},"content":"            LocalTime previousEndTime \u003d LocalTime.MIN;","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"john-nng"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"john-nng"},"content":"                if (task.getStartTime().isAfter(previousEndTime)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"john-nng"},"content":"                    System.out.println(previousEndTime + \" - \" + task.getStartTime() + \": Overlapping Free Time\");","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"john-nng"},"content":"                }","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"john-nng"},"content":"                previousEndTime \u003d task.getEndTime();","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"john-nng"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"john-nng"},"content":"            if (previousEndTime.isBefore(LocalTime.MAX)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"john-nng"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"Leong-ZM"},"content":"                System.out.println(previousEndTime + \" - \" + LocalTime.MAX.format(formatter) +","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"Leong-ZM"},"content":"                        \": Overlapping Free Time\");","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"john-nng"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"john-nng"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"john-nng"},"content":"            System.out.println(\"** Whole day is free on \" + day);","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"john-nng"},"content":"    public void printTasksOfTheDay(String day) {","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"john-nng"},"content":"        String capitalizedDay \u003d day.substring(0, 1).toUpperCase() + day.substring(1);","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"john-nng"},"content":"        if (weeklyTasks.get(capitalizedDay).isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"john-nng"},"content":"            System.out.println(\"NO TASK FOR \" + day);","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"john-nng"},"content":"            return;","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"z-wenqing"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"john-nng"},"content":"        System.out.println(capitalizedDay + \":\");","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"john-nng"},"content":"        for (Task task : weeklyTasks.get(capitalizedDay)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"z-wenqing"},"content":"            System.out.println(task.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"z-wenqing"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"Leong-ZM"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"john-nng":97,"Leong-ZM":17,"z-wenqing":14}},{"path":"src/main/java/seedu/duke/User.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leong-ZM"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Leong-ZM"},"content":"public class User {","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"john-nng"},"content":"    private Timetable timetable;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"z-wenqing"},"content":"    private final String name;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"Leong-ZM"},"content":"    public User(String name) {","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Leong-ZM"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"john-nng"},"content":"        this.timetable \u003d new Timetable();","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Leong-ZM"},"content":"    public String getName() {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Leong-ZM"},"content":"        return name;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"z-wenqing"},"content":"    public void viewTimetable() {","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"Leong-ZM"},"content":"        for (String day : Timetable.DAYS) {","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"john-nng"},"content":"            timetable.printTasksOfTheDay(day);","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"z-wenqing"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"john-nng"},"content":"    public Timetable getTimetable() {","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"john-nng"},"content":"        return timetable;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Leong-ZM"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"john-nng":6,"Leong-ZM":14,"z-wenqing":5}},{"path":"src/main/java/seedu/duke/UserList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leong-ZM"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"john-nng"},"content":"import seedu.duke.ui.UI;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Leong-ZM"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Leong-ZM"},"content":"public class UserList {","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Leong-ZM"},"content":"    private ArrayList\u003cUser\u003e allUsers;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Leong-ZM"},"content":"    private User activeUser;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Leong-ZM"},"content":"    public UserList() {","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"john-nng"},"content":"        allUsers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Leong-ZM"},"content":"    public User getActiveUser() {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"john-nng"},"content":"        return activeUser;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"Leong-ZM"},"content":"    public void setActiveUser(User user) {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"john-nng"},"content":"        if (user !\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Leong-ZM"},"content":"            activeUser \u003d user;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"john-nng"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"john-nng"},"content":"            System.out.println(\"User does not exist!\");","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Leong-ZM"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Leong-ZM"},"content":"    public void addUser(User user) {","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"john-nng"},"content":"        allUsers.add(user);","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"john-nng"},"content":"        if (allUsers.size() \u003d\u003d 1) {","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Leong-ZM"},"content":"            activeUser \u003d allUsers.get(0); //If this was the first user added, set them as the current user","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"john-nng"},"content":"            UI.printActiveUser(user.getName());","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Leong-ZM"},"content":"    public void listAll() {","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Leong-ZM"},"content":"        for (User user : allUsers) {","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"Leong-ZM"},"content":"            System.out.println(user.getName());","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"Leong-ZM"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Leong-ZM"},"content":"    public ArrayList\u003cUser\u003e getUsers() {","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"ZhuSijia0711"},"content":"        return allUsers;","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Leong-ZM"},"content":"    public int getListLength() {","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Leong-ZM"},"content":"        return allUsers.size();","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"Leong-ZM"},"content":"    public User findUser(String name) {","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"john-nng"},"content":"        for (User u : allUsers) {","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"Leong-ZM"},"content":"            if (name.equalsIgnoreCase(u.getName())) {","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"john-nng"},"content":"                return u;","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"john-nng"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"john-nng"},"content":"        return null;","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"Leong-ZM"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ZhuSijia0711":2,"john-nng":22,"Leong-ZM":32,"z-wenqing":1}},{"path":"src/main/java/seedu/duke/ui/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leong-ZM"},"content":"package seedu.duke.ui;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Leong-ZM"},"content":"import seedu.duke.Task;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Leong-ZM"},"content":"public class UI {","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"Leong-ZM"},"content":"    public static void printGreeting() {","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Leong-ZM"},"content":"        System.out.println(\"Timetable comparison app opened. \");","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Leong-ZM"},"content":"    public static void printBye() {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Leong-ZM"},"content":"        System.out.println(\"Bye. \");","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Leong-ZM"},"content":"    public static void printListingUsers() {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Leong-ZM"},"content":"        System.out.println(\"The current users are: \");","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"john-nng"},"content":"    public static void printNewUser(String name) {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"john-nng"},"content":"        System.out.println(\"New user added: \" + name);","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"john-nng"},"content":"    public static void printActiveUser(String description) {","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Leong-ZM"},"content":"        System.out.println(\"The active user is: \" + description);","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Leong-ZM"},"content":"    public static void printInvalidCommand() {","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Leong-ZM"},"content":"        System.out.println(\"Invalid command. \");","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"Leong-ZM"},"content":"    public static void printAddTask(Task task) {","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Leong-ZM"},"content":"        System.out.println(\"The following task is added: \" + task);","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Leong-ZM"},"content":"    public static void printHelp() {","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Leong-ZM"},"content":"        System.out.println(\"List of available commands: \\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Leong-ZM"},"content":"                \"adduser: add new user \\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Leong-ZM"},"content":"                \"switch \u003cusername\u003e: switch to user \\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Leong-ZM"},"content":"                \"list: list all users \\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Leong-ZM"},"content":"                \"bye: exit the app \\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Leong-ZM"},"content":"                \"current: view current user \\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Leong-ZM"},"content":"                \"addtask /on \u003cday\u003e /from \u003cstart time\u003e /to \u003cend time\u003e: add task \\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Leong-ZM"},"content":"                \"delete: delete task \\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Leong-ZM"},"content":"                \"compare \u003cuser1\u003e \u003cuser2\u003e: compare timetables \");","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"Leong-ZM"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"john-nng":3,"Leong-ZM":40,"z-wenqing":2}},{"path":"src/test/java/seedu/duke/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"z-wenqing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"z-wenqing"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"class DukeTest {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"z-wenqing"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"z-wenqing"},"content":"    public void testAddTask() {","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"z-wenqing"},"content":"        UserList userlist \u003d new UserList();","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"z-wenqing"},"content":"        User user \u003d new User(\"Test User\");","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"z-wenqing"},"content":"        userlist.addUser(user);","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"z-wenqing"},"content":"        Task task \u003d new Task(\"Lecture\", \"Monday\", \"1:00\", \"2:00\");","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"z-wenqing"},"content":"        user.getTimetable().addUserTask(\"Monday\", task);","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"z-wenqing"},"content":"        assertEquals(\"Lecture\", task.description);","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"z-wenqing"},"content":"        assertEquals(LocalTime.parse(\"01:00\"), task.startTime);","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"ZhuSijia0711"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"ZhuSijia0711"},"content":"    public void testAddUser() {","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"ZhuSijia0711"},"content":"        UserList userList \u003d new UserList();","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"ZhuSijia0711"},"content":"        User user \u003d new User(\"Test User\");","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"Leong-ZM"},"content":"        userList.addUser(user);","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"ZhuSijia0711"},"content":"        // Verify that the user is added to the list","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"ZhuSijia0711"},"content":"        assertEquals(1, userList.getListLength());","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"Leong-ZM"},"content":"        assertEquals(user, userList.getActiveUser());","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Leong-ZM"},"content":"        assertTrue(userList.getUsers().contains(user));","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"ZhuSijia0711":8,"Leong-ZM":3,"-":12,"z-wenqing":13}},{"path":"src/test/java/seedu/duke/TimetableTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhuSijia0711"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ZhuSijia0711"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ZhuSijia0711"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ZhuSijia0711"},"content":"class TimetableTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ZhuSijia0711"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ZhuSijia0711"},"content":"    public void testAddUserTask() {","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ZhuSijia0711"},"content":"        Timetable timetable \u003d new Timetable();","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ZhuSijia0711"},"content":"        Task task \u003d new Task(\"Study\",\"2024-03-18\", \"09:00\", \"11:00\");","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"john-nng"},"content":"        timetable.addUserTask(\"Tuesday\", task);","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"john-nng"},"content":"        timetable.printTasksOfTheDay(\"Tuesday\");","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"john-nng"},"content":"        assertEquals(1, timetable.getWeeklyTasks().get(\"Tuesday\").size());","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"john-nng"},"content":"        assertEquals(task, timetable.getWeeklyTasks().get(\"Tuesday\").get(0));","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ZhuSijia0711"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"john-nng"},"content":"    public void testCompareTimetables() {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"john-nng"},"content":"        Timetable timetable1 \u003d new Timetable();","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"john-nng"},"content":"        Timetable timetable2 \u003d new Timetable();","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"john-nng"},"content":"        Task task1 \u003d new Task(\"Study\",\"2024-03-18\", \"09:00\", \"11:00\");","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"john-nng"},"content":"        Task task2 \u003d new Task(\"Study\",\"2024-03-18\", \"07:00\", \"10:00\");","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"john-nng"},"content":"        timetable1.addUserTask(\"Monday\", task1);","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"john-nng"},"content":"        timetable2.addUserTask(\"Monday\", task2);","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"john-nng"},"content":"        Timetable.compareTimetable(timetable1, timetable2);","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"ZhuSijia0711"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"ZhuSijia0711":15,"john-nng":14}}]
