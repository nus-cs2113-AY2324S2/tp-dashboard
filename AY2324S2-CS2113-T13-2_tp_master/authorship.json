[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"z-wenqing"},"content":"# Timetable Comparer","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ZhuSijia0711"},"content":"   |____/ \\__,_|_|\\_\\___","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"ZhuSijia0711":1,"z-wenqing":1,"-":62}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName.set(\"duke\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"ZhuSijia0711"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ZhuSijia0711":1,"john-nng":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |      Name      | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"Leong-ZM"},"content":"--------|:--------------:|:--------------:|:---------:","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"Leong-ZM"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Leong Zhe Ming | [Github](https://github.com/Leong-ZM) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"z-wenqing"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhang Wenqing | [Github](https://github.com/z-wenqing) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"ZhuSijia0711"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zhu Sijia | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"john-nng"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | John Nguyen | [Github](https://github.com/john-nng) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"ZhuSijia0711":1,"john-nng":1,"Leong-ZM":2,"-":3,"z-wenqing":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"z-wenqing"},"content":"### Save timetable function","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"z-wenqing"},"content":"The saving timetable mechanism is facilitated by the Storage class. It implements the following operations: ","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"z-wenqing"},"content":"* `Storgae#createFolder()`: Creates a folder in the directory where all the users\u0027 timetable will be stored in the local computer.","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"z-wenqing"},"content":"* `Storage#addExistingUsers()`: Loops through the folder to add all previous saved users upon opening the app, as well as their corresponding tasks.","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"z-wenqing"},"content":"* `Storage#addUserInFolder(User user)`: When a new user is added, a file with the name of the user will be created in the folder.","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"z-wenqing"},"content":"* `Storage#writeTaskInFile(User user)`: when a new task of a specific user is added, it will be written into the correct file.","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"z-wenqing"},"content":"The following sequence diagram shows how the operations in the Storage class goes through when the app is opened and it loads data from history:","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"z-wenqing"},"content":"![Storage UML](StorageUML.png)","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"ZhuSijia0711"},"content":"{Describe the target user profile}: Students (NUS student?)","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...                                           |","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"ZhuSijia0711"},"content":"|--------|----------|---------------|-------------------------------------------------------------|","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"|v1.0| new user |see usage instructions| refer to them when I forget how to use the application      |","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"|v2.0| user     |find a to-do item by name| locate a to-do without having to go through the entire list |","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"ZhuSijia0711"},"content":"|    | user     |add a task to the timetable| record when a task needs to be done  |","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"ZhuSijia0711"},"content":" ","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"ZhuSijia0711"},"content":"## Parser Component","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"ZhuSijia0711"},"content":"Here is a general guide of how Parse Class looks like in sequence diagram.","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"ZhuSijia0711"},"content":"![Parse.png](diagram%2FParse.png)","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"ZhuSijia0711"},"content":"Here is a class diagram for the method changeTaskTiming method in Parser Class.","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"ZhuSijia0711"},"content":"![changeTaskTimingClassDiagram.png](diagram%2FchangeTaskTimingClassDiagram.png)","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"ZhuSijia0711"},"content":"The following sequence diagram of changeTaskTiming shows the interactions with other objects.","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"ZhuSijia0711"},"content":"![changeTaskTiming_Sequence_Diagram.png](diagram%2FchangeTaskTiming_Sequence_Diagram.png)","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"ZhuSijia0711"},"content":"Here is how this method works:","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"ZhuSijia0711"},"content":"1. The Parser calls the changeTaskTiming method with a command and the UserList. It calls InputValidator.","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"ZhuSijia0711"},"content":"2. The InputValidator validates the command, ensuring that it meets the required format in days and index.","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"ZhuSijia0711"},"content":"3. If validation is successful, the User calls the timetable and calls its changeFlexibleTaskTiming method with the specified parameters.","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"ZhuSijia0711"},"content":"4. The Timetable updates the timing of the flexible task.","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"ZhuSijia0711"},"content":"5. If successful, the InputValidator sends a success message back to the Parser. Otherwise, it throws a RuntimeException.","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"ZhuSijia0711"},"content":"## Timetable Component","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"ZhuSijia0711"},"content":"Here is a sequence diagram of changeTaskType method in Timetable class. It shows the interactions with other objects.","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"ZhuSijia0711"},"content":"![changeTaskType.png](diagram%2FchangeTaskType.png)","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"ZhuSijia0711"},"content":"Here is how this method works:","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"ZhuSijia0711"},"content":"1. The sequence starts with the Parser sending a request to the Timetable to change the type of a task.","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"ZhuSijia0711"},"content":"2. The Timetable activates and processes the changeTaskType method.","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"ZhuSijia0711"},"content":"3. Within the Timetable, the dayOfWeek parameter is capitalized to ensure consistency.","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"ZhuSijia0711"},"content":"4. The Timetable calls the list of tasks associated with the specified day (dayOfWeek). It activates the Task object to fetch the task at the specified index (index).","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"ZhuSijia0711"},"content":"5. The Task object modifies the type of the task to the new type specified by the Parser.","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"ZhuSijia0711"},"content":"6. Finally, the modified task or any relevant status information is returned to the Parser.","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"ZhuSijia0711":47,"-":33,"z-wenqing":9}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{Give a product intro}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"Leong-ZM"},"content":"2. Down the latest version of `Duke` from [here](http://link.to/duke).","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Adds a new item to the list of todo items.","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Format: `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* The `DEADLINE` can be in a natural language format.","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* The `TODO_NAME` cannot contain punctuation.  ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"`todo n/Write the rest of the User Guide d/next week`","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Add todo `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"Leong-ZM":1,"-":41}},{"path":"docs/uml.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"z-wenqing"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"z-wenqing"},"content":"participant Duke as duke","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"z-wenqing"},"content":"participant Storage as storage","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"z-wenqing"},"content":"participant File as file","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"z-wenqing"},"content":"participant UserList as userList","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"z-wenqing"},"content":"participant UI as UI","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"z-wenqing"},"content":"participant Timetable as timetable","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"z-wenqing"},"content":"participant User as user","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"z-wenqing"},"content":"activate duke","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"z-wenqing"},"content":"duke -\u003e storage: createFolder()","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"z-wenqing"},"content":"activate storage","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"z-wenqing"},"content":"storage --\u003e\u003e duke:","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"z-wenqing"},"content":"deactivate storage","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"z-wenqing"},"content":"duke -\u003e storage: addExistingUsers()","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"z-wenqing"},"content":"activate storage","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"z-wenqing"},"content":"storage -\u003e file: listFiles()","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"z-wenqing"},"content":"activate file","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"z-wenqing"},"content":"file --\u003e\u003e storage: File","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"z-wenqing"},"content":"deactivate file","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"z-wenqing"},"content":"alt directory is not empty","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"z-wenqing"},"content":"  loop file","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"z-wenqing"},"content":"    opt file is not null","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"z-wenqing"},"content":"      storage -\u003e userList: addUser(user: User)","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"z-wenqing"},"content":"          activate userList","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"z-wenqing"},"content":"          userList -\u003e userList: add(user: User)","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"z-wenqing"},"content":"          alt allUsers.size() \u003d\u003d 1","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"z-wenqing"},"content":"            userList -\u003e UI: printActiveUser()","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"z-wenqing"},"content":"            activate UI","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"z-wenqing"},"content":"            UI --\u003e\u003e userList","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"z-wenqing"},"content":"            deactivate UI","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"z-wenqing"},"content":"          end","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"z-wenqing"},"content":"          userList --\u003e\u003e storage","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"z-wenqing"},"content":"          deactivate userList","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"z-wenqing"},"content":"          storage -\u003e storage: loadData(user: User)","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"z-wenqing"},"content":"          storage -\u003e storage: extractTaskInfo(String line, String day)","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"z-wenqing"},"content":"          storage --\u003e storage: Task","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"z-wenqing"},"content":"          storage -\u003e user: getTimetable()","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"z-wenqing"},"content":"          activate user","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"z-wenqing"},"content":"          user -\u003e timetable: addUserTask(day: String, task: Task)","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"z-wenqing"},"content":"          activate timetable","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"z-wenqing"},"content":"          timetable --\u003e user","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"z-wenqing"},"content":"          deactivate timetable","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"z-wenqing"},"content":"          user --\u003e\u003e storage","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"z-wenqing"},"content":"          deactivate user","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"z-wenqing"},"content":"    end","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"z-wenqing"},"content":"  end","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"z-wenqing"},"content":"else","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"z-wenqing"},"content":"  storage -\u003e UI: printEmptyDirectory();","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"z-wenqing"},"content":"  activate UI","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"z-wenqing"},"content":"  UI --\u003e\u003e storage","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"z-wenqing"},"content":"  deactivate UI","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"z-wenqing"},"content":"end","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"z-wenqing"},"content":"storage --\u003e duke","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"z-wenqing"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"z-wenqing":63}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Leong-ZM"},"content":"import seedu.duke.ui.UI;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"z-wenqing"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Leong-ZM"},"content":"    static final Scanner IN \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Leong-ZM"},"content":"    static boolean isFinished \u003d false;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Leong-ZM"},"content":"    public static void setIsFinished(boolean b) {","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Leong-ZM"},"content":"        isFinished \u003d b;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"z-wenqing"},"content":"    public static void main(String[] args) throws FileNotFoundException {","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"Leong-ZM"},"content":"        UI.printGreeting();","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Leong-ZM"},"content":"        UserList userList \u003d new UserList();","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"z-wenqing"},"content":"        Storage.createFolder();","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"z-wenqing"},"content":"        Storage.addExistingUsers(userList);","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Leong-ZM"},"content":"        if (userList.getListLength() \u003d\u003d 0) {","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"Leong-ZM"},"content":"            UI.printHelp();","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"Leong-ZM"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"Leong-ZM"},"content":"        while (!isFinished) {","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"john-nng"},"content":"            try {","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Leong-ZM"},"content":"                String input \u003d IN.nextLine();","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Leong-ZM"},"content":"                Parser.parseCommand(input, userList);","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"john-nng"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"john-nng"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Leong-ZM"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Leong-ZM"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ZhuSijia0711":1,"john-nng":6,"Leong-ZM":20,"-":7,"z-wenqing":4}},{"path":"src/main/java/seedu/duke/InputValidator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"john-nng"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Leong-ZM"},"content":"import seedu.duke.exceptions.InvalidDayException;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Leong-ZM"},"content":"import seedu.duke.exceptions.InvalidFormatException;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Leong-ZM"},"content":"import seedu.duke.exceptions.InvalidUserException;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"john-nng"},"content":"public class InputValidator {","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Leong-ZM"},"content":"     * Validates correctly formatted compare command. The expected format is","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Leong-ZM"},"content":"     * \"compare user1 user2\"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"john-nng"},"content":"     * @param input String Input.","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Leong-ZM"},"content":"     * @throws InvalidFormatException If the input does not match the expected format.","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"john-nng"},"content":"    public static void validateCompareInput(String input) throws InvalidFormatException {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"john-nng"},"content":"        // Define the regex pattern for the expected format with case-insensitive flag","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"john-nng"},"content":"        String regex \u003d \"(?i)^compare\\\\s+\\\\w+\\\\s+\\\\w+$\";","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"john-nng"},"content":"        if (!input.matches(regex)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Leong-ZM"},"content":"            throw new InvalidFormatException(\"[ERROR] Invalid compare format. \" +","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Leong-ZM"},"content":"                    \"Expected format: compare \u003cuser1\u003e \u003cuser2\u003e\");","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Leong-ZM"},"content":"     * Validates correctly formatted addTask command. The expected format is","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Leong-ZM"},"content":"     * \"addtask /on [date] /task [description] /from [start time] /to [start time]\" format","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Leong-ZM"},"content":"     * Note: Start and End times should be formatted as such: HH:mm","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"john-nng"},"content":"     * @param input String Input.","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Leong-ZM"},"content":"     * @throws InvalidFormatException If the input does not match the expected format.","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"john-nng"},"content":"    public static void validateAddTaskInput(String input) throws InvalidFormatException {","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"john-nng"},"content":"        // Define the regex pattern for the expected format with case-insensitive flag","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Leong-ZM"},"content":"        String regex \u003d \"(?i)^addtask\\\\s+/on\\\\s+(\\\\w+)\\\\s+/task\\\\s+(.+?)\\\\s\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"ZhuSijia0711"},"content":"                \"+/from\\\\s+(\\\\d{1,2}:\\\\d{2})\\\\s+/to\\\\s+(\\\\d{1,2}:\\\\d{2})(\\\\s+/type\\\\s+[fc])$\";","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"john-nng"},"content":"        if (!input.matches(regex)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Leong-ZM"},"content":"            throw new InvalidFormatException(\"[ERROR] Invalid addtask format. \" +","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"Leong-ZM"},"content":"                    \"Expected format: addtask /on [day] /task [description] /from [start time] /to [end time] \" +","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ZhuSijia0711"},"content":"                    \"/type [f/c]\");","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Leong-ZM"},"content":"     * Validates correctly formatted deleteTask command. The expected format is","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Leong-ZM"},"content":"     * \"deletetask /on [day] /index [index]\" format","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"Leong-ZM"},"content":"     * Note: index is the index of the task in the task list for the given day","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"john-nng"},"content":"     * @param input String Input.","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"Leong-ZM"},"content":"     * @throws InvalidFormatException If the input does not match the expected format.","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"john-nng"},"content":"    public static void validateDeleteTaskInput(String input) throws InvalidFormatException {","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"john-nng"},"content":"        // Define the regex pattern for the expected format with case-insensitive flag","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"john-nng"},"content":"        String regex \u003d \"(?i)^deletetask\\\\s+/on\\\\s+(\\\\w+)\\\\s+/index\\\\s+(\\\\d+)$\";","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"john-nng"},"content":"        if (!input.matches(regex)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"john-nng"},"content":"            throw new InvalidFormatException(\"[ERROR] Invalid deleteTask format. \" +","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"john-nng"},"content":"                    \"Expected format: deleteTask /on [day] /index [index]\");","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"Leong-ZM"},"content":"     * Validates correctly formatted addUser command. The expected format is \"adduser user\"","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"john-nng"},"content":"     * @param input String Input.","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"Leong-ZM"},"content":"     * @throws InvalidFormatException If the input does not match the expected format.","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"john-nng"},"content":"    public static void validateAddUserInput(String input) throws InvalidFormatException {","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"john-nng"},"content":"        // Define the regex pattern for the expected format with case-insensitive flag","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"john-nng"},"content":"        String regex \u003d \"(?i)^adduser\\\\s+\\\\w+$\";","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"john-nng"},"content":"        if (!input.matches(regex)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"Leong-ZM"},"content":"            throw new InvalidFormatException(\"[ERROR] Invalid addUser format. \" +","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"Leong-ZM"},"content":"                    \"Expected format: adduser \u003cdesired user\u0027s name\u003e\");","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"Leong-ZM"},"content":"     * Validates correctly formatted switch command. The expected format is \"switch user\"","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"john-nng"},"content":"     * @param input String Input.","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"Leong-ZM"},"content":"     * @throws InvalidFormatException If the input does not match the expected format.","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"john-nng"},"content":"    public static void validateSwitchInput(String input) throws InvalidFormatException {","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"john-nng"},"content":"        // Define the regex pattern for the expected format with case-insensitive flag","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"john-nng"},"content":"        String regex \u003d \"(?i)^switch\\\\s+\\\\w+$\";","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"john-nng"},"content":"        if (!input.matches(regex)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"Leong-ZM"},"content":"            throw new InvalidFormatException(\"[ERROR] Invalid switch format. \" +","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"Leong-ZM"},"content":"                    \"Expected format: switch \u003cdesired user\u0027s name\u003e\");","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"john-nng"},"content":"     * Validates correctly spelled usernames that currently exist in the user database.","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"john-nng"},"content":"     * @param input String Input.","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"Leong-ZM"},"content":"     * @throws InvalidUserException If the input does not match any current user\u0027s name in the user database.","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"Leong-ZM"},"content":"    public static void validateUserInput(String input, UserList userList) throws InvalidUserException {","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"Leong-ZM"},"content":"        if (userList.getUsers().isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"john-nng"},"content":"            throw new InvalidUserException(\"[ERROR] Current User List is empty. Please add users.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"Leong-ZM"},"content":"        for (User u : userList.getUsers()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"john-nng"},"content":"            if (u.getName().toLowerCase().equals(input)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"john-nng"},"content":"                return;","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"john-nng"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"john-nng"},"content":"        throw new InvalidUserException(\"[ERROR] Invalid User: \" + input + \". Please input a existing user name\");","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"john-nng"},"content":"     * Validates if the inputted string is an actual day.","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"john-nng"},"content":"     * @param input String Input.","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"Leong-ZM"},"content":"     * @throws InvalidDayException If the input is not an actual day.","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"john-nng"},"content":"    public static void validateDay(String input) throws InvalidDayException {","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"john-nng"},"content":"        String[] validDays \u003d new String[]{\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\"};","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"john-nng"},"content":"        for (String day : validDays) {","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"Leong-ZM"},"content":"            if (day.equalsIgnoreCase(input)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"john-nng"},"content":"                return;","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"john-nng"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"john-nng"},"content":"        throw new InvalidDayException(\"[ERROR] Invalid day. Please enter a day from Monday - Sunday.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"john-nng"},"content":"     * Validates whether a Timetable exist or not.","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"john-nng"},"content":"     * @param table inputted Timetable.","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"Leong-ZM"},"content":"     * @throws NullPointerException If the input Timetable does not exist.","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"john-nng"},"content":"    public static void validateTableExistence(Timetable table) throws NullPointerException {","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"john-nng"},"content":"        if (table \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"john-nng"},"content":"            throw new NullPointerException(\"Timetable object is null.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"ZhuSijia0711"},"content":"    public static void validateChangeTaskTiming(String input) throws InvalidFormatException{","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"ZhuSijia0711"},"content":"        String prefix \u003d \"(?i)^changeTaskTiming\\\\s+/on\\\\s+\";","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"ZhuSijia0711"},"content":"        String dayPattern \u003d \"(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday)\";","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"ZhuSijia0711"},"content":"        String indexPattern \u003d \"\\\\d+\";","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"ZhuSijia0711"},"content":"        String startPattern \u003d \"\\\\d{1,2}:\\\\d{2}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"ZhuSijia0711"},"content":"        String endPattern \u003d \"\\\\d{1,2}:\\\\d{2}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"ZhuSijia0711"},"content":"        String suffix \u003d \"$\";","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"Leong-ZM"},"content":"        String regex \u003d prefix + dayPattern + \"\\\\s+/index\\\\s+\" + indexPattern + \"\\\\s+/from\\\\s+\" +","lastModifiedDate":"2024-03-26"},{"lineNumber":150,"author":{"gitId":"Leong-ZM"},"content":"                startPattern + \"\\\\s+/to\\\\s+\" + endPattern + suffix;","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"ZhuSijia0711"},"content":"        if (!input.matches(regex)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"ZhuSijia0711"},"content":"            throw new InvalidFormatException(\"[ERROR] Invalid changeTaskTiming format. \" +","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"Leong-ZM"},"content":"                    \"Expected format: changeTaskTiming /on [day] /index [index] /from [new start time] \" +","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"Leong-ZM"},"content":"                    \"/to [new end time]\");","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":156,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":158,"author":{"gitId":"z-wenqing"},"content":"    public static void validateAddTaskForAll(String input) throws InvalidFormatException {","lastModifiedDate":"2024-03-22"},{"lineNumber":159,"author":{"gitId":"z-wenqing"},"content":"        String regex \u003d \"(?i)^addforall\\\\s+/on\\\\s+(\\\\w+)\\\\s+/task\\\\s+(.+?)\\\\s\" +","lastModifiedDate":"2024-03-22"},{"lineNumber":160,"author":{"gitId":"z-wenqing"},"content":"                \"+/from\\\\s+(\\\\d{1,2}:\\\\d{2})\\\\s+/to\\\\s+(\\\\d{1,2}:\\\\d{2})$\";","lastModifiedDate":"2024-03-22"},{"lineNumber":161,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":162,"author":{"gitId":"z-wenqing"},"content":"        if (!input.matches(regex)) {","lastModifiedDate":"2024-03-22"},{"lineNumber":163,"author":{"gitId":"Leong-ZM"},"content":"            throw new InvalidFormatException(\"[ERROR] Invalid addtask format. \" +","lastModifiedDate":"2024-03-30"},{"lineNumber":164,"author":{"gitId":"z-wenqing"},"content":"                    \"Expected format: addforall /on [day] /task [description] /from [start time] /to [end time] \" +","lastModifiedDate":"2024-03-22"},{"lineNumber":165,"author":{"gitId":"z-wenqing"},"content":"                    \"/type [f/c]\");","lastModifiedDate":"2024-03-22"},{"lineNumber":166,"author":{"gitId":"z-wenqing"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":167,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":168,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":169,"author":{"gitId":"ZhuSijia0711"},"content":"    public static void validateChangeTaskType(String input) throws InvalidFormatException {","lastModifiedDate":"2024-03-22"},{"lineNumber":170,"author":{"gitId":"ZhuSijia0711"},"content":"        String prefix \u003d \"(?i)^changeTaskType\\\\s+/on\\\\s+\";","lastModifiedDate":"2024-03-22"},{"lineNumber":171,"author":{"gitId":"ZhuSijia0711"},"content":"        String dayPattern \u003d \"(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday)\";","lastModifiedDate":"2024-03-22"},{"lineNumber":172,"author":{"gitId":"ZhuSijia0711"},"content":"        String indexPattern \u003d \"\\\\d+\";","lastModifiedDate":"2024-03-22"},{"lineNumber":173,"author":{"gitId":"ZhuSijia0711"},"content":"        String typePattern \u003d \"[fc]\"; // Assuming task types can be \u0027f\u0027 for flexible and \u0027c\u0027 for compulsory","lastModifiedDate":"2024-03-22"},{"lineNumber":174,"author":{"gitId":"ZhuSijia0711"},"content":"        String suffix \u003d \"$\";","lastModifiedDate":"2024-03-22"},{"lineNumber":175,"author":{"gitId":"ZhuSijia0711"},"content":"        String regex \u003d prefix + dayPattern + \"\\\\s+/index\\\\s+\" + indexPattern + \"\\\\s+/type\\\\s+\" + typePattern + suffix;","lastModifiedDate":"2024-03-22"},{"lineNumber":176,"author":{"gitId":"ZhuSijia0711"},"content":"        if (!input.matches(regex)) {","lastModifiedDate":"2024-03-22"},{"lineNumber":177,"author":{"gitId":"ZhuSijia0711"},"content":"            throw new InvalidFormatException(\"[ERROR] Invalid changeTaskType format. \" +","lastModifiedDate":"2024-03-22"},{"lineNumber":178,"author":{"gitId":"ZhuSijia0711"},"content":"                    \"Expected format: changeTaskType /on [day] /index [index] /type [f/c]\");","lastModifiedDate":"2024-03-22"},{"lineNumber":179,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":180,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":181,"author":{"gitId":"ZhuSijia0711"},"content":"    public static void validateAddRepeatTask(String input) throws InvalidFormatException{","lastModifiedDate":"2024-03-22"},{"lineNumber":182,"author":{"gitId":"Leong-ZM"},"content":"        String regex \u003d \"(?i)^addrepeattask\\\\s+/task\\\\s+(.+?)\\\\s+/on\\\\s+(\\\\w+(\\\\s+\\\\w+)*)\\\\s+\" +","lastModifiedDate":"2024-03-26"},{"lineNumber":183,"author":{"gitId":"Leong-ZM"},"content":"                \"/from\\\\s+(\\\\d{1,2}:\\\\d{2})\\\\s+/to\\\\s+(\\\\d{1,2}:\\\\d{2})\\\\s+/type\\\\s+([fc])$\";","lastModifiedDate":"2024-03-26"},{"lineNumber":184,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":185,"author":{"gitId":"ZhuSijia0711"},"content":"        if (!input.matches(regex)) {","lastModifiedDate":"2024-03-22"},{"lineNumber":186,"author":{"gitId":"ZhuSijia0711"},"content":"            throw new InvalidFormatException(\"[ERROR] Invalid addRepeatTask format. \" +","lastModifiedDate":"2024-03-22"},{"lineNumber":187,"author":{"gitId":"Leong-ZM"},"content":"                    \"Expected format: addRepeatTask /task [description] /on [day(s)] /from [start time] \" +","lastModifiedDate":"2024-03-26"},{"lineNumber":188,"author":{"gitId":"Leong-ZM"},"content":"                    \"/to [end time] /type [f/c]\");","lastModifiedDate":"2024-03-26"},{"lineNumber":189,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":190,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":191,"author":{"gitId":"john-nng"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"ZhuSijia0711":32,"john-nng":104,"Leong-ZM":44,"z-wenqing":11}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leong-ZM"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"Leong-ZM"},"content":"import seedu.duke.exceptions.InvalidDayException;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Leong-ZM"},"content":"import seedu.duke.exceptions.InvalidFormatException;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Leong-ZM"},"content":"import seedu.duke.exceptions.InvalidUserException;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"z-wenqing"},"content":"import seedu.duke.ui.UI;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ZhuSijia0711"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"Leong-ZM"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"Leong-ZM"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"Leong-ZM"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"john-nng"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"john-nng"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"john-nng"},"content":"public class Parser {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"z-wenqing"},"content":"    protected static final String[] DAYS \u003d new String[]","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"z-wenqing"},"content":"            {\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"};","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"john-nng"},"content":"     * Parses User Input and Identifies the command used.","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"john-nng"},"content":"     * @param command The users text input.","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Leong-ZM"},"content":"    public static void parseCommand(String command, UserList userList) throws","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"Leong-ZM"},"content":"            InvalidFormatException, InvalidDayException, InvalidUserException {","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"Leong-ZM"},"content":"        if (command.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"john-nng"},"content":"            UI.printListingUsers();","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Leong-ZM"},"content":"            userList.listAll();","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Leong-ZM"},"content":"        } else if (command.equalsIgnoreCase(\"help\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Leong-ZM"},"content":"            UI.printHelp();","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Leong-ZM"},"content":"        } else if (command.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"john-nng"},"content":"            UI.printBye();","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Leong-ZM"},"content":"            Duke.setIsFinished(true);","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Leong-ZM"},"content":"        } else if (command.equalsIgnoreCase(\"current\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Leong-ZM"},"content":"            UI.printActiveUser(userList.getActiveUser().getName());","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Leong-ZM"},"content":"        } else if (command.equalsIgnoreCase(\"view\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Leong-ZM"},"content":"            userList.getActiveUser().viewTimetable();","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Leong-ZM"},"content":"        } else if (command.equalsIgnoreCase(\"next\")) {","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"Leong-ZM"},"content":"            printNextTask(userList.getActiveUser());","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"john-nng"},"content":"        } else if (command.toLowerCase().startsWith(\"adduser\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"john-nng"},"content":"            InputValidator.validateAddUserInput(command);","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"john-nng"},"content":"            String[] parts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"john-nng"},"content":"            String userName \u003d parts[1];","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"john-nng"},"content":"            User newUser \u003d new User(userName);","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"john-nng"},"content":"            UI.printNewUser(newUser.getName());","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Leong-ZM"},"content":"            userList.addUser(newUser);","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"z-wenqing"},"content":"            Storage.addUserInFolder();","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"john-nng"},"content":"        } else if (command.toLowerCase().startsWith(\"switch\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"john-nng"},"content":"            InputValidator.validateSwitchInput(command);","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"john-nng"},"content":"            String[] parts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"john-nng"},"content":"            String userName \u003d parts[1];","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"Leong-ZM"},"content":"            userList.setActiveUser(userList.findUser(userName));","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"Leong-ZM"},"content":"            UI.printActiveUser(userList.getActiveUser().getName());","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"john-nng"},"content":"        } else if (command.toLowerCase().startsWith(\"addtask\")) {","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"ZhuSijia0711"},"content":"            addTask(command, userList);","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"z-wenqing"},"content":"            User currentUser \u003d userList.getActiveUser();","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"z-wenqing"},"content":"            currentUser.getStorage().writeTaskInFile(currentUser);","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"ZhuSijia0711"},"content":"        } else if (command.toLowerCase().startsWith(\"deletetask\")) {","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"ZhuSijia0711"},"content":"            deleteTask(command, userList);","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"ZhuSijia0711"},"content":"        } else if (command.toLowerCase().startsWith(\"changetasktiming\")) {","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"ZhuSijia0711"},"content":"            changeTaskTiming(command, userList);","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"ZhuSijia0711"},"content":"        } else if (command.toLowerCase().startsWith(\"addrepeattask\")) {","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"ZhuSijia0711"},"content":"            addRepeatTask(command, userList);","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"ZhuSijia0711"},"content":"        } else if (command.toLowerCase().startsWith(\"changetasktype\")) {","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"ZhuSijia0711"},"content":"            changeTaskType(command, userList);","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"Leong-ZM"},"content":"        } else if (command.toLowerCase().startsWith(\"compareall\")) {","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"Leong-ZM"},"content":"            UI.printComparingAll();","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"Leong-ZM"},"content":"            UI.printSharedTime(Timetable.compareAllTimetables(userList));","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"ZhuSijia0711"},"content":"        } else if (command.toLowerCase().startsWith(\"compare\")) {","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"ZhuSijia0711"},"content":"            InputValidator.validateCompareInput(command);","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"ZhuSijia0711"},"content":"            String[] parts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"ZhuSijia0711"},"content":"            String user1 \u003d parts[1];","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"ZhuSijia0711"},"content":"            String user2 \u003d parts[2];","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"ZhuSijia0711"},"content":"            InputValidator.validateUserInput(user1, userList);","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"ZhuSijia0711"},"content":"            InputValidator.validateUserInput(user2, userList);","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"Leong-ZM"},"content":"            UI.printSharedTime(Timetable.compareTimetable(userList.findUser(user1).getTimetable(),","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"Leong-ZM"},"content":"                    userList.findUser(user2).getTimetable()));","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"z-wenqing"},"content":"        } else if (command.toLowerCase().startsWith(\"addforall\")) {","lastModifiedDate":"2024-03-22"},{"lineNumber":81,"author":{"gitId":"z-wenqing"},"content":"            addTaskForAll(command, userList);","lastModifiedDate":"2024-03-22"},{"lineNumber":82,"author":{"gitId":"z-wenqing"},"content":"        } else if (command.toLowerCase().startsWith(\"viewcommonevents\")) {","lastModifiedDate":"2024-03-22"},{"lineNumber":83,"author":{"gitId":"z-wenqing"},"content":"            printConfirmedEvent(userList);","lastModifiedDate":"2024-03-22"},{"lineNumber":84,"author":{"gitId":"Leong-ZM"},"content":"        } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"ZhuSijia0711"},"content":"            UI.printInvalidCommand();","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"ZhuSijia0711"},"content":"    private static void changeTaskType(String command, UserList userList) throws InvalidFormatException {","lastModifiedDate":"2024-03-22"},{"lineNumber":90,"author":{"gitId":"ZhuSijia0711"},"content":"        try {","lastModifiedDate":"2024-03-22"},{"lineNumber":91,"author":{"gitId":"ZhuSijia0711"},"content":"            InputValidator.validateChangeTaskType(command);","lastModifiedDate":"2024-03-22"},{"lineNumber":92,"author":{"gitId":"ZhuSijia0711"},"content":"            String[] parts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2024-03-22"},{"lineNumber":93,"author":{"gitId":"ZhuSijia0711"},"content":"            List\u003cString\u003e wordList \u003d Arrays.asList(parts);","lastModifiedDate":"2024-03-22"},{"lineNumber":94,"author":{"gitId":"ZhuSijia0711"},"content":"            String day \u003d wordList.get(2);","lastModifiedDate":"2024-03-22"},{"lineNumber":95,"author":{"gitId":"ZhuSijia0711"},"content":"            int index \u003d Integer.parseInt(wordList.get(wordList.indexOf(\"/index\") + 1));","lastModifiedDate":"2024-03-22"},{"lineNumber":96,"author":{"gitId":"ZhuSijia0711"},"content":"            String newType \u003d wordList.get(wordList.indexOf(\"/type\") + 1);","lastModifiedDate":"2024-03-22"},{"lineNumber":97,"author":{"gitId":"ZhuSijia0711"},"content":"            InputValidator.validateDay(day);","lastModifiedDate":"2024-03-22"},{"lineNumber":98,"author":{"gitId":"ZhuSijia0711"},"content":"            userList.getActiveUser().getTimetable().changeTaskType(day, index - 1, newType);","lastModifiedDate":"2024-03-22"},{"lineNumber":99,"author":{"gitId":"ZhuSijia0711"},"content":"            System.out.println(\"Task type changed successfully.\");","lastModifiedDate":"2024-03-22"},{"lineNumber":100,"author":{"gitId":"ZhuSijia0711"},"content":"        } catch (InvalidDayException | IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-03-22"},{"lineNumber":101,"author":{"gitId":"ZhuSijia0711"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-22"},{"lineNumber":102,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":103,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":104,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":105,"author":{"gitId":"ZhuSijia0711"},"content":"    private static void deleteTask(String command, UserList userList) {","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"ZhuSijia0711"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"ZhuSijia0711"},"content":"            InputValidator.validateDeleteTaskInput(command);","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"ZhuSijia0711"},"content":"            String[] parts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"ZhuSijia0711"},"content":"            String day \u003d parts[2];","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"ZhuSijia0711"},"content":"            int index \u003d Integer.parseInt(parts[4]);","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"ZhuSijia0711"},"content":"            InputValidator.validateDay(day);","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"ZhuSijia0711"},"content":"            userList.getActiveUser().getTimetable().deleteUserTask(day, index);","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"ZhuSijia0711"},"content":"        } catch (InvalidFormatException | InvalidDayException e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"ZhuSijia0711"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"Leong-ZM"},"content":"    private static void addTask(String command, UserList userList) throws","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"Leong-ZM"},"content":"            InvalidDayException, InvalidFormatException {","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"john-nng"},"content":"        InputValidator.validateAddTaskInput(command);","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"z-wenqing"},"content":"        Task task \u003d parseTask(command);","lastModifiedDate":"2024-03-22"},{"lineNumber":123,"author":{"gitId":"z-wenqing"},"content":"        userList.getActiveUser().getTimetable().addUserTask(task.day, task);","lastModifiedDate":"2024-03-22"},{"lineNumber":124,"author":{"gitId":"z-wenqing"},"content":"        UI.printAddTask(task);","lastModifiedDate":"2024-03-22"},{"lineNumber":125,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":127,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":128,"author":{"gitId":"z-wenqing"},"content":"    public static Task parseTask(String command) throws InvalidDayException {","lastModifiedDate":"2024-03-22"},{"lineNumber":129,"author":{"gitId":"john-nng"},"content":"        String[] parts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"john-nng"},"content":"        List\u003cString\u003e wordList \u003d Arrays.asList(parts);","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"john-nng"},"content":"        String day \u003d parts[2];","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"john-nng"},"content":"        String description \u003d parseDescription(wordList);","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"john-nng"},"content":"        String startTime \u003d parts[wordList.indexOf(\"/from\") + 1];","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"john-nng"},"content":"        String endTime \u003d parts[wordList.indexOf(\"/to\") + 1];","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":136,"author":{"gitId":"z-wenqing"},"content":"        String type;","lastModifiedDate":"2024-03-22"},{"lineNumber":137,"author":{"gitId":"z-wenqing"},"content":"        if (wordList.contains(\"/type\")) {","lastModifiedDate":"2024-03-22"},{"lineNumber":138,"author":{"gitId":"z-wenqing"},"content":"            type \u003d parts[wordList.indexOf(\"/type\") + 1];","lastModifiedDate":"2024-03-22"},{"lineNumber":139,"author":{"gitId":"z-wenqing"},"content":"        } else {","lastModifiedDate":"2024-03-22"},{"lineNumber":140,"author":{"gitId":"z-wenqing"},"content":"            type \u003d \"common\";","lastModifiedDate":"2024-03-22"},{"lineNumber":141,"author":{"gitId":"z-wenqing"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":142,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":143,"author":{"gitId":"john-nng"},"content":"        InputValidator.validateDay(day);","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"z-wenqing"},"content":"        return new Task(description, day, startTime, endTime, type);","lastModifiedDate":"2024-03-22"},{"lineNumber":145,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"ZhuSijia0711"},"content":"    private static void changeTaskTiming(String command, UserList userList) throws InvalidFormatException {","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"john-nng"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"ZhuSijia0711"},"content":"            InputValidator.validateChangeTaskTiming(command);","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"john-nng"},"content":"            String[] parts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"ZhuSijia0711"},"content":"            List\u003cString\u003e wordList \u003d Arrays.asList(parts);","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"john-nng"},"content":"            String day \u003d parts[2];","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"ZhuSijia0711"},"content":"            int index \u003d Integer.parseInt(parts[wordList.indexOf(\"/index\") + 1]);","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"ZhuSijia0711"},"content":"            LocalTime newStartTime \u003d LocalTime.parse(parts[wordList.indexOf(\"/from\") + 1]);","lastModifiedDate":"2024-03-22"},{"lineNumber":155,"author":{"gitId":"ZhuSijia0711"},"content":"            LocalTime newEndTime \u003d LocalTime.parse(parts[wordList.indexOf(\"/to\") + 1]);","lastModifiedDate":"2024-03-22"},{"lineNumber":156,"author":{"gitId":"john-nng"},"content":"            InputValidator.validateDay(day);","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"Leong-ZM"},"content":"            userList.getActiveUser().getTimetable().changeFlexibleTaskTiming(day,","lastModifiedDate":"2024-03-26"},{"lineNumber":158,"author":{"gitId":"Leong-ZM"},"content":"                    index - 1, newStartTime, newEndTime);","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"ZhuSijia0711"},"content":"            System.out.println(\"Flexible task timing changed successfully.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"ZhuSijia0711"},"content":"        } catch (InvalidDayException e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"ZhuSijia0711"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-21"},{"lineNumber":162,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":164,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"ZhuSijia0711"},"content":"    private static void addRepeatTask(String command, UserList userList) {","lastModifiedDate":"2024-03-22"},{"lineNumber":166,"author":{"gitId":"ZhuSijia0711"},"content":"        try {","lastModifiedDate":"2024-03-22"},{"lineNumber":167,"author":{"gitId":"ZhuSijia0711"},"content":"            InputValidator.validateAddRepeatTask(command);","lastModifiedDate":"2024-03-22"},{"lineNumber":168,"author":{"gitId":"ZhuSijia0711"},"content":"            String[] parts \u003d command.split(\"\\\\s+\");","lastModifiedDate":"2024-03-22"},{"lineNumber":169,"author":{"gitId":"ZhuSijia0711"},"content":"            List\u003cString\u003e wordlist \u003d Arrays.asList(parts);","lastModifiedDate":"2024-03-22"},{"lineNumber":170,"author":{"gitId":"ZhuSijia0711"},"content":"            int taskIndex \u003d wordlist.indexOf(\"/task\");","lastModifiedDate":"2024-03-22"},{"lineNumber":171,"author":{"gitId":"ZhuSijia0711"},"content":"            if (taskIndex \u003d\u003d -1 || taskIndex + 1 \u003e\u003d wordlist.size()) {","lastModifiedDate":"2024-03-22"},{"lineNumber":172,"author":{"gitId":"ZhuSijia0711"},"content":"                throw new InvalidFormatException((\"Please enter a task name!\"));","lastModifiedDate":"2024-03-22"},{"lineNumber":173,"author":{"gitId":"ZhuSijia0711"},"content":"            }","lastModifiedDate":"2024-03-22"},{"lineNumber":174,"author":{"gitId":"ZhuSijia0711"},"content":"            String description \u003d wordlist.get(taskIndex + 1);","lastModifiedDate":"2024-03-22"},{"lineNumber":175,"author":{"gitId":"ZhuSijia0711"},"content":"            int daysIndex \u003d wordlist.indexOf(\"/on\") + 1;","lastModifiedDate":"2024-03-22"},{"lineNumber":176,"author":{"gitId":"ZhuSijia0711"},"content":"            int endDaysIndex \u003d wordlist.indexOf(\"/from\");","lastModifiedDate":"2024-03-22"},{"lineNumber":177,"author":{"gitId":"ZhuSijia0711"},"content":"            String[] days \u003d Arrays.copyOfRange(parts, daysIndex, endDaysIndex);","lastModifiedDate":"2024-03-22"},{"lineNumber":178,"author":{"gitId":"ZhuSijia0711"},"content":"            if (days.length \u003c 2) {","lastModifiedDate":"2024-03-22"},{"lineNumber":179,"author":{"gitId":"ZhuSijia0711"},"content":"                throw new InvalidFormatException(\"Please enter at least 2 days, or you want to use addtask command!\");","lastModifiedDate":"2024-03-22"},{"lineNumber":180,"author":{"gitId":"ZhuSijia0711"},"content":"            }","lastModifiedDate":"2024-03-22"},{"lineNumber":181,"author":{"gitId":"ZhuSijia0711"},"content":"            String startTime \u003d parts[wordlist.indexOf(\"/from\") + 1];","lastModifiedDate":"2024-03-22"},{"lineNumber":182,"author":{"gitId":"ZhuSijia0711"},"content":"            String endTime \u003d parts[wordlist.indexOf(\"/to\") + 1];","lastModifiedDate":"2024-03-22"},{"lineNumber":183,"author":{"gitId":"ZhuSijia0711"},"content":"            String type \u003d parts[wordlist.indexOf(\"/type\") + 1];","lastModifiedDate":"2024-03-22"},{"lineNumber":184,"author":{"gitId":"ZhuSijia0711"},"content":"            for (String day : days) {","lastModifiedDate":"2024-03-22"},{"lineNumber":185,"author":{"gitId":"ZhuSijia0711"},"content":"                Task task \u003d new Task(description, day, startTime, endTime, type);","lastModifiedDate":"2024-03-22"},{"lineNumber":186,"author":{"gitId":"ZhuSijia0711"},"content":"                userList.getActiveUser().getTimetable().addUserTask(day, task);","lastModifiedDate":"2024-03-22"},{"lineNumber":187,"author":{"gitId":"ZhuSijia0711"},"content":"            }","lastModifiedDate":"2024-03-22"},{"lineNumber":188,"author":{"gitId":"ZhuSijia0711"},"content":"            System.out.println(\"Repeated task added successfully!\");","lastModifiedDate":"2024-03-22"},{"lineNumber":189,"author":{"gitId":"ZhuSijia0711"},"content":"        } catch (InvalidFormatException e) {","lastModifiedDate":"2024-03-22"},{"lineNumber":190,"author":{"gitId":"ZhuSijia0711"},"content":"            System.out.println(\"Please enter at least 2 days, or you want to use addtask command!\");","lastModifiedDate":"2024-03-22"},{"lineNumber":191,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":192,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":193,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":194,"author":{"gitId":"z-wenqing"},"content":"    private static String parseDescription(List\u003cString\u003e words) {","lastModifiedDate":"2024-03-22"},{"lineNumber":195,"author":{"gitId":"john-nng"},"content":"        int startIndex \u003d words.indexOf(\"/task\") + 1;","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"john-nng"},"content":"        int endIndex \u003d words.indexOf(\"/from\") - 1;","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"john-nng"},"content":"        StringBuilder description \u003d new StringBuilder();","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"john-nng"},"content":"        for (int i \u003d startIndex; i \u003c\u003d endIndex; i++) {","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"john-nng"},"content":"            description.append(words.get(i));","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"john-nng"},"content":"            if (i \u003c endIndex) {","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"john-nng"},"content":"                description.append(\" \");","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"john-nng"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":204,"author":{"gitId":"john-nng"},"content":"        return description.toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":206,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":207,"author":{"gitId":"Leong-ZM"},"content":"    private static void addTaskForAll(String command, UserList userList)","lastModifiedDate":"2024-03-26"},{"lineNumber":208,"author":{"gitId":"Leong-ZM"},"content":"            throws InvalidFormatException, InvalidDayException {","lastModifiedDate":"2024-03-26"},{"lineNumber":209,"author":{"gitId":"z-wenqing"},"content":"        InputValidator.validateAddTaskForAll(command);","lastModifiedDate":"2024-03-22"},{"lineNumber":210,"author":{"gitId":"z-wenqing"},"content":"        Task task \u003d parseTask(command);","lastModifiedDate":"2024-03-22"},{"lineNumber":211,"author":{"gitId":"z-wenqing"},"content":"        assert !userList.getUsers().isEmpty() : \"There is no user added.\";","lastModifiedDate":"2024-03-22"},{"lineNumber":212,"author":{"gitId":"z-wenqing"},"content":"        for (User user : userList.getUsers()) {","lastModifiedDate":"2024-03-22"},{"lineNumber":213,"author":{"gitId":"z-wenqing"},"content":"            user.getTimetable().addUserTask(task.day, task);","lastModifiedDate":"2024-03-22"},{"lineNumber":214,"author":{"gitId":"z-wenqing"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":215,"author":{"gitId":"z-wenqing"},"content":"        UI.printAddForAll(task);","lastModifiedDate":"2024-03-22"},{"lineNumber":216,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":217,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":218,"author":{"gitId":"z-wenqing"},"content":"    private static void printConfirmedEvent(UserList userList) {","lastModifiedDate":"2024-03-22"},{"lineNumber":219,"author":{"gitId":"z-wenqing"},"content":"        assert !userList.getUsers().isEmpty() : \"There is no user added.\";","lastModifiedDate":"2024-03-22"},{"lineNumber":220,"author":{"gitId":"z-wenqing"},"content":"        int taskCount \u003d 1;","lastModifiedDate":"2024-03-22"},{"lineNumber":221,"author":{"gitId":"z-wenqing"},"content":"        for (String day : DAYS) {","lastModifiedDate":"2024-03-22"},{"lineNumber":222,"author":{"gitId":"z-wenqing"},"content":"            for (Task task : userList.getActiveUser().getTimetable().getWeeklyTasks().get(day)) {","lastModifiedDate":"2024-03-22"},{"lineNumber":223,"author":{"gitId":"z-wenqing"},"content":"                if (task.type.equals(\"common\")) {","lastModifiedDate":"2024-03-22"},{"lineNumber":224,"author":{"gitId":"z-wenqing"},"content":"                    System.out.println(taskCount + \". \" + task);","lastModifiedDate":"2024-03-22"},{"lineNumber":225,"author":{"gitId":"z-wenqing"},"content":"                }","lastModifiedDate":"2024-03-22"},{"lineNumber":226,"author":{"gitId":"z-wenqing"},"content":"            }","lastModifiedDate":"2024-03-22"},{"lineNumber":227,"author":{"gitId":"z-wenqing"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":228,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":229,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":230,"author":{"gitId":"Leong-ZM"},"content":"    private static void printNextTask(User currentUser) {","lastModifiedDate":"2024-03-30"},{"lineNumber":231,"author":{"gitId":"Leong-ZM"},"content":"        LocalTime currentTime \u003d LocalTime.now();","lastModifiedDate":"2024-03-30"},{"lineNumber":232,"author":{"gitId":"Leong-ZM"},"content":"        String dayOfWeek \u003d DayOfWeek.from(LocalDate.now()).toString().toLowerCase();","lastModifiedDate":"2024-03-30"},{"lineNumber":233,"author":{"gitId":"Leong-ZM"},"content":"        String capitalizedDay \u003d dayOfWeek.substring(0, 1).toUpperCase() + dayOfWeek.substring(1);","lastModifiedDate":"2024-03-30"},{"lineNumber":234,"author":{"gitId":"Leong-ZM"},"content":"        Task current \u003d new Task(\"temp\", dayOfWeek, currentTime.toString(), currentTime.toString(), \"f\");","lastModifiedDate":"2024-03-30"},{"lineNumber":235,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":236,"author":{"gitId":"Leong-ZM"},"content":"        ArrayList\u003cTask\u003e tasksOfDay \u003d currentUser.getTimetable().getWeeklyTasks().get(capitalizedDay);","lastModifiedDate":"2024-03-30"},{"lineNumber":237,"author":{"gitId":"Leong-ZM"},"content":"        int numOfTasks \u003d tasksOfDay.size();","lastModifiedDate":"2024-03-30"},{"lineNumber":238,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":239,"author":{"gitId":"Leong-ZM"},"content":"        if (numOfTasks \u003d\u003d 0) {","lastModifiedDate":"2024-03-30"},{"lineNumber":240,"author":{"gitId":"Leong-ZM"},"content":"            UI.printNoTasks();","lastModifiedDate":"2024-03-30"},{"lineNumber":241,"author":{"gitId":"Leong-ZM"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":242,"author":{"gitId":"Leong-ZM"},"content":"            Task nextTask \u003d null;","lastModifiedDate":"2024-03-30"},{"lineNumber":243,"author":{"gitId":"Leong-ZM"},"content":"            for (int i \u003d numOfTasks - 1; i \u003e\u003d 0; i -\u003d 1) {","lastModifiedDate":"2024-03-30"},{"lineNumber":244,"author":{"gitId":"Leong-ZM"},"content":"                if (current.getStartTime().isBefore(tasksOfDay.get(i).getStartTime())) {","lastModifiedDate":"2024-03-30"},{"lineNumber":245,"author":{"gitId":"Leong-ZM"},"content":"                    nextTask \u003d tasksOfDay.get(i);","lastModifiedDate":"2024-03-30"},{"lineNumber":246,"author":{"gitId":"Leong-ZM"},"content":"                } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":247,"author":{"gitId":"Leong-ZM"},"content":"                    UI.printNext();","lastModifiedDate":"2024-03-30"},{"lineNumber":248,"author":{"gitId":"Leong-ZM"},"content":"                    if (nextTask \u003d\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":249,"author":{"gitId":"Leong-ZM"},"content":"                        UI.printNoTasks();","lastModifiedDate":"2024-03-30"},{"lineNumber":250,"author":{"gitId":"Leong-ZM"},"content":"                    } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":251,"author":{"gitId":"Leong-ZM"},"content":"                        System.out.println(nextTask.toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":252,"author":{"gitId":"Leong-ZM"},"content":"                    }","lastModifiedDate":"2024-03-30"},{"lineNumber":253,"author":{"gitId":"Leong-ZM"},"content":"                    return;","lastModifiedDate":"2024-03-30"},{"lineNumber":254,"author":{"gitId":"Leong-ZM"},"content":"                }","lastModifiedDate":"2024-03-30"},{"lineNumber":255,"author":{"gitId":"Leong-ZM"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":256,"author":{"gitId":"Leong-ZM"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":257,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":258,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":259,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":260,"author":{"gitId":"Leong-ZM"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ZhuSijia0711":94,"john-nng":44,"Leong-ZM":73,"z-wenqing":49}},{"path":"src/main/java/seedu/duke/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"z-wenqing"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"z-wenqing"},"content":"import seedu.duke.ui.UI;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"z-wenqing"},"content":"import java.io.File;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"z-wenqing"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"z-wenqing"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"z-wenqing"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"z-wenqing"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"z-wenqing"},"content":"import static seedu.duke.Parser.DAYS;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"z-wenqing"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"z-wenqing"},"content":" * Represents a storage manager that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"z-wenqing"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"z-wenqing"},"content":"public class Storage {","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"z-wenqing"},"content":"    public static String filePath;","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"z-wenqing"},"content":"    private static final String boxOutline \u003d \"+---------+\\n\";","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"z-wenqing"},"content":"    private static final String boxOutlineForWednesday \u003d \"+-------------+\\n\";","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"z-wenqing"},"content":"    private static final String boxOutlineForFriday \u003d \"+------+\\n\";","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Leong-ZM"},"content":"    private static final String lineSeparator \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"Leong-ZM"},"content":"            \".................................................................................................\\n\";","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"z-wenqing"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"z-wenqing"},"content":"        Storage.filePath \u003d filePath;","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"z-wenqing"},"content":"    public static void createFolder() {","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"z-wenqing"},"content":"        String folderPath \u003d \"data\";","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"z-wenqing"},"content":"        File folder \u003d new File(folderPath);","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"z-wenqing"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"z-wenqing"},"content":"            boolean folderCreated \u003d folder.mkdirs();","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"z-wenqing"},"content":"            if (folderCreated) {","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"z-wenqing"},"content":"                System.out.println(\"Folder created successfully.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"z-wenqing"},"content":"            } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"z-wenqing"},"content":"                System.out.println(\"Failed to create folder.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"z-wenqing"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"z-wenqing"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"z-wenqing"},"content":"            System.out.println(\"Folder already exists.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"z-wenqing"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"z-wenqing"},"content":"    public static void addExistingUsers(UserList userList) throws FileNotFoundException {","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"z-wenqing"},"content":"        String directoryPath \u003d \"data\";","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"z-wenqing"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"z-wenqing"},"content":"        File[] files \u003d directory.listFiles();","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"z-wenqing"},"content":"        if (files !\u003d null) {","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"z-wenqing"},"content":"            for (File file : files) {","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"z-wenqing"},"content":"                if (file !\u003d null) {","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"z-wenqing"},"content":"                    String fileName \u003d file.getName();","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"z-wenqing"},"content":"                    int indexOfDot \u003d fileName.indexOf(\".\");","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"z-wenqing"},"content":"                    String userName \u003d fileName.substring(0, indexOfDot);","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"z-wenqing"},"content":"                    User user \u003d new User(userName);","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"z-wenqing"},"content":"                    userList.addUser(user);","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"z-wenqing"},"content":"                    loadData(user);","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"z-wenqing"},"content":"                }","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"z-wenqing"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"z-wenqing"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"z-wenqing"},"content":"            UI.printEmptyDirectory();","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"z-wenqing"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"z-wenqing"},"content":"    public static void loadData(User user) throws FileNotFoundException {","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"z-wenqing"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"z-wenqing"},"content":"        String day \u003d \"\";","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"z-wenqing"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"z-wenqing"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"z-wenqing"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"z-wenqing"},"content":"            // ignore lines for formatting and weeks that have no tasks","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"z-wenqing"},"content":"            if (line.startsWith(\"+\") || line.startsWith(\".\") || line.isEmpty() || line.equals(\"No task :)\")) {","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"z-wenqing"},"content":"                continue;","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"z-wenqing"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"z-wenqing"},"content":"            if (line.startsWith(\"|\")) {","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"z-wenqing"},"content":"                day \u003d line.substring(1, line.length() - 1).trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"z-wenqing"},"content":"                continue;","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"z-wenqing"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"z-wenqing"},"content":"            user.getTimetable().addUserTask(day, extractTaskInfo(line, day));","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"z-wenqing"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"z-wenqing"},"content":"    public static void addUserInFolder() {","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"z-wenqing"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"z-wenqing"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"z-wenqing"},"content":"            if (f.createNewFile()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"z-wenqing"},"content":"                System.out.println(\"File created: \" + f.getName());","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"z-wenqing"},"content":"                String fileName \u003d f.getName();","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"z-wenqing"},"content":"                int indexOfDot \u003d fileName.indexOf(\".\");","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"z-wenqing"},"content":"                String userName \u003d fileName.substring(0, indexOfDot);","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"z-wenqing"},"content":"                writeToFile(filePath, \"Username: \" + userName, true);","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"z-wenqing"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"z-wenqing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"z-wenqing"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"z-wenqing"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"z-wenqing"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"z-wenqing"},"content":"     * Extracts task information from the local text file.","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"z-wenqing"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"z-wenqing"},"content":"     * @param line the current line in the file.","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"z-wenqing"},"content":"     * @param day  the day of the week.","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"z-wenqing"},"content":"     * @return a Task object represented by this line.","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"z-wenqing"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"z-wenqing"},"content":"    public static Task extractTaskInfo(String line, String day) {","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"z-wenqing"},"content":"        int indexOfDash \u003d line.indexOf(\"-\");","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"z-wenqing"},"content":"        String startTime \u003d line.substring(3, indexOfDash).trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"z-wenqing"},"content":"        String endTime \u003d line.substring(indexOfDash + 2, 16).trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"z-wenqing"},"content":"        int indexOfType \u003d line.indexOf(\"(type:\");","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"z-wenqing"},"content":"        String description \u003d line.substring(18, indexOfType).trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"z-wenqing"},"content":"        String type \u003d line.substring(indexOfType + 7, indexOfType + 8);","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"z-wenqing"},"content":"        return new Task(description, day, startTime, endTime, type);","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"z-wenqing"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"z-wenqing"},"content":"     * Writes the text to data file","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"z-wenqing"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"z-wenqing"},"content":"     * @param filePath  a relative path giving the location of the data file, relative to the current working directory.","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"z-wenqing"},"content":"     * @param textToAdd text to write to the file.","lastModifiedDate":"2024-03-24"},{"lineNumber":126,"author":{"gitId":"z-wenqing"},"content":"     * @param isAppend  whether to append the text or overwrite the whole file.","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"z-wenqing"},"content":"     * @throws IOException If there is something wrong.","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"z-wenqing"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":129,"author":{"gitId":"z-wenqing"},"content":"    public static void writeToFile(String filePath, String textToAdd, boolean isAppend) throws IOException {","lastModifiedDate":"2024-03-24"},{"lineNumber":130,"author":{"gitId":"z-wenqing"},"content":"        FileWriter fw \u003d new FileWriter(filePath, isAppend);","lastModifiedDate":"2024-03-24"},{"lineNumber":131,"author":{"gitId":"z-wenqing"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2024-03-24"},{"lineNumber":132,"author":{"gitId":"z-wenqing"},"content":"        fw.close();","lastModifiedDate":"2024-03-24"},{"lineNumber":133,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":134,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":135,"author":{"gitId":"z-wenqing"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"z-wenqing"},"content":"     * Adds task in file.","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"Leong-ZM"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"z-wenqing"},"content":"     * @param user the user that the timetable belongs to.","lastModifiedDate":"2024-03-24"},{"lineNumber":139,"author":{"gitId":"z-wenqing"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":140,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":141,"author":{"gitId":"z-wenqing"},"content":"    public void writeTaskInFile(User user) {","lastModifiedDate":"2024-03-24"},{"lineNumber":142,"author":{"gitId":"z-wenqing"},"content":"        Timetable timetable \u003d user.getTimetable();","lastModifiedDate":"2024-03-24"},{"lineNumber":143,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":144,"author":{"gitId":"z-wenqing"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":145,"author":{"gitId":"z-wenqing"},"content":"            for (String day : DAYS) {","lastModifiedDate":"2024-03-24"},{"lineNumber":146,"author":{"gitId":"z-wenqing"},"content":"                String outline;","lastModifiedDate":"2024-03-24"},{"lineNumber":147,"author":{"gitId":"z-wenqing"},"content":"                switch (day) {","lastModifiedDate":"2024-03-24"},{"lineNumber":148,"author":{"gitId":"z-wenqing"},"content":"                case (\"Wednesday\"):","lastModifiedDate":"2024-03-24"},{"lineNumber":149,"author":{"gitId":"z-wenqing"},"content":"                    outline \u003d boxOutlineForWednesday;","lastModifiedDate":"2024-03-24"},{"lineNumber":150,"author":{"gitId":"z-wenqing"},"content":"                    break;","lastModifiedDate":"2024-03-24"},{"lineNumber":151,"author":{"gitId":"z-wenqing"},"content":"                case (\"Friday\"):","lastModifiedDate":"2024-03-24"},{"lineNumber":152,"author":{"gitId":"z-wenqing"},"content":"                    outline \u003d boxOutlineForFriday;","lastModifiedDate":"2024-03-24"},{"lineNumber":153,"author":{"gitId":"z-wenqing"},"content":"                    break;","lastModifiedDate":"2024-03-24"},{"lineNumber":154,"author":{"gitId":"z-wenqing"},"content":"                default:","lastModifiedDate":"2024-03-24"},{"lineNumber":155,"author":{"gitId":"z-wenqing"},"content":"                    outline \u003d boxOutline;","lastModifiedDate":"2024-03-24"},{"lineNumber":156,"author":{"gitId":"z-wenqing"},"content":"                    break;","lastModifiedDate":"2024-03-24"},{"lineNumber":157,"author":{"gitId":"z-wenqing"},"content":"                }","lastModifiedDate":"2024-03-24"},{"lineNumber":158,"author":{"gitId":"z-wenqing"},"content":"                writeToFile(filePath, outline, true);","lastModifiedDate":"2024-03-24"},{"lineNumber":159,"author":{"gitId":"z-wenqing"},"content":"                writeToFile(filePath, \"| \" + day + \" |\" + \"\\n\", true);","lastModifiedDate":"2024-03-24"},{"lineNumber":160,"author":{"gitId":"z-wenqing"},"content":"                writeToFile(filePath, outline, true);","lastModifiedDate":"2024-03-24"},{"lineNumber":161,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":162,"author":{"gitId":"z-wenqing"},"content":"                if (timetable.getWeeklyTasks().get(day).isEmpty()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":163,"author":{"gitId":"z-wenqing"},"content":"                    writeToFile(filePath, \"No task :)\\n\", true);","lastModifiedDate":"2024-03-24"},{"lineNumber":164,"author":{"gitId":"z-wenqing"},"content":"                    writer.write(\"No task :)\\n\");","lastModifiedDate":"2024-03-24"},{"lineNumber":165,"author":{"gitId":"z-wenqing"},"content":"                } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":166,"author":{"gitId":"z-wenqing"},"content":"                    int taskCount \u003d 1;","lastModifiedDate":"2024-03-24"},{"lineNumber":167,"author":{"gitId":"z-wenqing"},"content":"                    for (Task task : timetable.getWeeklyTasks().get(day)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":168,"author":{"gitId":"Leong-ZM"},"content":"                        writer.write(taskCount + \". \" + task.getStartTime() + \" - \" + task.getEndTime() +","lastModifiedDate":"2024-03-26"},{"lineNumber":169,"author":{"gitId":"Leong-ZM"},"content":"                                \": \" + task.getDescription() + \" (type: \" + task.getType() + \")\" + \"\\n\");","lastModifiedDate":"2024-03-26"},{"lineNumber":170,"author":{"gitId":"z-wenqing"},"content":"                        taskCount +\u003d 1;","lastModifiedDate":"2024-03-24"},{"lineNumber":171,"author":{"gitId":"z-wenqing"},"content":"                    }","lastModifiedDate":"2024-03-24"},{"lineNumber":172,"author":{"gitId":"z-wenqing"},"content":"                }","lastModifiedDate":"2024-03-24"},{"lineNumber":173,"author":{"gitId":"z-wenqing"},"content":"                writer.write(lineSeparator);","lastModifiedDate":"2024-03-24"},{"lineNumber":174,"author":{"gitId":"z-wenqing"},"content":"                writer.write(\"\\n\");","lastModifiedDate":"2024-03-24"},{"lineNumber":175,"author":{"gitId":"z-wenqing"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":176,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":177,"author":{"gitId":"z-wenqing"},"content":"            System.out.println(\"Timetable has been written to \" + filePath);","lastModifiedDate":"2024-03-24"},{"lineNumber":178,"author":{"gitId":"z-wenqing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":179,"author":{"gitId":"z-wenqing"},"content":"            System.err.println(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":180,"author":{"gitId":"z-wenqing"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":181,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":182,"author":{"gitId":"z-wenqing"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Leong-ZM":6,"z-wenqing":176}},{"path":"src/main/java/seedu/duke/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhuSijia0711"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"john-nng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"ZhuSijia0711"},"content":"public class Task {","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"ZhuSijia0711"},"content":"    protected String description;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"z-wenqing"},"content":"    protected String day;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"john-nng"},"content":"    protected LocalTime startTime;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"john-nng"},"content":"    protected LocalTime endTime;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"ZhuSijia0711"},"content":"    protected String type;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"z-wenqing"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"z-wenqing"},"content":"     * Represents the constructor for Task class that takes in parameters including the description of the task,","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"z-wenqing"},"content":"     * the day of the task, the starting time and the ending time of the task.","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"z-wenqing"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"z-wenqing"},"content":"     * @param description description of the task.","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"z-wenqing"},"content":"     * @param day day of the task.","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"z-wenqing"},"content":"     * @param from starting time of the task.","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"z-wenqing"},"content":"     * @param to ending time of the task.","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"z-wenqing"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"ZhuSijia0711"},"content":"    public Task(String description, String day, String from, String to, String type) {","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"john-nng"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"john-nng"},"content":"        this.day \u003d day;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Leong-ZM"},"content":"        String fromHour \u003d from.split(\":\")[0];","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Leong-ZM"},"content":"        String fromMinute \u003d from.split(\":\")[1];","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Leong-ZM"},"content":"        String toHour \u003d to.split(\":\")[0];","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Leong-ZM"},"content":"        String toMinute \u003d to.split(\":\")[1];","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Leong-ZM"},"content":"        String formattedFrom \u003d formatDates(fromHour) + \":\" + formatDates(fromMinute);","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Leong-ZM"},"content":"        String formattedTo \u003d formatDates(toHour) + \":\" + formatDates(toMinute);","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Leong-ZM"},"content":"        this.startTime \u003d LocalTime.parse(formattedFrom);","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Leong-ZM"},"content":"        this.endTime \u003d LocalTime.parse(formattedTo);","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"ZhuSijia0711"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"z-wenqing"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"z-wenqing"},"content":"        return startTime;","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"john-nng"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"john-nng"},"content":"        return endTime;","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"ZhuSijia0711"},"content":"    public String getType(){","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"ZhuSijia0711"},"content":"        return type;","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"john-nng"},"content":"    public void setEndTime(LocalTime endTime) {","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"john-nng"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"ZhuSijia0711"},"content":"    public void setStartTime(LocalTime startTime){","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"ZhuSijia0711"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"ZhuSijia0711"},"content":"    public void setType(String type){","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"ZhuSijia0711"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"z-wenqing"},"content":"    private String formatDates(String time) {","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"z-wenqing"},"content":"        return time.length() \u003d\u003d 1 ? \"0\" + time : time;","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"z-wenqing"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"z-wenqing"},"content":"        return description;","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"z-wenqing"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"z-wenqing"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"ZhuSijia0711"},"content":"        return description + \" (\" + day + \" from \" + startTime + \" to \" + endTime + \")\" + \" type: \" + type;","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"ZhuSijia0711"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"ZhuSijia0711":20,"john-nng":15,"Leong-ZM":10,"z-wenqing":23}},{"path":"src/main/java/seedu/duke/Timetable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leong-ZM"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"john-nng"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"john-nng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"z-wenqing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"john-nng"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"john-nng"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"john-nng"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"john-nng"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"john-nng"},"content":" * This class represents the Timetable object consisting of Arraylist of Tasks for each day of the week.","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"john-nng"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Leong-ZM"},"content":"public class Timetable {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Leong-ZM"},"content":"    public static final String[] DAYS \u003d new String[]","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"Leong-ZM"},"content":"        {\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"};","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"john-nng"},"content":"    private Map\u003cString, ArrayList\u003cTask\u003e\u003e weeklyTasks; // Map to store tasks for each day","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"john-nng"},"content":"    public Timetable() {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"john-nng"},"content":"        weeklyTasks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"john-nng"},"content":"        //Initialize the map with empty lists for each day","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Leong-ZM"},"content":"        for (String day : DAYS) {","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"john-nng"},"content":"            weeklyTasks.put(day, new ArrayList\u003c\u003e());","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"z-wenqing"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"john-nng"},"content":"    public Map\u003cString, ArrayList\u003cTask\u003e\u003e getWeeklyTasks() {","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"john-nng"},"content":"        return weeklyTasks;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"z-wenqing"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"z-wenqing"},"content":"     * Prints tasks of the day specified.","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"Leong-ZM"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"z-wenqing"},"content":"     * @param day day of the week the task is on.","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"z-wenqing"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"z-wenqing"},"content":"    public void printTasksOfTheDay(String day) {","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"z-wenqing"},"content":"        String capitalizedDay \u003d day.substring(0, 1).toUpperCase() + day.substring(1);","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"z-wenqing"},"content":"        if (weeklyTasks.get(capitalizedDay).isEmpty()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"z-wenqing"},"content":"            System.out.println(\"NO TASK FOR \" + day);","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"z-wenqing"},"content":"            return;","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"z-wenqing"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"z-wenqing"},"content":"        System.out.println(capitalizedDay + \":\");","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"z-wenqing"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"z-wenqing"},"content":"        for (Task task : weeklyTasks.get(capitalizedDay)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"z-wenqing"},"content":"            System.out.println(count + \". \" + task.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"z-wenqing"},"content":"            count++;","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"z-wenqing"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"john-nng"},"content":"     * Adds task on dayOfWeek at an index","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"john-nng"},"content":"     * @param dayOfWeek first Timetable.","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"john-nng"},"content":"     * @param task      task to add.","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"john-nng"},"content":"    public void addUserTask(String dayOfWeek, Task task) {","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"john-nng"},"content":"        String capitalizedDay \u003d dayOfWeek.substring(0, 1).toUpperCase() + dayOfWeek.substring(1);","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"john-nng"},"content":"        weeklyTasks.get(capitalizedDay).add(task);","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"john-nng"},"content":"     * Deletes task on dayOfWeek at an index","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"john-nng"},"content":"     * @param dayOfWeek first Timetable.","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"john-nng"},"content":"     * @param index     index of task within task list","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"john-nng"},"content":"    public void deleteUserTask(String dayOfWeek, int index) {","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"john-nng"},"content":"        String capitalizedDay \u003d dayOfWeek.substring(0, 1).toUpperCase() + dayOfWeek.substring(1);","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"john-nng"},"content":"        //check if index is a valid number within a day\u0027s tasklist","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"john-nng"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c weeklyTasks.get(capitalizedDay).size()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"john-nng"},"content":"            Task taskDeleted \u003d weeklyTasks.get(capitalizedDay).get(index);","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"john-nng"},"content":"            weeklyTasks.get(capitalizedDay).remove(index);","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"z-wenqing"},"content":"            System.out.println(\"Task \" + taskDeleted.description + \" is deleted from \" + dayOfWeek);","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"john-nng"},"content":"            System.out.println(\"New task list for \" + capitalizedDay + \":\");","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"john-nng"},"content":"            printTasksOfTheDay(dayOfWeek);","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"Leong-ZM"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"john-nng"},"content":"            System.out.println(\"Invalid task index. Please try again.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"ZhuSijia0711"},"content":"    public void changeFlexibleTaskTiming(String dayOfWeek, int index, LocalTime newStartTime, LocalTime newEndTime) {","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"ZhuSijia0711"},"content":"        assert dayOfWeek !\u003d null : \"Day of week cannot be null\";","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"ZhuSijia0711"},"content":"        assert newStartTime !\u003d null : \"New start time cannot be null\";","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"ZhuSijia0711"},"content":"        assert newEndTime !\u003d null : \"New end time cannot be null\";","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"Leong-ZM"},"content":"        Task task \u003d readDay(dayOfWeek, index);","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"ZhuSijia0711"},"content":"        if (!task.getType().equals(\"f\")) {","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"Leong-ZM"},"content":"            throw new IllegalArgumentException(\"Task on \" + dayOfWeek + \" at index \" +","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"Leong-ZM"},"content":"                    (index + 1) + \" is not flexible, timings cannot be changed.\");","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"ZhuSijia0711"},"content":"        task.setStartTime(newStartTime);","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"ZhuSijia0711"},"content":"        task.setEndTime(newEndTime);","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"ZhuSijia0711"},"content":"    public void changeTaskType(String dayOfWeek, int index, String newType) {","lastModifiedDate":"2024-03-22"},{"lineNumber":94,"author":{"gitId":"Leong-ZM"},"content":"        Task task \u003d readDay(dayOfWeek, index);","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"Leong-ZM"},"content":"        task.setType(newType);","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"Leong-ZM"},"content":"    private Task readDay(String dayOfWeek, int index) {","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"ZhuSijia0711"},"content":"        String capitalizedDay \u003d dayOfWeek.substring(0, 1).toUpperCase() + dayOfWeek.substring(1);","lastModifiedDate":"2024-03-22"},{"lineNumber":100,"author":{"gitId":"ZhuSijia0711"},"content":"        ArrayList\u003cTask\u003e tasks \u003d weeklyTasks.get(capitalizedDay);","lastModifiedDate":"2024-03-22"},{"lineNumber":101,"author":{"gitId":"ZhuSijia0711"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-03-22"},{"lineNumber":102,"author":{"gitId":"ZhuSijia0711"},"content":"            throw new IndexOutOfBoundsException(\"Invalid index\");","lastModifiedDate":"2024-03-22"},{"lineNumber":103,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":104,"author":{"gitId":"Leong-ZM"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":106,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":107,"author":{"gitId":"john-nng"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"john-nng"},"content":"     * Compares and prints overlapping free time between two Timetables.","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"john-nng"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"john-nng"},"content":"     * @param table1 first Timetable.","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"john-nng"},"content":"     * @param table2 second Timetable","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"Leong-ZM"},"content":"     * @return Returns a merged timetable comprising both input timetables.","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"john-nng"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"Leong-ZM"},"content":"    public static Timetable compareTimetable(Timetable table1, Timetable table2) {","lastModifiedDate":"2024-03-23"},{"lineNumber":115,"author":{"gitId":"Leong-ZM"},"content":"        Timetable mergedTimetable \u003d new Timetable();","lastModifiedDate":"2024-03-23"},{"lineNumber":116,"author":{"gitId":"Leong-ZM"},"content":"        if (table1.equals(table2)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":117,"author":{"gitId":"Leong-ZM"},"content":"            return table1;","lastModifiedDate":"2024-03-23"},{"lineNumber":118,"author":{"gitId":"Leong-ZM"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":119,"author":{"gitId":"john-nng"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"john-nng"},"content":"            InputValidator.validateTableExistence(table1);","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"john-nng"},"content":"            InputValidator.validateTableExistence(table2);","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"Leong-ZM"},"content":"            for (String day : Timetable.DAYS) {","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"Leong-ZM"},"content":"                mergedTimetable.weeklyTasks.replace(day, mergeAndSortTasks(table1.getWeeklyTasks().get(day),","lastModifiedDate":"2024-03-23"},{"lineNumber":124,"author":{"gitId":"Leong-ZM"},"content":"                        table2.getWeeklyTasks().get(day)));","lastModifiedDate":"2024-03-23"},{"lineNumber":125,"author":{"gitId":"john-nng"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"john-nng"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"john-nng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"Leong-ZM"},"content":"        return mergedTimetable;","lastModifiedDate":"2024-03-23"},{"lineNumber":130,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":131,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":132,"author":{"gitId":"Leong-ZM"},"content":"    public static Timetable compareAllTimetables(UserList userList) {","lastModifiedDate":"2024-03-23"},{"lineNumber":133,"author":{"gitId":"Leong-ZM"},"content":"        Timetable mergedTimetable \u003d new Timetable();","lastModifiedDate":"2024-03-23"},{"lineNumber":134,"author":{"gitId":"Leong-ZM"},"content":"        for (User user : userList.getUsers()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":135,"author":{"gitId":"Leong-ZM"},"content":"            mergedTimetable \u003d compareTimetable(mergedTimetable, user.getTimetable());","lastModifiedDate":"2024-03-23"},{"lineNumber":136,"author":{"gitId":"Leong-ZM"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":137,"author":{"gitId":"Leong-ZM"},"content":"        return mergedTimetable;","lastModifiedDate":"2024-03-23"},{"lineNumber":138,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"john-nng"},"content":"    private static ArrayList\u003cTask\u003e mergeAndSortTasks(ArrayList\u003cTask\u003e taskList1, ArrayList\u003cTask\u003e taskList2) {","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"john-nng"},"content":"        ArrayList\u003cTask\u003e mergedTasks \u003d new ArrayList\u003c\u003e(taskList1);","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"john-nng"},"content":"        mergedTasks.addAll(taskList2);","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"john-nng"},"content":"        mergedTasks.sort(Comparator.comparing(Task::getStartTime));","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"john-nng"},"content":"        return mergedTasks;","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"Leong-ZM"},"content":"    public static void findOverlappingFreeTime(ArrayList\u003cTask\u003e tasks, String day) {","lastModifiedDate":"2024-03-23"},{"lineNumber":148,"author":{"gitId":"john-nng"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"john-nng"},"content":"            LocalTime previousEndTime \u003d LocalTime.MIN;","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"john-nng"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"john-nng"},"content":"                if (task.getStartTime().isAfter(previousEndTime)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"ZhuSijia0711"},"content":"                    System.out.println(previousEndTime + \" - \" + task.getStartTime() + \": Overlapping Free Time\");","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"john-nng"},"content":"                }","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"john-nng"},"content":"                previousEndTime \u003d task.getEndTime();","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"john-nng"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"john-nng"},"content":"            if (previousEndTime.isBefore(LocalTime.MAX)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"john-nng"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"Leong-ZM"},"content":"                System.out.println(previousEndTime + \" - \" + LocalTime.MAX.format(formatter) +","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"Leong-ZM"},"content":"                        \": Overlapping Free Time\");","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"john-nng"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"john-nng"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"john-nng"},"content":"            System.out.println(\"** Whole day is free on \" + day);","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"Leong-ZM"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ZhuSijia0711":17,"john-nng":80,"Leong-ZM":42,"z-wenqing":28}},{"path":"src/main/java/seedu/duke/User.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leong-ZM"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Leong-ZM"},"content":"public class User {","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"john-nng"},"content":"    private Timetable timetable;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"z-wenqing"},"content":"    private final String name;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"z-wenqing"},"content":"    private Storage storage;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"Leong-ZM"},"content":"    public User(String name) {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Leong-ZM"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"john-nng"},"content":"        this.timetable \u003d new Timetable();","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"z-wenqing"},"content":"        this.storage \u003d new Storage(\"data/\" + name + \".txt\");","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"z-wenqing"},"content":"    public Storage getStorage() {","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"z-wenqing"},"content":"        return storage;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Leong-ZM"},"content":"    public String getName() {","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Leong-ZM"},"content":"        return name;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"z-wenqing"},"content":"    public void viewTimetable() {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"Leong-ZM"},"content":"        for (String day : Timetable.DAYS) {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"john-nng"},"content":"            timetable.printTasksOfTheDay(day);","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"z-wenqing"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"john-nng"},"content":"    public Timetable getTimetable() {","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"john-nng"},"content":"        return timetable;","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Leong-ZM"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"john-nng":6,"Leong-ZM":14,"z-wenqing":12}},{"path":"src/main/java/seedu/duke/UserList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leong-ZM"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Leong-ZM"},"content":"import seedu.duke.exceptions.InvalidUserException;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"john-nng"},"content":"import seedu.duke.ui.UI;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"Leong-ZM"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"Leong-ZM"},"content":"public class UserList {","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Leong-ZM"},"content":"    private ArrayList\u003cUser\u003e allUsers;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Leong-ZM"},"content":"    private User activeUser;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Leong-ZM"},"content":"    public UserList() {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"john-nng"},"content":"        allUsers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Leong-ZM"},"content":"    public User getActiveUser() {","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"john-nng"},"content":"        return activeUser;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"Leong-ZM"},"content":"    public void setActiveUser(User user) throws InvalidUserException {","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"john-nng"},"content":"        if (user !\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Leong-ZM"},"content":"            activeUser \u003d user;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"john-nng"},"content":"        } else {","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Leong-ZM"},"content":"            throw new InvalidUserException(\"User does not exist!\");","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"Leong-ZM"},"content":"            //System.out.println(\"User does not exist!\");","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"Leong-ZM"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Leong-ZM"},"content":"    public void addUser(User user) {","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"john-nng"},"content":"        allUsers.add(user);","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"john-nng"},"content":"        if (allUsers.size() \u003d\u003d 1) {","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Leong-ZM"},"content":"            activeUser \u003d allUsers.get(0); //If this was the first user added, set them as the current user","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"john-nng"},"content":"            UI.printActiveUser(user.getName());","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Leong-ZM"},"content":"    public void listAll() {","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Leong-ZM"},"content":"        for (User user : allUsers) {","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"Leong-ZM"},"content":"            System.out.println(user.getName());","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"Leong-ZM"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Leong-ZM"},"content":"    public ArrayList\u003cUser\u003e getUsers() {","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"ZhuSijia0711"},"content":"        return allUsers;","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Leong-ZM"},"content":"    public int getListLength() {","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"Leong-ZM"},"content":"        return allUsers.size();","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"Leong-ZM"},"content":"    public User findUser(String name) {","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"john-nng"},"content":"        for (User u : allUsers) {","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"Leong-ZM"},"content":"            if (name.equalsIgnoreCase(u.getName())) {","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"john-nng"},"content":"                return u;","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"john-nng"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"john-nng"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"john-nng"},"content":"        return null;","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"Leong-ZM"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ZhuSijia0711":2,"john-nng":21,"Leong-ZM":35,"z-wenqing":1}},{"path":"src/main/java/seedu/duke/exceptions/InvalidDayException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leong-ZM"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"john-nng"},"content":"public class InvalidDayException extends Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"john-nng"},"content":"    public InvalidDayException(String message) {","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"john-nng"},"content":"        super(message);","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"john-nng"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"john-nng":7,"Leong-ZM":1}},{"path":"src/main/java/seedu/duke/exceptions/InvalidFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leong-ZM"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"john-nng"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"john-nng"},"content":" * This class represents Expections expected from the InputValidator class.","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"john-nng"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"john-nng"},"content":"public class InvalidFormatException extends Exception{","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"john-nng"},"content":"    public InvalidFormatException(String message) {","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"john-nng"},"content":"        super(message);","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"john-nng"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"john-nng":9,"Leong-ZM":1}},{"path":"src/main/java/seedu/duke/exceptions/InvalidUserException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leong-ZM"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"john-nng"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"john-nng"},"content":" * This class represents user Expections expected from the InputValidator class.","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"john-nng"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"john-nng"},"content":"public class InvalidUserException extends Exception{","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"john-nng"},"content":"    public InvalidUserException(String message) {","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"john-nng"},"content":"        super(message);","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"john-nng"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"john-nng":9,"Leong-ZM":1}},{"path":"src/main/java/seedu/duke/ui/UI.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Leong-ZM"},"content":"package seedu.duke.ui;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"Leong-ZM"},"content":"import seedu.duke.Task;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Leong-ZM"},"content":"import seedu.duke.Timetable;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Leong-ZM"},"content":"import static seedu.duke.Timetable.findOverlappingFreeTime;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"Leong-ZM"},"content":"public class UI {","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"Leong-ZM"},"content":"    public static void printGreeting() {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"Leong-ZM"},"content":"        System.out.println(\"Timetable comparison app opened. \");","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Leong-ZM"},"content":"    public static void printBye() {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"Leong-ZM"},"content":"        System.out.println(\"Bye. \");","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Leong-ZM"},"content":"    public static void printListingUsers() {","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"Leong-ZM"},"content":"        System.out.println(\"The current users are: \");","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"john-nng"},"content":"    public static void printNewUser(String name) {","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"john-nng"},"content":"        System.out.println(\"New user added: \" + name);","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"john-nng"},"content":"    public static void printActiveUser(String description) {","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Leong-ZM"},"content":"        System.out.println(\"The active user is: \" + description);","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Leong-ZM"},"content":"    public static void printInvalidCommand() {","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"Leong-ZM"},"content":"        System.out.println(\"Invalid command. \");","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"Leong-ZM"},"content":"    public static void printAddTask(Task task) {","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Leong-ZM"},"content":"        System.out.println(\"The following task is added: \" + task);","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Leong-ZM"},"content":"    public static void printHelp() {","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Leong-ZM"},"content":"        System.out.println(\"Note: use hh:mm 24hr time format (ex. 13:00) \\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Leong-ZM"},"content":"                \"List of available commands: \\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"Leong-ZM"},"content":"                \"list: list all users \\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Leong-ZM"},"content":"                \"bye: exit the app \\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Leong-ZM"},"content":"                \"current: view current user \\n\" +","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Leong-ZM"},"content":"                \"view: view timetable of current user \\n\" +","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"Leong-ZM"},"content":"                \"next: view your next task \\n\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"Leong-ZM"},"content":"                \"adduser: add new user \\n\" +","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"Leong-ZM"},"content":"                \"switch \u003cusername\u003e: switch to user \\n\" +","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"Leong-ZM"},"content":"                \"addtask /on \u003cday\u003e /from \u003cstart time\u003e /to \u003cend time\u003e: add task for current user\\n\" +","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"Leong-ZM"},"content":"                \"deletetask: delete task \\n\" +","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"Leong-ZM"},"content":"                \"changetasktiming: \\n\" +","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"Leong-ZM"},"content":"                \"changetasktype \u003cf/c\u003e: change the type of a task (flexible/confirmed)\\n\" +","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"Leong-ZM"},"content":"                \"compareall: compare timetables of all users \\n\" +","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"Leong-ZM"},"content":"                \"compare \u003cuser1\u003e \u003cuser2\u003e: compare timetables of specified users \\n\" +","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"Leong-ZM"},"content":"                \"addforall /on \u003cday\u003e /from \u003cstart time\u003e /to \u003cend time\u003e: add task for all users\\n\" +","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"Leong-ZM"},"content":"                \"viewcommonevents: view common events \");","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"Leong-ZM"},"content":"        printLine();","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"z-wenqing"},"content":"    public static void printAddForAll(Task task) {","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"z-wenqing"},"content":"        System.out.println(\"The following task is added for all users: \" + task.toString());","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"z-wenqing"},"content":"    public static void printEmptyDirectory() {","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"z-wenqing"},"content":"        System.out.println(\"Directory is empty.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"z-wenqing"},"content":"    public static void printLine() {","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"z-wenqing"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"Leong-ZM"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"Leong-ZM"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"Leong-ZM"},"content":"     * Prints the overlapping free time for each day in the format:","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"Leong-ZM"},"content":"     * ----------------------","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"Leong-ZM"},"content":"     * Shared Free Time on [day]","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"Leong-ZM"},"content":"     * HH:mm - HH:mm: Overlapping Free Time","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"Leong-ZM"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"Leong-ZM"},"content":"    public static void printSharedTime(Timetable merged) {","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"Leong-ZM"},"content":"        for (String day : Timetable.DAYS) {","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"Leong-ZM"},"content":"            System.out.println(\"Shared free time on \" + day + \":\");","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"Leong-ZM"},"content":"            findOverlappingFreeTime(merged.getWeeklyTasks().get(day), day);","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"Leong-ZM"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"Leong-ZM"},"content":"    public static void printComparingAll() {","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"Leong-ZM"},"content":"        System.out.println(\"Comparing all timetables: \");","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"Leong-ZM"},"content":"    public static void printNext() {","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"Leong-ZM"},"content":"        System.out.println(\"Your next task is: \");","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"Leong-ZM"},"content":"    public static void printNoTasks() {","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"Leong-ZM"},"content":"        System.out.println(\"You have no tasks today. \");","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"Leong-ZM"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"john-nng":3,"Leong-ZM":79,"z-wenqing":14}},{"path":"src/test/java/seedu/duke/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"z-wenqing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"z-wenqing"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"class DukeTest {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"z-wenqing"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"z-wenqing"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"z-wenqing"},"content":"    public void testAddTask() {","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"z-wenqing"},"content":"        UserList userlist \u003d new UserList();","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"z-wenqing"},"content":"        User user \u003d new User(\"Test User\");","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"z-wenqing"},"content":"        userlist.addUser(user);","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"ZhuSijia0711"},"content":"        Task task \u003d new Task(\"Lecture\", \"Monday\", \"1:00\", \"2:00\", \"f\");","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"z-wenqing"},"content":"        user.getTimetable().addUserTask(\"Monday\", task);","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"z-wenqing"},"content":"        assertEquals(\"Lecture\", task.description);","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"z-wenqing"},"content":"        assertEquals(LocalTime.parse(\"01:00\"), task.startTime);","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"z-wenqing"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"ZhuSijia0711"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"ZhuSijia0711"},"content":"    public void testAddUser() {","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"ZhuSijia0711"},"content":"        UserList userList \u003d new UserList();","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"ZhuSijia0711"},"content":"        User user \u003d new User(\"Test User\");","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"Leong-ZM"},"content":"        userList.addUser(user);","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"ZhuSijia0711"},"content":"        // Verify that the user is added to the list","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"ZhuSijia0711"},"content":"        assertEquals(1, userList.getListLength());","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"Leong-ZM"},"content":"        assertEquals(user, userList.getActiveUser());","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Leong-ZM"},"content":"        assertTrue(userList.getUsers().contains(user));","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"Leong-ZM"},"content":"        User user2 \u003d new User(\"Test User 2\");","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"Leong-ZM"},"content":"        userList.addUser(user2);","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Leong-ZM"},"content":"        assertEquals(2, userList.getListLength());","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"Leong-ZM"},"content":"        assertEquals(user, userList.getActiveUser());","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"Leong-ZM"},"content":"        assertTrue(userList.getUsers().contains(user));","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"Leong-ZM"},"content":"        assertTrue(userList.getUsers().contains(user2));","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"ZhuSijia0711":9,"Leong-ZM":11,"-":12,"z-wenqing":12}},{"path":"src/test/java/seedu/duke/InputValidatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhuSijia0711"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"ZhuSijia0711"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"ZhuSijia0711"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Leong-ZM"},"content":"import seedu.duke.exceptions.InvalidFormatException;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"ZhuSijia0711"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"ZhuSijia0711"},"content":"class InputValidatorTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"ZhuSijia0711"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"ZhuSijia0711"},"content":"    public void testValidChangeTaskTimingFormat() {","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"ZhuSijia0711"},"content":"        String validInput \u003d \"changeTaskTiming /on monday /index 1 /from 09:00 /to 10:00\";","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"ZhuSijia0711"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"ZhuSijia0711"},"content":"            InputValidator.validateChangeTaskTiming(validInput);","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"ZhuSijia0711"},"content":"        } catch (InvalidFormatException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"ZhuSijia0711"},"content":"            fail(\"Unexpected exception: \" + e.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"ZhuSijia0711"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"ZhuSijia0711"},"content":"    public void testInvalidChangeTaskTimingFormat() {","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"ZhuSijia0711"},"content":"        String invalidInput \u003d \"changeTaskTiming /on monday /index 1 /from 09:00\";","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"ZhuSijia0711"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"ZhuSijia0711"},"content":"            InputValidator.validateChangeTaskTiming(invalidInput);","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"ZhuSijia0711"},"content":"            fail(\"Expected InvalidFormatException\");","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"ZhuSijia0711"},"content":"        } catch (InvalidFormatException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"ZhuSijia0711"},"content":"            assertEquals(\"[ERROR] Invalid changeTaskTiming format. Expected format: \" +","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"ZhuSijia0711"},"content":"                    \"changeTaskTiming /on [day] /index [index] /from [new start time] /to [new end time]\", e.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"ZhuSijia0711"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"ZhuSijia0711"},"content":"    public void testValidChangeTaskTypeFormat() {","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"ZhuSijia0711"},"content":"        String validInput \u003d \"changetasktype /on Monday /index 1 /type f\";","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"ZhuSijia0711"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"ZhuSijia0711"},"content":"            InputValidator.validateChangeTaskType(validInput);","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"ZhuSijia0711"},"content":"        } catch (InvalidFormatException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"ZhuSijia0711"},"content":"            fail(\"Unexpected exception: \" + e.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"ZhuSijia0711"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"ZhuSijia0711"},"content":"    public void testInvalidChangeTaskTypeFormat() {","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"ZhuSijia0711"},"content":"        String invalidInput \u003d \"changetasktype /on Monday /index 1 /type a\";","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"ZhuSijia0711"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"ZhuSijia0711"},"content":"            InputValidator.validateChangeTaskType(invalidInput);","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"ZhuSijia0711"},"content":"            fail(\"Expected InvalidFormatException\");","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"ZhuSijia0711"},"content":"        } catch (InvalidFormatException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"ZhuSijia0711"},"content":"            assertEquals(\"[ERROR] Invalid changeTaskType format. Expected format: \" +","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"ZhuSijia0711"},"content":"                    \"changeTaskType /on [day] /index [index] /type [f/c]\", e.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"ZhuSijia0711"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"ZhuSijia0711"},"content":"    public void testValidAddRepeatTaskFormat() {","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"ZhuSijia0711"},"content":"        String validInput \u003d \"addRepeatTask /task lec /on monday tuesday /from 08:00 /to 10:00 /type f\";","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"ZhuSijia0711"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"ZhuSijia0711"},"content":"            InputValidator.validateAddRepeatTask(validInput);","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"ZhuSijia0711"},"content":"        } catch (InvalidFormatException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"ZhuSijia0711"},"content":"            fail(\"Unexpected exception: \" + e.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"ZhuSijia0711"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"ZhuSijia0711"},"content":"    public void testInvalidAddRepeatTaskFormat() {","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"ZhuSijia0711"},"content":"        String invalidInput \u003d \"addRepeatTask /task lec /from 08:00 /to 10:00 /type f\";","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"ZhuSijia0711"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"ZhuSijia0711"},"content":"            InputValidator.validateAddRepeatTask(invalidInput);","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"ZhuSijia0711"},"content":"            fail(\"Expected InvalidFormatException\");","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"ZhuSijia0711"},"content":"        } catch (InvalidFormatException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"ZhuSijia0711"},"content":"            assertEquals(\"[ERROR] Invalid addRepeatTask format. Expected format: \" +","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"ZhuSijia0711"},"content":"                    \"addRepeatTask /task [description] /on [day(s)] /from [start time] /to [end time] /type [f/c]\", e.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"ZhuSijia0711"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"ZhuSijia0711":71,"Leong-ZM":2}},{"path":"src/test/java/seedu/duke/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Leong-ZM"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Leong-ZM"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Leong-ZM"},"content":"import seedu.duke.exceptions.InvalidDayException;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Leong-ZM"},"content":"import seedu.duke.exceptions.InvalidFormatException;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Leong-ZM"},"content":"import seedu.duke.exceptions.InvalidUserException;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"Leong-ZM"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"Leong-ZM"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"Leong-ZM"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Leong-ZM"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"Leong-ZM"},"content":"class ParserTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"Leong-ZM"},"content":"    UserList userlist \u003d new UserList();","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"Leong-ZM"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"Leong-ZM"},"content":"    public void sampleTest() {","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"Leong-ZM"},"content":"        assertTrue(true);","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"Leong-ZM"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"Leong-ZM"},"content":"    public void adduserCommandTest() throws InvalidDayException, InvalidFormatException, InvalidUserException {","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"Leong-ZM"},"content":"        Parser.parseCommand(\"addUser User1\", userlist);","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"Leong-ZM"},"content":"        assertEquals(1, userlist.getListLength());","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"Leong-ZM"},"content":"        assertEquals(\"User1\", userlist.getActiveUser().getName());","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Leong-ZM"},"content":"        Parser.parseCommand(\"addUser User2\", userlist);","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"Leong-ZM"},"content":"        Parser.parseCommand(\"addUser User3\", userlist);","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Leong-ZM"},"content":"        Parser.parseCommand(\"addUser User4\", userlist);","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"Leong-ZM"},"content":"        assertEquals(4, userlist.getListLength());","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"Leong-ZM"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"Leong-ZM"},"content":"    public void invalidAdduserCommandTest() {","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"Leong-ZM"},"content":"        try {","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"Leong-ZM"},"content":"            Parser.parseCommand(\"addUser\", userlist);","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"Leong-ZM"},"content":"            fail();","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"Leong-ZM"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"Leong-ZM"},"content":"            assertEquals(\"[ERROR] Invalid addUser format. Expected format: adduser \u003cdesired user\u0027s name\u003e\",","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"Leong-ZM"},"content":"                    e.getMessage());","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"Leong-ZM"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"Leong-ZM"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"Leong-ZM"},"content":"    public void switchCommandTest() throws InvalidDayException, InvalidFormatException, InvalidUserException {","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Leong-ZM"},"content":"        User user1 \u003d new User(\"User1\");","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Leong-ZM"},"content":"        User user2 \u003d new User(\"User2\");","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"Leong-ZM"},"content":"        userlist.addUser(user1);","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"Leong-ZM"},"content":"        userlist.addUser(user2);","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"Leong-ZM"},"content":"        Parser.parseCommand(\"switch User2\", userlist);","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"Leong-ZM"},"content":"        assertEquals(2, userlist.getListLength());","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"Leong-ZM"},"content":"        assertEquals(\"User2\", userlist.getActiveUser().getName());","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"Leong-ZM"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"Leong-ZM"},"content":"    public void invalidSwitchCommandTest() {","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"Leong-ZM"},"content":"        User user1 \u003d new User(\"User1\");","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"Leong-ZM"},"content":"        User user2 \u003d new User(\"User2\");","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"Leong-ZM"},"content":"        userlist.addUser(user1);","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"Leong-ZM"},"content":"        userlist.addUser(user2);","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"Leong-ZM"},"content":"        try {","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"Leong-ZM"},"content":"            Parser.parseCommand(\"switch\", userlist);","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"Leong-ZM"},"content":"            fail();","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"Leong-ZM"},"content":"        } catch (InvalidFormatException e) {","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"Leong-ZM"},"content":"            assertEquals(\"[ERROR] Invalid switch format. Expected format: switch \u003cdesired user\u0027s name\u003e\",","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"Leong-ZM"},"content":"                    e.getMessage());","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"Leong-ZM"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"Leong-ZM"},"content":"            fail();","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"Leong-ZM"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"Leong-ZM"},"content":"        try {","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"Leong-ZM"},"content":"            Parser.parseCommand(\"switch noUser\", userlist);","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"Leong-ZM"},"content":"            fail();","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"Leong-ZM"},"content":"        } catch (InvalidUserException e) {","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"Leong-ZM"},"content":"            assertEquals(\"User does not exist!\", e.getMessage());","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"Leong-ZM"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"Leong-ZM"},"content":"            fail();","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"Leong-ZM"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"Leong-ZM"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"Leong-ZM"},"content":"    public void addTaskCommandTest() throws InvalidDayException, InvalidUserException, InvalidFormatException {","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"Leong-ZM"},"content":"        User user1 \u003d new User(\"User1\");","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"Leong-ZM"},"content":"        userlist.addUser(user1);","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"Leong-ZM"},"content":"        Parser.parseCommand(\"addtask /on Monday /task test1 /from 9:00 /to 11:00 /type f\", userlist);","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"Leong-ZM"},"content":"        Parser.parseCommand(\"addtask /on Monday /task test2 /from 13:00 /to 15:00 /type f\", userlist);","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"Leong-ZM"},"content":"        ArrayList\u003cTask\u003e testTasksMon \u003d user1.getTimetable().getWeeklyTasks().get(\"Monday\");","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"Leong-ZM"},"content":"        ArrayList\u003cTask\u003e testTasksTue \u003d user1.getTimetable().getWeeklyTasks().get(\"Tuesday\");","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"Leong-ZM"},"content":"        assertEquals(\"test1\", testTasksMon.get(0).getDescription());","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"Leong-ZM"},"content":"        assertEquals(\"09:00\", testTasksMon.get(0).getStartTime().toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"Leong-ZM"},"content":"        assertEquals(\"11:00\", testTasksMon.get(0).getEndTime().toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"Leong-ZM"},"content":"        assertEquals(\"test2\", testTasksMon.get(1).getDescription());","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"Leong-ZM"},"content":"        assertEquals(\"13:00\", testTasksMon.get(1).getStartTime().toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"Leong-ZM"},"content":"        assertEquals(\"15:00\", testTasksMon.get(1).getEndTime().toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"Leong-ZM"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"Leong-ZM"},"content":"            String testDescription \u003d testTasksTue.get(1).getDescription();","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"Leong-ZM"},"content":"            fail();","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"Leong-ZM"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"Leong-ZM"},"content":"            assertEquals(\"Index 1 out of bounds for length 0\", e.getMessage());","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"Leong-ZM"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"Leong-ZM"},"content":"            fail();","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"Leong-ZM"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"Leong-ZM"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"Leong-ZM"},"content":"    public void invalidAddTaskCommandTest() {","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"Leong-ZM"},"content":"        User user1 \u003d new User(\"User1\");","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"Leong-ZM"},"content":"        userlist.addUser(user1);","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"Leong-ZM"},"content":"        String expectedErrorMessage \u003d \"[ERROR] Invalid addtask format. Expected format: addtask /on [day]\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"Leong-ZM"},"content":"                \" /task [description] /from [start time] /to [end time] /type [f/c]\";","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"Leong-ZM"},"content":"        String[] testMessages \u003d {\"addtask\",","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"Leong-ZM"},"content":"                \"addtask /on Monday\",","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"Leong-ZM"},"content":"                \"addtask /on Monday /task description\",","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"Leong-ZM"},"content":"                \"addtask /on Monday /task description /from 09:00 /to 11:00\",","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"Leong-ZM"},"content":"                \"addtask Monday description 09:00 11:00\"};","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"Leong-ZM"},"content":"        for (String message : testMessages) {","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"Leong-ZM"},"content":"            try {","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"Leong-ZM"},"content":"                Parser.parseCommand(message, userlist);","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"Leong-ZM"},"content":"                fail();","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"Leong-ZM"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"Leong-ZM"},"content":"                assertEquals(expectedErrorMessage, e.getMessage());","lastModifiedDate":"2024-03-26"},{"lineNumber":132,"author":{"gitId":"Leong-ZM"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"Leong-ZM"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"Leong-ZM"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"Leong-ZM"},"content":"            Parser.parseCommand(\"addtask /on Oneday /task lecture /from 9:00 /to 11:00 /type f\", userlist);","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"Leong-ZM"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"Leong-ZM"},"content":"            assertEquals(\"[ERROR] Invalid day. Please enter a day from Monday - Sunday.\", e.getMessage());","lastModifiedDate":"2024-03-30"},{"lineNumber":139,"author":{"gitId":"Leong-ZM"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":141,"author":{"gitId":"Leong-ZM"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":142,"author":{"gitId":"Leong-ZM"},"content":"            Parser.parseCommand(\"addtask /on Monday /task lecture /from 9:00 /to 25:00 /type f\", userlist);","lastModifiedDate":"2024-03-30"},{"lineNumber":143,"author":{"gitId":"Leong-ZM"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":144,"author":{"gitId":"Leong-ZM"},"content":"            assertEquals(\"Text \u002725:00\u0027 could not be parsed: Invalid value for HourOfDay\" +","lastModifiedDate":"2024-03-30"},{"lineNumber":145,"author":{"gitId":"Leong-ZM"},"content":"                    \" (valid values 0 - 23): 25\", e.getMessage());","lastModifiedDate":"2024-03-30"},{"lineNumber":146,"author":{"gitId":"Leong-ZM"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"Leong-ZM"},"content":"    public void addForAllTest() throws InvalidDayException, InvalidUserException, InvalidFormatException {","lastModifiedDate":"2024-03-30"},{"lineNumber":150,"author":{"gitId":"Leong-ZM"},"content":"        User user1 \u003d new User(\"User1\");","lastModifiedDate":"2024-03-30"},{"lineNumber":151,"author":{"gitId":"Leong-ZM"},"content":"        User user2 \u003d new User(\"User2\");","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"Leong-ZM"},"content":"        userlist.addUser(user1);","lastModifiedDate":"2024-03-30"},{"lineNumber":153,"author":{"gitId":"Leong-ZM"},"content":"        userlist.addUser(user2);","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"Leong-ZM"},"content":"        Parser.parseCommand(\"addforall /on Monday /task lecture /from 9:00 /to 25:00 /type f\", userlist);","lastModifiedDate":"2024-03-30"},{"lineNumber":156,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":157,"author":{"gitId":"Leong-ZM"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":158,"author":{"gitId":"Leong-ZM"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"Leong-ZM"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Leong-ZM":159}},{"path":"src/test/java/seedu/duke/TimetableTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhuSijia0711"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ZhuSijia0711"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ZhuSijia0711"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"ZhuSijia0711"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ZhuSijia0711"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"ZhuSijia0711"},"content":"class TimetableTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ZhuSijia0711"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ZhuSijia0711"},"content":"    public void testAddUserTask() {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ZhuSijia0711"},"content":"        Timetable timetable \u003d new Timetable();","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ZhuSijia0711"},"content":"        Task task \u003d new Task(\"Study\",\"2024-03-18\", \"09:00\", \"11:00\",\"f\");","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"john-nng"},"content":"        timetable.addUserTask(\"Tuesday\", task);","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"ZhuSijia0711"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"john-nng"},"content":"        timetable.printTasksOfTheDay(\"Tuesday\");","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"john-nng"},"content":"        assertEquals(1, timetable.getWeeklyTasks().get(\"Tuesday\").size());","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"john-nng"},"content":"        assertEquals(task, timetable.getWeeklyTasks().get(\"Tuesday\").get(0));","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ZhuSijia0711"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"john-nng"},"content":"    public void testCompareTimetables() {","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"john-nng"},"content":"        Timetable timetable1 \u003d new Timetable();","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"john-nng"},"content":"        Timetable timetable2 \u003d new Timetable();","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"ZhuSijia0711"},"content":"        Task task1 \u003d new Task(\"Study\",\"2024-03-18\", \"09:00\", \"11:00\",\"f\");","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"ZhuSijia0711"},"content":"        Task task2 \u003d new Task(\"Study\",\"2024-03-18\", \"07:00\", \"10:00\",\"f\");","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"john-nng"},"content":"        timetable1.addUserTask(\"Monday\", task1);","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"john-nng"},"content":"        timetable2.addUserTask(\"Monday\", task2);","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"john-nng"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"john-nng"},"content":"        Timetable.compareTimetable(timetable1, timetable2);","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"john-nng"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"ZhuSijia0711"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"ZhuSijia0711"},"content":"    public void testChangeFlexibleTaskTiming_CorrectInput() {","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"ZhuSijia0711"},"content":"        Timetable timetable \u003d new Timetable();","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"ZhuSijia0711"},"content":"        Task flexibleTask \u003d new Task(\"lec\", \"monday\", \"09:00\", \"11:00\", \"f\");","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"ZhuSijia0711"},"content":"        timetable.addUserTask(\"monday\", flexibleTask);","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"ZhuSijia0711"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"ZhuSijia0711"},"content":"            timetable.changeFlexibleTaskTiming(\"monday\", 0, LocalTime.of(11, 0),","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"ZhuSijia0711"},"content":"                    LocalTime.of(12, 0));","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"ZhuSijia0711"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"ZhuSijia0711"},"content":"            fail(\"Unexpected exception: \" + e.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"ZhuSijia0711"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"ZhuSijia0711"},"content":"    public void testChangeFlexibleTaskTiming_InvalidIndex(){","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"ZhuSijia0711"},"content":"        Timetable timetable \u003d new Timetable();","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"ZhuSijia0711"},"content":"        try{","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"ZhuSijia0711"},"content":"            timetable.changeFlexibleTaskTiming(\"monday\", 0, LocalTime.of(11, 0),","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"ZhuSijia0711"},"content":"                    LocalTime.of(12, 0));","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"ZhuSijia0711"},"content":"            fail(\"Expected IndexOutOfBoundsException\");","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"ZhuSijia0711"},"content":"        } catch(IndexOutOfBoundsException e){","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"ZhuSijia0711"},"content":"            assertEquals(\"Invalid index\", e.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"ZhuSijia0711"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"ZhuSijia0711"},"content":"    public void testChangeFlexibleTaskTiming_NonFlexibleTask() {","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"ZhuSijia0711"},"content":"        Timetable timetable \u003d new Timetable();","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"ZhuSijia0711"},"content":"        Task nonFlexibleTask \u003d new Task(\"lec\", \"monday\", \"09:00\", \"11:00\", \"c\");","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"ZhuSijia0711"},"content":"        timetable.addUserTask(\"monday\", nonFlexibleTask);","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"ZhuSijia0711"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"ZhuSijia0711"},"content":"            timetable.changeFlexibleTaskTiming(\"monday\", 0, LocalTime.of(11, 0), LocalTime.of(12, 0));","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"ZhuSijia0711"},"content":"            fail(\"Expected IllegalArgumentException\");","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"ZhuSijia0711"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"ZhuSijia0711"},"content":"            assertEquals(\"Task on monday at index 1 is not flexible, \" +","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"ZhuSijia0711"},"content":"                    \"timings cannot be changed.\", e.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"ZhuSijia0711"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"ZhuSijia0711"},"content":"    public void testChangeTaskType_ValidInput() {","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"ZhuSijia0711"},"content":"        Timetable timetable \u003d new Timetable();","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"ZhuSijia0711"},"content":"        Task task \u003d new Task(\"lec\", \"monday\", \"09:00\", \"11:00\", \"f\");","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"ZhuSijia0711"},"content":"        timetable.addUserTask(\"monday\", task);","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"ZhuSijia0711"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"ZhuSijia0711"},"content":"            timetable.changeTaskType(\"monday\", 0, \"c\");","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"ZhuSijia0711"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"ZhuSijia0711"},"content":"            fail(\"Unexpected exception: \" + e.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"ZhuSijia0711"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"ZhuSijia0711"},"content":"    public void testChangeTaskType_InvalidIndex() {","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"ZhuSijia0711"},"content":"        Timetable timetable \u003d new Timetable();","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"ZhuSijia0711"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"ZhuSijia0711"},"content":"            timetable.changeTaskType(\"monday\", 0, \"c\");","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"ZhuSijia0711"},"content":"            fail(\"Expected IndexOutOfBoundsException\");","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"ZhuSijia0711"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"ZhuSijia0711"},"content":"            assertEquals(\"Invalid index\", e.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"ZhuSijia0711"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"ZhuSijia0711"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"ZhuSijia0711"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"ZhuSijia0711":78,"john-nng":12}}]
