[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"rexyyong"},"content":"    mainClass.set(\"seedu.lifetrack.LifeTrack\")","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"paturikarthik"},"content":"    archiveBaseName.set(\"lifetrack\")","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rexyyong":1,"-":44,"paturikarthik":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |      Name      |               Github Profile               | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":"--------|:--------------:|:------------------------------------------:|:---------:","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":"![](https://avatars.githubusercontent.com/u/64789669?v\u003d4) | Paturi Karthik | [Github](https://github.com/paturikarthik) | [Portfolio](docs/team/paturikarthik.md)","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"shawnpong"},"content":"![](https://avatars.githubusercontent.com/u/110764881?s\u003d400\u0026u\u003df41e3f40315f394bd71538063882c06bcfa2b624\u0026v\u003d4) | Shawn Pong | [Github](https://github.com/shawnpong) | [Portfolio](docs/team/shawnpong.md)","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"rexyyong"},"content":"![](https://drive.google.com/file/d/1BM0lQP13brp_vlVJsgHYzQHSWaREHrnP/view?usp\u003ddrive_link) | Rex Yong Jin Xiang | [Github](https://github.com/rexyyong) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"a-wild-chocolate"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yanyu | [Github](https://github.com/a-wild-chocolate/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"rexyyong":1,"a-wild-chocolate":1,"shawnpong":1,"-":3,"paturikarthik":2}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"# LifeTrack","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"{Give product intro here}","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":6,"paturikarthik":1}},{"path":"docs/team/paturikarthik.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"# Paturi Karthik - Project Portfolio Page","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"## Overview","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":"Hello","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"### Summary of Contributions","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"Hello","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"paturikarthik":7}},{"path":"docs/team/shawnpong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shawnpong"},"content":"this is my profile :D","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"shawnpong":1}},{"path":"src/main/java/seedu/lifetrack/LifeTrack.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package seedu.lifetrack;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"import seedu.lifetrack.calorielist.CalorieList;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"rexyyong"},"content":"import seedu.lifetrack.ui.Ui;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"public class LifeTrack {","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"owx0130"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":"     * Main entry-point for the java.lifetrack.LifeTrack application.","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"owx0130"},"content":"        CalorieList calorieList \u003d new CalorieList();","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"owx0130"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"paturikarthik"},"content":"        String logo \u003d \"LLLLL  IIIII FFFFF EEEEE  TTTTT RRRR   AAA  CCC  K  K\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"paturikarthik"},"content":"                \"L       I    F     E        T   R   R A   A C  C K K\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"paturikarthik"},"content":"                \"LLL     I    FFFF  EEEE     T   RRRR  AAAAA C    KK\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"paturikarthik"},"content":"                \"L       I    F     E        T   R  R A   A C  C K K\\n\" +","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"paturikarthik"},"content":"                \"LLLLL IIIII F     EEEEE    TTTT R   R A   A  CCC K  K\\n\";","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"What do you want to do today?\\n\");","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"owx0130"},"content":"        Ui.readUserInput(calorieList);","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"rexyyong"},"content":"        byeMessage();","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"rexyyong"},"content":"  ","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"rexyyong"},"content":"    public static void byeMessage() {","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"rexyyong"},"content":"        System.out.println(\"Bye! See you again soon ^^\");","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"rexyyong":6,"owx0130":4,"paturikarthik":21}},{"path":"src/main/java/seedu/lifetrack/activity/Activity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package seedu.lifetrack.activity;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"public class Activity {","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":"    private String date;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"    private String time;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"    private String description;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"    public Activity(String date, String time,String description){","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":"        this.time \u003d time;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"owx0130"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"owx0130"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"owx0130"},"content":"        return description;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"owx0130"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"owx0130":4,"paturikarthik":14}},{"path":"src/main/java/seedu/lifetrack/calorielist/CalorieList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package seedu.lifetrack.calorielist;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"shawnpong"},"content":"import seedu.lifetrack.activity.Activity;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"shawnpong"},"content":"import seedu.lifetrack.calories.Calorie;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"rexyyong"},"content":"import seedu.lifetrack.parser.Parser;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"rexyyong"},"content":"import seedu.lifetrack.exceptions.InvalidInputException;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"public class CalorieList {","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"owx0130"},"content":"    ","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"owx0130"},"content":"    private ArrayList\u003cEntry\u003e calorieArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"    public CalorieList() {","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"        calorieArrayList\u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"a-wild-chocolate"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"a-wild-chocolate"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"a-wild-chocolate"},"content":"     * Index should be in an integer from 1 to size of the list.","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"a-wild-chocolate"},"content":"     * @param index the index of calorie record user want to delete","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"a-wild-chocolate"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"owx0130"},"content":"    public void deleteEntry(int index) {","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"a-wild-chocolate"},"content":"        try {","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"rexyyong"},"content":"            if(index \u003e calorieArrayList.size()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"a-wild-chocolate"},"content":"                System.out.println(\"Sorry, this index is out of out of range. Please enter a valid index.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"a-wild-chocolate"},"content":"                return;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"a-wild-chocolate"},"content":"            }","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"rexyyong"},"content":"            calorieArrayList.remove((index-1));  // transfer to scope 0 to size-1","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"a-wild-chocolate"},"content":"            System.out.println(\"Successfully delete the calorie record.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"rexyyong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"a-wild-chocolate"},"content":"            System.out.println(\"Sorry, this index is invalid. Please enter a positive integer.\");","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"a-wild-chocolate"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"a-wild-chocolate"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"a-wild-chocolate"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"rexyyong"},"content":"     * Parses a string input representing calorie intake and adds it to the calorie list.","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"rexyyong"},"content":"     * This method takes a string input representing calorie intake information and","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"rexyyong"},"content":"     * attempts to parse it using the parseCaloriesIn method from the Parser class.","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"rexyyong"},"content":"     * If the input format is incorrect or contains missing components, it catches","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"rexyyong"},"content":"     * the InvalidInputException and prints an error message. Otherwise, it adds","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"rexyyong"},"content":"     * the parsed Entry object to the calorieArrayList.","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"rexyyong"},"content":"     * @param input the input string containing date, time, activity, and calorie count","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"owx0130"},"content":"    public void addEntry(String input) {","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"rexyyong"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"rexyyong"},"content":"            Entry newEntry \u003d Parser.parseCaloriesIn(input);","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"rexyyong"},"content":"            calorieArrayList.add(newEntry);","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"rexyyong"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"owx0130"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"shawnpong"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"shawnpong"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"shawnpong"},"content":"     * Prints the list of calorie entries along with its activity description.","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"shawnpong"},"content":"     * If the list is empty, it prints a message indicating that the list is empty.","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"shawnpong"},"content":"     * Otherwise, it prints each entry\u0027s activity description and calorie count.","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"shawnpong"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"owx0130"},"content":"    public void printCalorieList() {","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"shawnpong"},"content":"        if (calorieArrayList.isEmpty()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"shawnpong"},"content":"            System.out.println(\"Your caloric list is empty.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"shawnpong"},"content":"        } else {","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"shawnpong"},"content":"            System.out.println(\"Caloric List: \");","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"shawnpong"},"content":"            for (int i \u003d 0; i \u003c calorieArrayList.size(); i++) {","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"shawnpong"},"content":"                Entry entry \u003d calorieArrayList.get(i);","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"shawnpong"},"content":"                Activity activity \u003d entry.getActivity();","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"shawnpong"},"content":"                Calorie calorie \u003d entry.getCalorie();","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"shawnpong"},"content":"                System.out.println((i + 1) + \". Activity: \" + activity.getDescription()","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"shawnpong"},"content":"                        + \", Calories: \" + calorie.getCalories());","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"shawnpong"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"shawnpong"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"shawnpong"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"owx0130"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"owx0130"},"content":"    public int getSize() {","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"owx0130"},"content":"        return calorieArrayList.size();","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"owx0130"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"rexyyong":22,"a-wild-chocolate":14,"owx0130":10,"shawnpong":21,"paturikarthik":10}},{"path":"src/main/java/seedu/lifetrack/calorielist/Entry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package seedu.lifetrack.calorielist;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"import seedu.lifetrack.activity.Activity;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":"import seedu.lifetrack.calories.Calorie;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"public class Entry {","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"    private Activity activity;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"    private Calorie calorie;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":"    public Entry(Activity activity, Calorie calorie){","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":"        this.calorie \u003d calorie;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"        this.activity\u003d activity;","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"owx0130"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"owx0130"},"content":"    public Activity getActivity() {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"owx0130"},"content":"        return activity;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"owx0130"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"owx0130"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"owx0130"},"content":"    public Calorie getCalorie() {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"owx0130"},"content":"        return calorie;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"owx0130"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"owx0130":8,"paturikarthik":15}},{"path":"src/main/java/seedu/lifetrack/calories/Calorie.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package seedu.lifetrack.calories;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"public class Calorie {","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":"    private int calories;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"    private boolean isIntake;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"owx0130"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"    public Calorie (int calories, boolean isIntake){","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"        this.calories \u003d calories;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"        this.isIntake \u003d isIntake;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"owx0130"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"owx0130"},"content":"    public int getCalories() {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"owx0130"},"content":"        return calories;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"owx0130"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"owx0130":5,"paturikarthik":11}},{"path":"src/main/java/seedu/lifetrack/exceptions/InvalidInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rexyyong"},"content":"package seedu.lifetrack.exceptions;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"rexyyong"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"owx0130"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"rexyyong"},"content":"    public InvalidInputException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"owx0130"},"content":"        super(\"Please ensure that you have keyed in the correct format!\");","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"rexyyong"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"rexyyong":6,"owx0130":2}},{"path":"src/main/java/seedu/lifetrack/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rexyyong"},"content":"package seedu.lifetrack.parser;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"rexyyong"},"content":"import seedu.lifetrack.activity.Activity;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"rexyyong"},"content":"import seedu.lifetrack.calorielist.Entry;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"rexyyong"},"content":"import seedu.lifetrack.calories.Calorie;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"rexyyong"},"content":"import seedu.lifetrack.exceptions.InvalidInputException;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"rexyyong"},"content":"public class Parser {","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"rexyyong"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"rexyyong"},"content":"     * Parses a string input to create an Entry object representing calorie intake.","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"rexyyong"},"content":"     * This method expects the input string to follow a specific format, where the","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"rexyyong"},"content":"     * date, time, activity description, and calorie count are separated by the","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"rexyyong"},"content":"     * delimiters \u0027d/\u0027, \u0027t/\u0027, \u0027a/\u0027, and \u0027c/\u0027. The method extracts these components","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"rexyyong"},"content":"     * and creates an Entry object containing an Activity and a Calorie object.","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"rexyyong"},"content":"     * If any part of the input is missing or empty, an InvalidInputException is thrown.","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"rexyyong"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"rexyyong"},"content":"     * @param input the input string to be parsed, containing date, time, activity,","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"rexyyong"},"content":"     *              and calorie count information","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"rexyyong"},"content":"     * @return an Entry object representing calorie intake","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"rexyyong"},"content":"     * @throws InvalidInputException if the input string is missing components or","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"rexyyong"},"content":"     *                              contains empty fields","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"rexyyong"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"rexyyong"},"content":"    public static Entry parseCaloriesIn(String input) throws InvalidInputException {","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"rexyyong"},"content":"        //splits string according to d/ , t/ , a/ , c/ keyword","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"rexyyong"},"content":"        String[] parts \u003d input.split(\"d/|t/|a/|c/\");","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"rexyyong"},"content":"        //parts length less than 5 means that not all split keywords were keyed in","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"rexyyong"},"content":"        if (parts.length \u003c 5) {","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"rexyyong"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"owx0130"},"content":"        //extracts command, date, time, activity, calories_in portion from input","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"owx0130"},"content":"        String command \u003d parts[0].trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"rexyyong"},"content":"        String date \u003d parts[1].trim();","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"rexyyong"},"content":"        String time \u003d parts[2].trim();","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"paturikarthik"},"content":"        return getNewCalorieInEntry(parts, date, time, command);","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"paturikarthik"},"content":"    private static Entry getNewCalorieInEntry(String[] parts, String date, String time, String command)","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"paturikarthik"},"content":"            throws InvalidInputException {","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"rexyyong"},"content":"        String description \u003d parts[3].trim();","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"rexyyong"},"content":"        String strCalories \u003d parts[4].trim();","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"rexyyong"},"content":"        //ensures that all inputs are not empty","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"rexyyong"},"content":"        if (date.isEmpty() || time.isEmpty() || description.isEmpty() || strCalories.isEmpty()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"rexyyong"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"rexyyong"},"content":"        int calories \u003d Integer.parseInt(strCalories);","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"rexyyong"},"content":"        //create objects for Activity, Calorie","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"rexyyong"},"content":"        Activity activityToAdd \u003d new Activity(date, time, description);","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"paturikarthik"},"content":"        Calorie caloriesConsumed \u003d new Calorie(calories, Objects.equals(command, \"calories in\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"rexyyong"},"content":"        //create Object Entry to be returned","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"paturikarthik"},"content":"        return new Entry(activityToAdd, caloriesConsumed);","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"rexyyong"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"rexyyong":48,"owx0130":2,"paturikarthik":9}},{"path":"src/main/java/seedu/lifetrack/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rexyyong"},"content":"package seedu.lifetrack.ui;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"rexyyong"},"content":"import seedu.lifetrack.calorielist.CalorieList;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"rexyyong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"rexyyong"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"rexyyong"},"content":" * Reads user input from the console and processes it.","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"rexyyong"},"content":" * This method continuously reads input from the console until the user","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"rexyyong"},"content":" * inputs \"bye\". For each input line, it checks if it\u0027s empty and prompts","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"rexyyong"},"content":" * the user to enter a non-empty input if it is. If the input line starts","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"rexyyong"},"content":" * with \"calories in\", it attempts to parse the input as calorie intake","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"rexyyong"},"content":" * information using the calorieIn method from the CalorieList class.","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"rexyyong"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"rexyyong"},"content":"public class Ui {","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"rexyyong"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"owx0130"},"content":"    public static void readUserInput(CalorieList calorieList) {","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"rexyyong"},"content":"        String line;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"paturikarthik"},"content":"        do {","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"paturikarthik"},"content":"            line \u003d new Scanner(System.in).nextLine();","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"paturikarthik"},"content":"            handleUserInput(line, calorieList);","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"paturikarthik"},"content":"        } while (!line.equalsIgnoreCase(\"bye\"));","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"paturikarthik"},"content":"    public static void handleUserInput(String line, CalorieList calorieList) {","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"rexyyong"},"content":"        if (line.trim().isEmpty()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"rexyyong"},"content":"            System.out.println(\"Please enter a non empty Input!\");","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"owx0130"},"content":"        } else if (line.startsWith(\"calories in\") || line.startsWith(\"calories out\")) {","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"owx0130"},"content":"            calorieList.addEntry(line);","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"shawnpong"},"content":"        } else if (line.startsWith(\"list\")) {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"owx0130"},"content":"            calorieList.printCalorieList();","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"rexyyong"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"paturikarthik"},"content":"    public static void byeMessage() {","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"Bye! See you again soon ^^\");","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"paturikarthik"},"content":"    public static void printEmptyInputMessage() {","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"Please enter a non-empty input!\");","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"paturikarthik"},"content":"    public static void printLine() {","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"paturikarthik"},"content":"        System.out.println(\"\\t -------------------------------------------------------------\");","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"rexyyong"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"rexyyong"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"rexyyong":23,"owx0130":4,"shawnpong":1,"paturikarthik":19}},{"path":"src/test/java/seedu/lifetrack/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package seedu.lifetrack;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"a-wild-chocolate"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"a-wild-chocolate"},"content":"import seedu.lifetrack.calorielist.CalorieList;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"class DukeTest {","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"a-wild-chocolate"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"a-wild-chocolate"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"a-wild-chocolate"},"content":"    public void testDeleteCalorieValidIndex() {","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"a-wild-chocolate"},"content":"        CalorieList calorieList \u003d new CalorieList();","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"owx0130"},"content":"        calorieList.addEntry(\"calories out d/2024-03-14 t/12:00 a/Run c/200\");","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"owx0130"},"content":"        int initialSize \u003d calorieList.getSize();","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"owx0130"},"content":"        calorieList.deleteEntry(1);","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"owx0130"},"content":"        assertEquals(initialSize - 1, calorieList.getSize());","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"owx0130"},"content":"        calorieList.addEntry(\"calories out d/2024-03-14 t/12:00 a/Run c/200\");","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"owx0130"},"content":"        calorieList.addEntry(\"calories in d/2024-03-14 t/13:00 a/Eat c/200\");","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"owx0130"},"content":"        initialSize \u003d calorieList.getSize();","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"owx0130"},"content":"        calorieList.deleteEntry(2);","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"owx0130"},"content":"        assertEquals(initialSize - 1, calorieList.getSize());","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"a-wild-chocolate"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"a-wild-chocolate"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"a-wild-chocolate"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"a-wild-chocolate"},"content":"    public void testDeleteCalorieInvalidIndex() {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"a-wild-chocolate"},"content":"        CalorieList calorieList \u003d new CalorieList();","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"owx0130"},"content":"        calorieList.addEntry(\"calories out d/2024-03-14 t/12:00 a/Run c/200\");","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"owx0130"},"content":"        int initialSize \u003d calorieList.getSize();","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"owx0130"},"content":"        calorieList.deleteEntry(2); // Index out of bounds","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"owx0130"},"content":"        calorieList.deleteEntry(-1);","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"owx0130"},"content":"        assertEquals(initialSize, calorieList.getSize());","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"a-wild-chocolate"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"a-wild-chocolate":12,"owx0130":14,"-":10,"paturikarthik":4}},{"path":"src/test/java/seedu/lifetrack/InputTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"paturikarthik"},"content":"package seedu.lifetrack;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"paturikarthik"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"paturikarthik"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"paturikarthik"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"paturikarthik"},"content":"import seedu.lifetrack.calorielist.CalorieList;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"paturikarthik"},"content":"import seedu.lifetrack.ui.Ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"paturikarthik"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"paturikarthik"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"paturikarthik"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"paturikarthik"},"content":"public class InputTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"paturikarthik"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"paturikarthik"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"paturikarthik"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"paturikarthik"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"paturikarthik"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"paturikarthik"},"content":"    @AfterEach","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"paturikarthik"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"paturikarthik"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"paturikarthik"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"paturikarthik"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"paturikarthik"},"content":"    // Expect Empty String as function is exited","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"paturikarthik"},"content":"    public void handleInputBye_printByeMessage() {","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"paturikarthik"},"content":"        CalorieList calorieList \u003d new CalorieList();","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"paturikarthik"},"content":"        String input \u003d \"bye\";","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"paturikarthik"},"content":"        Ui.handleUserInput(input, calorieList);","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"paturikarthik"},"content":"        assertEquals(\"\", outContent.toString());","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"paturikarthik"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"paturikarthik"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"paturikarthik":36}}]
