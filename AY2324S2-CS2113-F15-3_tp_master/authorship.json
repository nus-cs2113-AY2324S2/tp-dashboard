[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName.set(\"duke\")","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"runxinghuan"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"runxinghuan":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |     Name     | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"runxinghuan"},"content":"--------|:------------:|:--------------:|:---------:","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"runxinghuan"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Run Xinghuan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"HenryGan138"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Henry Gan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"ymirmeddeb"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ymir Meddeb | [ymirmeddeb](https://github.com/ymirmeddeb) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"IncyBot"},"content":"![](https://incybot.github.io/images/avatars/avatar-1.png) | Sparsh | [Github](https://github.com/IncyBot) | [Portfolio](https://incybot.github.io/)","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"IncyBot":1,"runxinghuan":2,"HenryGan138":1,"ymirmeddeb":2,"-":3}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"runxinghuan"},"content":"# NUSFC 24","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"{Give product intro here}","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"runxinghuan":1,"-":7}},{"path":"src/main/java/seedu/duke/CommandList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hwc0419"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.ai.Ai;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"hwc0419"},"content":"public enum CommandList {","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"IncyBot"},"content":"    BYE, SHOOT, PENALTY","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"hwc0419"},"content":"//    LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"hwc0419"},"content":"    //insert new user command name here","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"hwc0419"},"content":"    ;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"hwc0419"},"content":"     * Exits the program","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"hwc0419"},"content":"    public static void executeBye() {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"hwc0419"},"content":"        Formatter.printGoodbyeMsg();","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"hwc0419"},"content":"        Ui.setIsRunning(false);","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"hwc0419"},"content":"    public static boolean goalCheck(int userInput, int AiInput) {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"HenryGan138"},"content":"        assert userInput \u003e\u003d 0 \u0026\u0026 userInput \u003c\u003d 2 :","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"HenryGan138"},"content":"                \"Illegal userInput generated!\";","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"HenryGan138"},"content":"        assert AiInput \u003e\u003d 0 \u0026\u0026 AiInput \u003c\u003d 2 :","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"HenryGan138"},"content":"                \"Illegal AiInput generated!\";","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"hwc0419"},"content":"        return userInput !\u003d AiInput;","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"hwc0419"},"content":"    public static void executeShoot(Parser userCommandReader) {","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"hwc0419"},"content":"        String selectedDirection \u003d userCommandReader.getArgumentTokens()[0];","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"hwc0419"},"content":"        int selectedDirectionIndex \u003d Integer.parseInt(selectedDirection);","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"hwc0419"},"content":"        boolean isScoreGoal \u003d goalCheck(Ai.getAiDirection(), selectedDirectionIndex);","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"hwc0419"},"content":"        Formatter.printGoalAfterShot(isScoreGoal);","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"IncyBot"},"content":"    public static void executePenalty() {","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"IncyBot"},"content":"        Penalty.executePenalty();","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"IncyBot"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"IncyBot"},"content":"    ","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"hwc0419"},"content":"    //insert new command here","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"hwc0419"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"hwc0419":33,"IncyBot":5,"HenryGan138":4}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.exception.ProcessInputException;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"runxinghuan"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"HenryGan138"},"content":"    public Duke() {","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"hwc0419"},"content":"        Formatter.printWelcomeMsg();","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"hwc0419"},"content":"        while (Ui.getIsRunning()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"hwc0419"},"content":"            Formatter.printGoalBeforeShot(Ui.roundCount);","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"hwc0419"},"content":"            try {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"hwc0419"},"content":"                Ui.beginListening();","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"hwc0419"},"content":"                Ui.processInput();","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"hwc0419"},"content":"                Ui.executeCommand();","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"hwc0419"},"content":"            } catch (ProcessInputException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"hwc0419"},"content":"                Formatter.printErrorExecutionFail();","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"HenryGan138"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"hwc0419":11,"runxinghuan":1,"HenryGan138":5,"-":12}},{"path":"src/main/java/seedu/duke/Formatter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hwc0419"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"ymirmeddeb"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"hwc0419"},"content":"public class Formatter {","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"ymirmeddeb"},"content":"    private static final Logger logger \u003d Logger.getLogger(Formatter.class.getName());","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"HenryGan138"},"content":"    public static final String emojiSad \u003d \"☹\";","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"hwc0419"},"content":"     * Method to check if the shot resulted in a goal","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"hwc0419"},"content":"     * If shoot direction matches save direction, it\u0027s not a goal and the returned value is false.","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"hwc0419"},"content":"     * Appends a newline to a given string and returns the resulting string","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"hwc0419"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"hwc0419"},"content":"     * @param str the given string","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"hwc0419"},"content":"     * @return A new string with a newline character appended to it","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"hwc0419"},"content":"    public static String appendNewLine(String str) {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"hwc0419"},"content":"        return String.format(\"%s\\n\", str);","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"hwc0419"},"content":"    public static void printWrapper(String wrapWith) {","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"hwc0419"},"content":"        System.out.print(\"\\t\");","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"hwc0419"},"content":"        for (int i \u003d 0; i \u003c 60; i++) {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"hwc0419"},"content":"            System.out.print(wrapWith);","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"hwc0419"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"hwc0419"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"hwc0419"},"content":"     * Prints welcome message at start of program","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"hwc0419"},"content":"    public static void printWelcomeMsg() {","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"HenryGan138"},"content":"        printWrapper(\"-\");","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"\\t Welcome to NUSFC 24 \");","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"hwc0419"},"content":"//        System.out.println(\"\\t What can I do for you?\");","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"HenryGan138"},"content":"        printWrapper(\"-\");","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"hwc0419"},"content":"     * Prints goodbye message when program terminates","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"hwc0419"},"content":"    public static void printGoodbyeMsg() {","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"HenryGan138"},"content":"        printWrapper(\"-\");","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"\\t See you next time on court!\");","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"HenryGan138"},"content":"        printWrapper(\"-\");","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"hwc0419"},"content":"     * Method to check if the shot resulted in a goal","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"hwc0419"},"content":"     * If shoot direction matches save direction, it\u0027s not a goal and the returned value is false.","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"hwc0419"},"content":"    public static void printGoalBeforeShot(int roundCount) {","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"ymirmeddeb"},"content":"        assert roundCount \u003e 0 : \"Round count should be greater than zero.\";","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"ymirmeddeb"},"content":"        logger.info(\"Round \" + roundCount);","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"Round \" + roundCount);","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"_______________________________\");","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"|         |         |         |\");","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"|    0    |    1    |    2    |\");","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"|         |         |         |\");","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"|         |         |         |\");","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"\\nSelect direction to shoot : [0-2]\");","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"hwc0419"},"content":"    public static void printGoalAfterShot(boolean goalScored) {","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"hwc0419"},"content":"        if (goalScored) {","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"ymirmeddeb"},"content":"            logger.info(\"GOAL!!!!\");","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"_______________________________\");","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"| *    *  |  *  *   | *      *|\");","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"|    *    |       * |     *   |\");","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"|*   *    | *   *   |  *   *  |\");","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"|      *  |    *    |*      * |\");","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"GOAL!!!!\");","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"hwc0419"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"hwc0419"},"content":"        else {","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"ymirmeddeb"},"content":"            logger.info(\"No goal :((((\");","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"_______________________________\");","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"\\\\         \\\\         \\\\         \\\\\");","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\" \\\\         \\\\         \\\\         \\\\\");","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"  \\\\         \\\\         \\\\         \\\\\");","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"   \\\\         \\\\         \\\\         \\\\\");","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"no goal :((((\");","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"hwc0419"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"hwc0419"},"content":"     * Prints \"list is empty\" if tasks list is empty","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"hwc0419"},"content":"    public static void printListEmpty() {","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"\\t List is empty. Add tasks using commands \\\"todo\\\", \\\"deadline\\\", \\\"event\\\".\");","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"hwc0419"},"content":"//    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"hwc0419"},"content":"//     * Prints a notification indicating task is marked given the index of a task","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"hwc0419"},"content":"//     *","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"hwc0419"},"content":"//     * @param index the index of a given task","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"hwc0419"},"content":"//     */","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"hwc0419"},"content":"//    public static void printMarkDoneNotif(int index) {","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"hwc0419"},"content":"//        System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"hwc0419"},"content":"//        System.out.printf(\"\\t %s.\\n\", Ui.tasks.get(index));","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"hwc0419"},"content":"//    }","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"hwc0419"},"content":"//    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"hwc0419"},"content":"//     * Prints a notification indicating task is unmarked given the index of a task","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"hwc0419"},"content":"//     *","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"hwc0419"},"content":"//     * @param index the index of a given task","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"hwc0419"},"content":"//     */","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"hwc0419"},"content":"//    public static void printMarkUndoneNotif(int index) {","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"hwc0419"},"content":"//        System.out.println(\"\\t OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"hwc0419"},"content":"//        System.out.printf(\"\\t %s.\\n\", Ui.tasks.get(index));","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"hwc0419"},"content":"//    }","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"hwc0419"},"content":"//    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"hwc0419"},"content":"//     * Prints a notification indicating task is added given a task","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"hwc0419"},"content":"//     *","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"hwc0419"},"content":"//     * @param newTask the task being added","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"hwc0419"},"content":"//     */","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"hwc0419"},"content":"//    public static void printTaskNotif(Task newTask) {","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"hwc0419"},"content":"//        printWrapper(\"_\");","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"hwc0419"},"content":"//        System.out.println(\"\\t Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"hwc0419"},"content":"//        System.out.printf(\"\\t\\t%s\\n\", newTask);","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"hwc0419"},"content":"//        System.out.printf(\"\\t Now you have %d tasks in the list.\\n\", Ui.tasks.size());","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"hwc0419"},"content":"//        printWrapper(\"_\");","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"hwc0419"},"content":"//    }","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"hwc0419"},"content":"//","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"hwc0419"},"content":"//    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"hwc0419"},"content":"//     * Prints a notification indicating task is removed given the index of a task","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"hwc0419"},"content":"//     *","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"hwc0419"},"content":"//     * @param removedTask the task being removed","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"hwc0419"},"content":"//     */","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"hwc0419"},"content":"//    public static void printDeleteNotif(Task removedTask) {","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"hwc0419"},"content":"//        printWrapper(\"_\");","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"hwc0419"},"content":"//        System.out.println(\"\\t Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"hwc0419"},"content":"//        System.out.printf(\"\\t\\t%s\\n\", removedTask);","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"hwc0419"},"content":"//        System.out.printf(\"\\t Now you have %d tasks in the list.\\n\", Ui.tasks.size());","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"hwc0419"},"content":"//        printWrapper(\"_\");","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"hwc0419"},"content":"//    }","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"hwc0419"},"content":"     * Prints an error message indicating wrong command is entered","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"hwc0419"},"content":"    public static void printErrorWrongCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"\\t CommandParser: Command not found \" + emojiSad);","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"hwc0419"},"content":"     * Prints a error message indicating command failed to execute","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"hwc0419"},"content":"    public static void printErrorExecutionFail() {","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"\\t Ui: Command could not be executed \");","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"\\t Try again\");","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"hwc0419"},"content":"     * Prints an error message indicating an unknown error has occured","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"hwc0419"},"content":"    public static void printErrorUnknown() {","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"\\t Ui: Unexpected error \");","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"hwc0419"},"content":"     * Prints an error message indicating there is at least one bad argument provided","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"hwc0419"},"content":"    public static void printErrorBadTokens() {","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"\\t Ui: Bad Token Error, please check your arguments\" + emojiSad);","lastModifiedDate":"2024-03-21"},{"lineNumber":168,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"hwc0419"},"content":"     * Prints an error message stating the number of arguments given versus the number of arguments expected for given command","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"hwc0419"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"hwc0419"},"content":"     * @param correctArgumentCount the expected number of arguments for given command","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"hwc0419"},"content":"     * @param userArgumentCount    the given number of arguments read from user input","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"hwc0419"},"content":"     * @param userCommandName      the command name read from user input","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"hwc0419"},"content":"    public static void printErrorArgumentsMismatch(String userCommandName, int userArgumentCount, int correctArgumentCount) {","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"hwc0419"},"content":"        System.out.printf(\"\\t SyntaxAnalyser: Command %s contains too %s arguments. Given: %d - Expected: %d\\n\",","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"hwc0419"},"content":"                userCommandName,","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"hwc0419"},"content":"                userArgumentCount \u003c correctArgumentCount ? \"few\" : \"many\",","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"hwc0419"},"content":"                userArgumentCount, correctArgumentCount);","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"hwc0419"},"content":"     * Prints an error message indicating that the regex pattern failed to match at a given argument position for a given command name","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"hwc0419"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"hwc0419"},"content":"     * @param argumentPosition the index position of the argument which failed to match the correct type","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"hwc0419"},"content":"     * @param regex            the correct type for the argument","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"hwc0419"},"content":"     * @param COMMAND_NAME     the name of the given command","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"hwc0419"},"content":"    public static void printErrorWrongArgumentType(String COMMAND_NAME, String regex, int argumentPosition) {","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"hwc0419"},"content":"        int userRanking \u003d argumentPosition + 1;","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"hwc0419"},"content":"        String rankingSuffix;","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"hwc0419"},"content":"        switch (userRanking) {","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"hwc0419"},"content":"        case 1:","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"hwc0419"},"content":"            rankingSuffix \u003d \"st\";","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"hwc0419"},"content":"            break;","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"hwc0419"},"content":"        case 2:","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"hwc0419"},"content":"            rankingSuffix \u003d \"nd\";","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"hwc0419"},"content":"            break;","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"hwc0419"},"content":"        case 3:","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"hwc0419"},"content":"            rankingSuffix \u003d \"rd\";","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"hwc0419"},"content":"            break;","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"hwc0419"},"content":"        default:","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"hwc0419"},"content":"            rankingSuffix \u003d \"th\";","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"hwc0419"},"content":"            break;","lastModifiedDate":"2024-03-20"},{"lineNumber":207,"author":{"gitId":"hwc0419"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":208,"author":{"gitId":"hwc0419"},"content":"        System.out.printf(\"\\t SyntaxAnalyser: %s expects the %d%s argument to be %s\\n\",","lastModifiedDate":"2024-03-20"},{"lineNumber":209,"author":{"gitId":"hwc0419"},"content":"                COMMAND_NAME, userRanking, rankingSuffix, regex);","lastModifiedDate":"2024-03-20"},{"lineNumber":210,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":211,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":212,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":213,"author":{"gitId":"hwc0419"},"content":"     * Prints an error message indicating the selected index is not in range","lastModifiedDate":"2024-03-20"},{"lineNumber":214,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":215,"author":{"gitId":"hwc0419"},"content":"    public static void printErrorIndexOutOfRange() {","lastModifiedDate":"2024-03-20"},{"lineNumber":216,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"\\t List: Selected index not in range. Try again.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":217,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":218,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":219,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":220,"author":{"gitId":"hwc0419"},"content":"     * Prints an error message indicating the cache file is corrupted at a given line","lastModifiedDate":"2024-03-20"},{"lineNumber":221,"author":{"gitId":"hwc0419"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":222,"author":{"gitId":"hwc0419"},"content":"     * @param lineNum the line number which does not follow the file format of cache file","lastModifiedDate":"2024-03-20"},{"lineNumber":223,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":224,"author":{"gitId":"hwc0419"},"content":"    public static void printFileCorruptionError(int lineNum) {","lastModifiedDate":"2024-03-20"},{"lineNumber":225,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"Cache file is corrupted at line \" + lineNum);","lastModifiedDate":"2024-03-20"},{"lineNumber":226,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"Failed to load cache\");","lastModifiedDate":"2024-03-20"},{"lineNumber":227,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"Program will start with empty list\");","lastModifiedDate":"2024-03-20"},{"lineNumber":228,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":229,"author":{"gitId":"hwc0419"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":230,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"hwc0419":215,"HenryGan138":9,"ymirmeddeb":6}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hwc0419"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.exception.ArgumentMismatchException;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.exception.BadTokenException;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.exception.IllegalCommandException;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"hwc0419"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"hwc0419"},"content":"public class Parser {","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"hwc0419"},"content":"    private static final Logger logger \u003d Logger.getLogger(Parser.class.getName());","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"hwc0419"},"content":"    private String COMMAND_NAME;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"hwc0419"},"content":"    private String[] argumentTokens \u003d {};","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"hwc0419"},"content":"    public Parser(String userInput) throws IllegalCommandException, ArgumentMismatchException, BadTokenException {","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"hwc0419"},"content":"        //default case: User enters a valid command, the command expects no arguments","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"hwc0419"},"content":"        //NAME_ARGSTR_PAIR is either size 1 or 2","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"hwc0419"},"content":"        final String[] NAME_ARGSTR_PAIR \u003d parseIntoNameAndArgumentString(userInput);","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"hwc0419"},"content":"        assert NAME_ARGSTR_PAIR.length \u003d\u003d 1 || NAME_ARGSTR_PAIR.length \u003d\u003d 2;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"hwc0419"},"content":"        logger.info(\"Parsed command \" + NAME_ARGSTR_PAIR[0] +","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"hwc0419"},"content":"                (NAME_ARGSTR_PAIR.length \u003d\u003d 1 ? \" with no arguments\": \" with at least one argument\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"hwc0419"},"content":"        final String USER_COMMAND_NAME \u003d getUserCommandName(NAME_ARGSTR_PAIR);","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"hwc0419"},"content":"        COMMAND_NAME \u003d USER_COMMAND_NAME.toUpperCase();","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"hwc0419"},"content":"        final String USER_ARGUMENT_STRING;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"hwc0419"},"content":"        if (!SyntaxAnalyser.validateUserCommandName(USER_COMMAND_NAME)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"hwc0419"},"content":"            COMMAND_NAME \u003d \"NOT_A_COMMAND\";","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"hwc0419"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"hwc0419"},"content":"        } else if (hasArgumentString(NAME_ARGSTR_PAIR)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"hwc0419"},"content":"            USER_ARGUMENT_STRING \u003d getUserArgumentString(NAME_ARGSTR_PAIR);","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"hwc0419"},"content":"            final String ARG_SEPARATOR \u003d \" /\";","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"hwc0419"},"content":"            argumentTokens \u003d parseIntoTokens(USER_ARGUMENT_STRING, ARG_SEPARATOR);","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"hwc0419"},"content":"            if (!isCorrectUserArgumentCount()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"hwc0419"},"content":"                throw new ArgumentMismatchException(COMMAND_NAME, argumentTokens.length);","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"hwc0419"},"content":"            } else if (!SyntaxAnalyser.validateTokens(COMMAND_NAME, argumentTokens)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"hwc0419"},"content":"                throw new BadTokenException();","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"hwc0419"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"hwc0419"},"content":"        } else if (!isCorrectUserArgumentCount()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"hwc0419"},"content":"            throw new ArgumentMismatchException(COMMAND_NAME, argumentTokens.length);","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"hwc0419"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"hwc0419"},"content":"    private static String getUserArgumentString(String[] NAME_ARGSTR_PAIR) {","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"hwc0419"},"content":"        return NAME_ARGSTR_PAIR[1];","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"hwc0419"},"content":"    private static String getUserCommandName(String[] NAME_ARGSTR_PAIR) {","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"hwc0419"},"content":"        return NAME_ARGSTR_PAIR[0];","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"hwc0419"},"content":"    private String[] parseIntoTokens(final String USER_ARGUMENT_STRING, final String separator) {","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"hwc0419"},"content":"        final int EXPECTED_ARGUMENT_COUNT \u003d SyntaxAnalyser.getArgumentCount(COMMAND_NAME);","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"hwc0419"},"content":"        return USER_ARGUMENT_STRING.split(separator, EXPECTED_ARGUMENT_COUNT);","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"hwc0419"},"content":"    private boolean isCorrectUserArgumentCount() {","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"hwc0419"},"content":"        int userArgumentCount \u003d argumentTokens.length;","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"hwc0419"},"content":"        int correctArgumentCount \u003d SyntaxAnalyser.getArgumentCount(COMMAND_NAME);","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"hwc0419"},"content":"        return correctArgumentCount \u003d\u003d userArgumentCount;","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"hwc0419"},"content":"    private static boolean hasArgumentString(String[] NAME_ARGSTR_PAIR) {","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"hwc0419"},"content":"        return NAME_ARGSTR_PAIR.length \u003d\u003d 2;","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"hwc0419"},"content":"    public static String[] parseIntoNameAndArgumentString(String userInput) {","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"hwc0419"},"content":"        final String NAME_ARGSTR_SEPARATOR \u003d \" \";","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"hwc0419"},"content":"        return userInput.split(NAME_ARGSTR_SEPARATOR, 2);","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"hwc0419"},"content":"    public String getCommandName() {","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"hwc0419"},"content":"        return COMMAND_NAME;","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"hwc0419"},"content":"    public String[] getArgumentTokens() {","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"hwc0419"},"content":"        return argumentTokens;","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"hwc0419"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"hwc0419":79}},{"path":"src/main/java/seedu/duke/Penalty.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncyBot"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"IncyBot"},"content":"import seedu.duke.ai.Ai;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"IncyBot"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"IncyBot"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"IncyBot"},"content":" * Handles the penalty command for the game.","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"IncyBot"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"IncyBot"},"content":"public class Penalty {","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"IncyBot"},"content":"    private static final String PENALTY_PROMPT \u003d \"Enter the direction to shoot the penalty (0, 1, or 2): \";","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"IncyBot"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"IncyBot"},"content":"     * Executes the penalty command.","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"IncyBot"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"IncyBot"},"content":"    public static void executePenalty() {","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"IncyBot"},"content":"        int userDirection \u003d getUserPenaltyDirection();","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"IncyBot"},"content":"        int aiDirection \u003d Ai.getAiDirection();","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"IncyBot"},"content":"        boolean isGoal \u003d CommandList.goalCheck(userDirection, aiDirection);","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"IncyBot"},"content":"        Formatter.printGoalAfterShot(isGoal);","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"IncyBot"},"content":"        Ui.roundCount++;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"IncyBot"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"IncyBot"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"IncyBot"},"content":"     * Prompts the user to enter the penalty direction and returns the corresponding integer value.","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"IncyBot"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"IncyBot"},"content":"     * @return The user\u0027s penalty direction as an integer (0, 1, or 2).","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"IncyBot"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"IncyBot"},"content":"    private static int getUserPenaltyDirection() {","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"IncyBot"},"content":"        int userDirection;","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"IncyBot"},"content":"        do {","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"IncyBot"},"content":"            System.out.print(PENALTY_PROMPT);","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"IncyBot"},"content":"            String directionString \u003d Ui.IN.nextLine().trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"IncyBot"},"content":"            userDirection \u003d ShootDirectionConverter.convertToShootDirection(directionString);","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"IncyBot"},"content":"            if (userDirection \u003d\u003d -1) {","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"IncyBot"},"content":"                System.out.println(\"Invalid direction! Please enter 0, 1, or 2.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"IncyBot"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"IncyBot"},"content":"        } while (userDirection \u003d\u003d -1);","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"IncyBot"},"content":"        return userDirection;","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"IncyBot"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"IncyBot"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"IncyBot":41}},{"path":"src/main/java/seedu/duke/ShootDirectionConverter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncyBot"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"IncyBot"},"content":"import seedu.duke.ai.Ai;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"IncyBot"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"IncyBot"},"content":" * Converts a given direction string to an integer representing the shoot direction.","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"IncyBot"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"IncyBot"},"content":"public class ShootDirectionConverter {","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"IncyBot"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"IncyBot"},"content":"     * Returns the direction to shoot the football based on the given string input.","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"IncyBot"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"IncyBot"},"content":"     * @param direction The direction string, should be \"0\", \"1\", or \"2\".","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"IncyBot"},"content":"     * @return The corresponding integer direction (0, 1, or 2) if the input is valid, -1 otherwise.","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"IncyBot"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"IncyBot"},"content":"    public static int convertToShootDirection(String direction) {","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"IncyBot"},"content":"        int directionIndex;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"IncyBot"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"IncyBot"},"content":"            directionIndex \u003d Integer.parseInt(direction);","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"IncyBot"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"IncyBot"},"content":"            return -1; // Invalid input","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"IncyBot"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"IncyBot"},"content":"        if (directionIndex \u003e\u003d Ai.getMinDirection() \u0026\u0026 directionIndex \u003c\u003d Ai.getMaxDirection()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"IncyBot"},"content":"            return directionIndex;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"IncyBot"},"content":"        } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"IncyBot"},"content":"            return -1; // Invalid direction","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"IncyBot"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"IncyBot"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"IncyBot"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"IncyBot":29}},{"path":"src/main/java/seedu/duke/SyntaxAnalyser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hwc0419"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"hwc0419"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"hwc0419"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"hwc0419"},"content":"public class SyntaxAnalyser {","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"hwc0419"},"content":"    //check if argument token is an integer ranging from 0 to 2","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"hwc0419"},"content":"    private static final String VALID_INDEX_REGEX \u003d \"^[0-2]$\";","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"hwc0419"},"content":"    //check if argument token is any keyboard character","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"hwc0419"},"content":"    private static final String UNRESTRICTED_CHAR_LENGTH_REGEX \u003d \".+\";","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"hwc0419"},"content":"    private static final String[][] lutRegexSeq \u003d {","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"hwc0419"},"content":"            {},","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"hwc0419"},"content":"            {VALID_INDEX_REGEX},","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"hwc0419"},"content":"//            {},","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"hwc0419"},"content":"//            {VALID_INDEX_REGEX},","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"hwc0419"},"content":"//            {VALID_INDEX_REGEX},","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"hwc0419"},"content":"//            {UNRESTRICTED_CHAR_LENGTH_REGEX},","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"hwc0419"},"content":"//            {UNRESTRICTED_CHAR_LENGTH_REGEX, UNRESTRICTED_CHAR_LENGTH_REGEX},","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"hwc0419"},"content":"//            {UNRESTRICTED_CHAR_LENGTH_REGEX, UNRESTRICTED_CHAR_LENGTH_REGEX, UNRESTRICTED_CHAR_LENGTH_REGEX},","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"hwc0419"},"content":"//            {VALID_INDEX_REGEX},","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"hwc0419"},"content":"//            {UNRESTRICTED_CHAR_LENGTH_REGEX},","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"hwc0419"},"content":"            //insert new command syntax here","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"hwc0419"},"content":"    };","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"hwc0419"},"content":"     * Returns the argument count for a given command","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"hwc0419"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"hwc0419"},"content":"     * @param COMMAND_NAME the command name of given command","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"hwc0419"},"content":"     * @return The number of arguments for the command","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"hwc0419"},"content":"    public static int getArgumentCount(String COMMAND_NAME) {","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"hwc0419"},"content":"        return getRegexSeq(COMMAND_NAME).length;","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"hwc0419"},"content":"     * Returns the list of regex expressions for a given command","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"hwc0419"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"hwc0419"},"content":"     * @param COMMAND_NAME the command name of given command","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"hwc0419"},"content":"     * @return An array of regex strings used to match each parameter of a given input","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"hwc0419"},"content":"    public static String[] getRegexSeq(String COMMAND_NAME) {","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"hwc0419"},"content":"        return lutRegexSeq[CommandList.valueOf(COMMAND_NAME).ordinal()];","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"hwc0419"},"content":"     * Returns true if the user entered command is valid, false otherwise","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"hwc0419"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"hwc0419"},"content":"     * @param USER_COMMAND_NAME the command name of user entered command","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"hwc0419"},"content":"     * @return True if user enters valid command","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"hwc0419"},"content":"    public static boolean validateUserCommandName(String USER_COMMAND_NAME) {","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"hwc0419"},"content":"        for (CommandList c : CommandList.values()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"hwc0419"},"content":"            if (c.name().toLowerCase().equals(USER_COMMAND_NAME)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"hwc0419"},"content":"                return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"hwc0419"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"hwc0419"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"hwc0419"},"content":"        return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"hwc0419"},"content":"     * Returns true if argument type of all arguments are correct, false otherwise","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"hwc0419"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"hwc0419"},"content":"     * @param COMMAND_NAME   the command name of given command","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"hwc0419"},"content":"     * @param argumentTokens the list of arguments parsed from user input","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"hwc0419"},"content":"     * @return True if all argument types are correct","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"hwc0419"},"content":"    public static boolean validateTokens(String COMMAND_NAME, String[] argumentTokens) {","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"hwc0419"},"content":"        String[] cmdNameRegexSeq \u003d getRegexSeq(COMMAND_NAME);","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"hwc0419"},"content":"        for (int i \u003d 0; i \u003c getArgumentCount(COMMAND_NAME); i++) {","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"hwc0419"},"content":"            Pattern pattern \u003d Pattern.compile(cmdNameRegexSeq[i]);","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"hwc0419"},"content":"            Matcher matcher \u003d pattern.matcher(argumentTokens[i]);","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"hwc0419"},"content":"            if (!matcher.find()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"hwc0419"},"content":"                Formatter.printErrorWrongArgumentType(COMMAND_NAME, cmdNameRegexSeq[i], i);","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"hwc0419"},"content":"                return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"hwc0419"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"hwc0419"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"hwc0419"},"content":"        return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"hwc0419"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"hwc0419":79}},{"path":"src/main/java/seedu/duke/ai/Ai.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HenryGan138"},"content":"package seedu.duke.ai;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"runxinghuan"},"content":"import java.util.Random;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"runxinghuan"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"runxinghuan"},"content":" * Ai of the game.","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"runxinghuan"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"runxinghuan"},"content":"public class Ai {","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"runxinghuan"},"content":"    private static int minDirection \u003d 0;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"runxinghuan"},"content":"    private static int maxDirection \u003d 2;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"runxinghuan"},"content":"    public Ai() {","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"runxinghuan"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"runxinghuan"},"content":"     * Returns a random number representing the direction chosen by the AI.","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"runxinghuan"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"hwc0419"},"content":"    public static int getAiDirection() {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"runxinghuan"},"content":"        Random rand \u003d new Random();","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"runxinghuan"},"content":"        int direction \u003d rand.nextInt(3);","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"runxinghuan"},"content":"        assert direction \u003e\u003d Ai.getMinDirection() \u0026\u0026 direction \u003c\u003d Ai.getMaxDirection() :","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"runxinghuan"},"content":"                \"Illegal AI direction generated!\";","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"runxinghuan"},"content":"        return direction;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"runxinghuan"},"content":"    public static int getMinDirection() {","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"runxinghuan"},"content":"        return minDirection;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"runxinghuan"},"content":"    public static int getMaxDirection() {","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"runxinghuan"},"content":"        return maxDirection;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"runxinghuan"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"hwc0419":1,"runxinghuan":31,"HenryGan138":1}},{"path":"src/main/java/seedu/duke/exception/ArgumentMismatchException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hwc0419"},"content":"package seedu.duke.exception;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"hwc0419"},"content":"public class ArgumentMismatchException extends Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"hwc0419"},"content":"    public String userCommandName;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"hwc0419"},"content":"    public int userArgumentCount;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"hwc0419"},"content":"    public ArgumentMismatchException(String userCommandName, int userArgumentCount) {","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"hwc0419"},"content":"        this.userCommandName \u003d userCommandName;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"hwc0419"},"content":"        this.userArgumentCount \u003d userArgumentCount;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"hwc0419"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"hwc0419":11}},{"path":"src/main/java/seedu/duke/exception/BadTokenException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hwc0419"},"content":"package seedu.duke.exception;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"hwc0419"},"content":"public class BadTokenException extends Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"hwc0419"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"hwc0419":5}},{"path":"src/main/java/seedu/duke/exception/IllegalCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hwc0419"},"content":"package seedu.duke.exception;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"hwc0419"},"content":"public class IllegalCommandException extends Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"hwc0419"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"hwc0419":4}},{"path":"src/main/java/seedu/duke/exception/ProcessInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hwc0419"},"content":"package seedu.duke.exception;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"hwc0419"},"content":"public class ProcessInputException extends Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"hwc0419"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"hwc0419":4}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"runxinghuan"},"content":"package seedu.duke.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.CommandList;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.Formatter;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.Parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.SyntaxAnalyser;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.exception.ProcessInputException;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.exception.ArgumentMismatchException;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.exception.BadTokenException;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.exception.IllegalCommandException;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"HenryGan138"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"HenryGan138"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"HenryGan138"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"HenryGan138"},"content":"public class Ui {","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"HenryGan138"},"content":"    private static final Scanner IN \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"hwc0419"},"content":"    private static boolean isRunning \u003d true;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"hwc0419"},"content":"    private static String userInput;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"hwc0419"},"content":"    private static Parser userCommandReader;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"hwc0419"},"content":"    public static int roundCount \u003d 0;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"HenryGan138"},"content":"    private static final Logger logger \u003d Logger.getLogger(\"Foo\");","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"hwc0419"},"content":"     * Reads user input and stores it","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"hwc0419"},"content":"    public static void beginListening() {","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"HenryGan138"},"content":"        logger.log(Level.INFO, \"going to start processing user input\");","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"hwc0419"},"content":"        userInput \u003d IN.nextLine();","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"hwc0419"},"content":"     * Parses read input into its parameters","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"hwc0419"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"hwc0419"},"content":"     * @throws ProcessInputException If command read from input is invalid","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"hwc0419"},"content":"    public static void processInput() throws ProcessInputException {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"hwc0419"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"hwc0419"},"content":"            userCommandReader \u003d new Parser(userInput);","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"hwc0419"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"hwc0419"},"content":"            Formatter.printErrorWrongCommand();","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"HenryGan138"},"content":"            logger.log(Level.WARNING, \"wrong command error\");","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"hwc0419"},"content":"            throw new ProcessInputException();","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"hwc0419"},"content":"        } catch (ArgumentMismatchException e1) {","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"hwc0419"},"content":"            int userArgumentCount \u003d e1.userArgumentCount;","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"hwc0419"},"content":"            int correctArgumentCount \u003d SyntaxAnalyser.getArgumentCount(e1.userCommandName);","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"hwc0419"},"content":"            Formatter.printErrorArgumentsMismatch(e1.userCommandName, userArgumentCount, correctArgumentCount);","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"HenryGan138"},"content":"            logger.log(Level.WARNING, \"wrong user input format error\");","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"hwc0419"},"content":"            throw new ProcessInputException();","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"hwc0419"},"content":"        } catch (BadTokenException e2) {","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"hwc0419"},"content":"            Formatter.printErrorBadTokens();","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"hwc0419"},"content":"            throw new ProcessInputException();","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"hwc0419"},"content":"     * Runs command based on parsed input","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"hwc0419"},"content":"    public static void executeCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"hwc0419"},"content":"        CommandList selectedCommand \u003d CommandList.valueOf(userCommandReader.getCommandName());","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"HenryGan138"},"content":"    ","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"hwc0419"},"content":"        switch (selectedCommand) {","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"hwc0419"},"content":"        case BYE:","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"hwc0419"},"content":"            CommandList.executeBye();","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"hwc0419"},"content":"            break;","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"hwc0419"},"content":"        case SHOOT:","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"hwc0419"},"content":"            CommandList.executeShoot(userCommandReader);","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"hwc0419"},"content":"            roundCount++;","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"hwc0419"},"content":"            break;","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"IncyBot"},"content":"        case PENALTY:","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"IncyBot"},"content":"            CommandList.executePenalty();","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"IncyBot"},"content":"            break;","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"hwc0419"},"content":"        default:","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"hwc0419"},"content":"            Formatter.printErrorUnknown();","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"hwc0419"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"hwc0419"},"content":"    public static void setIsRunning(boolean runState) {","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"hwc0419"},"content":"        isRunning \u003d runState;","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"hwc0419"},"content":"    public static boolean getIsRunning() {","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"hwc0419"},"content":"        return isRunning;","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"HenryGan138"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"hwc0419":67,"IncyBot":3,"runxinghuan":2,"HenryGan138":16}},{"path":"src/test/java/seedu/duke/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hwc0419"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"hwc0419"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"hwc0419"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"hwc0419"},"content":"import static seedu.duke.Parser.parseIntoNameAndArgumentString;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"hwc0419"},"content":"public class ParserTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"hwc0419"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"hwc0419"},"content":"    public void testParseIntoNameAndArgumentString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"hwc0419"},"content":"        String userInput0 \u003d \"bye\";","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"hwc0419"},"content":"        String userInput1 \u003d \"shoot\";","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"hwc0419"},"content":"        String userInput2 \u003d \"shoot 1\";","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"hwc0419"},"content":"        assertEquals(1, parseIntoNameAndArgumentString(userInput0).length);","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"hwc0419"},"content":"        assertEquals(1, parseIntoNameAndArgumentString(userInput1).length);","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"hwc0419"},"content":"        assertEquals(2, parseIntoNameAndArgumentString(userInput2).length);","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"hwc0419"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"hwc0419":19}},{"path":"src/test/java/seedu/duke/ai/AiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"runxinghuan"},"content":"package seedu.duke.ai;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"runxinghuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"runxinghuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"runxinghuan"},"content":"public class AiTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"runxinghuan"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"runxinghuan"},"content":"    public void directionIsLegal() {","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"runxinghuan"},"content":"        Ai ai \u003d new Ai();","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"runxinghuan"},"content":"        int value \u003d ai.getAiDirection();","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"runxinghuan"},"content":"        this.assertRange(0, 2, value);","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"runxinghuan"},"content":"    public void assertRange(int expectedMin, int expectedMax, int actual) {","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"runxinghuan"},"content":"        assertTrue(actual \u003e\u003d expectedMin \u0026\u0026 actual \u003c\u003d expectedMax);","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"runxinghuan"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"runxinghuan":17}},{"path":"src/test/java/seedu/duke/ui/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hwc0419"},"content":"//package seedu.duke.ui;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"hwc0419"},"content":"//import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"hwc0419"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"hwc0419"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"hwc0419"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"hwc0419"},"content":"//import java.io.ByteArrayInputStream;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"hwc0419"},"content":"//import java.io.InputStream;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"hwc0419"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"hwc0419"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"hwc0419"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"hwc0419"},"content":"//class UiTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"hwc0419"},"content":"//    private final InputStream systemIn \u003d System.in;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"hwc0419"},"content":"//    private ByteArrayInputStream testIn;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"hwc0419"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"hwc0419"},"content":"//    @BeforeEach","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"hwc0419"},"content":"//    public void setUpInput() {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"hwc0419"},"content":"//        // This is the input we want to simulate for a particular test case.","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"hwc0419"},"content":"//        String simulatedUserInput \u003d \"test input\\n\";","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"hwc0419"},"content":"//        testIn \u003d new ByteArrayInputStream(simulatedUserInput.getBytes());","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"hwc0419"},"content":"//        System.setIn(testIn);","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"hwc0419"},"content":"//    }","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"hwc0419"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"hwc0419"},"content":"//    @AfterEach","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"hwc0419"},"content":"//    public void restoreSystemInput() {","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"hwc0419"},"content":"//        System.setIn(systemIn);","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"hwc0419"},"content":"//    }","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"hwc0419"},"content":"//","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"hwc0419"},"content":"//    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"hwc0419"},"content":"//    public void readUserInput_returnsCorrectly() {","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"hwc0419"},"content":"//        Ui ui \u003d new Ui();","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"hwc0419"},"content":"//        String userInput \u003d ui.readUserInput();","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"hwc0419"},"content":"//        assertEquals(\"test input\", userInput, \"The method should return the input provided by the user.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"hwc0419"},"content":"//    }","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"hwc0419"},"content":"//}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"hwc0419":34}}]
