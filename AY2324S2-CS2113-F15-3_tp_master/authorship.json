[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName.set(\"duke\")","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier.set(\"\")","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"runxinghuan"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"runxinghuan":1,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |     Name     | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"runxinghuan"},"content":"--------|:------------:|:--------------:|:---------:","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"runxinghuan"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Run Xinghuan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"HenryGan138"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Henry Gan | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"ymirmeddeb"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ymir Meddeb | [ymirmeddeb](https://github.com/ymirmeddeb) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"IncyBot"},"content":"![](https://incybot.github.io/images/avatars/avatar-1.png) | Sparsh | [Github](https://github.com/IncyBot) | [Portfolio](https://incybot.github.io/)","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"IncyBot":1,"runxinghuan":2,"HenryGan138":1,"ymirmeddeb":2,"-":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"HenryGan138"},"content":"## Class Structure","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"HenryGan138"},"content":"### Player Class","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"HenryGan138"},"content":"- **Attributes:**","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"HenryGan138"},"content":"    - `name`: String - The player\u0027s name.","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"HenryGan138"},"content":"    - `matchCount`: int - The number of matches played.","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"HenryGan138"},"content":"    - `power`: int - The player\u0027s power level.","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"HenryGan138"},"content":"    - `skill`: int - The player\u0027s skill level.","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"HenryGan138"},"content":"- **Methods:**","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"HenryGan138"},"content":"    - `printSelfInfo()`: void - Displays the player\u0027s basic information.","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"HenryGan138"},"content":"    - `printGoalBeforeShoot()`: void - Abstract method to display goal during a penalty shoot.","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"HenryGan138"},"content":"    - `getSkill()`: int - Returns the player\u0027s skill level.","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"HenryGan138"},"content":"      ![UML Class Diagram](../umlDiagram/player.png) ","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"HenryGan138"},"content":"### Skill Level Subclasses (BeginnerSkill, MediumSkill, ExpertSkill)","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"HenryGan138"},"content":"These subclasses extend Player, each representing different skill levels and overriding methods to provide specific functionalities.","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"HenryGan138"},"content":"### PlayerList Class","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"HenryGan138"},"content":"- **Attributes:**","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"HenryGan138"},"content":"    - `l1`: ArrayList\u003cPlayer\u003e - A list of player objects.","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"HenryGan138"},"content":"- **Methods:**","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"HenryGan138"},"content":"    - `skillUpgrade(int curPlayer)`: void - Upgrades the skill level of the player at the specified index.","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"HenryGan138"},"content":"The implementation of the player management system in the NUSFC24 is designed with extensibility and flexibility in mind. This section delves into the design rationale, how the system accommodates new and returning players, and how skill upgrades are managed.","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"HenryGan138"},"content":"### Player Management","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"HenryGan138"},"content":"The system is built around the Player class and its subclasses (BeginnerSkill, MediumSkill, ExpertSkill), with a `PlayerList` class managing all player instances. This design allows for a scalable way to add new player types and manage their interactions within the game:","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"HenryGan138"},"content":"- **Player Class**: Serves as the base class for all players, encapsulating common attributes such as `name`, `matchCount`, `power`, and `skill`, and common behaviors.","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"HenryGan138"},"content":"- **Skill Level Subclasses**: These subclasses inherit from Player and override specific methods to reflect their skill level\u0027s unique behaviors and characteristics.","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"HenryGan138"},"content":"- **PlayerList Class**: Manages a collection of Player instances, facilitating operations like adding new players and upgrading their skills through the `skillUpgrade` method.","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"HenryGan138"},"content":"### Handling New and Returning Players","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"HenryGan138"},"content":"Upon a user entering the game, the system determines whether to fetch an existing player from PlayerList or to create a new player instance. This process is crucial for providing a seamless user experience, whether they are returning players or first-time participants.","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"HenryGan138"},"content":"- **New Players**: For users new to the game, a Player object is created with the BeginnerSkill level by default. This player is then added to the PlayerList, ready for game participation.","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"HenryGan138"},"content":"- **Returning Players**: For users returning to the game, their Player object is retrieved from the PlayerList using identifying information (e.g., player name). This allows the game to maintain continuity in the player\u0027s progression.","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"HenryGan138"},"content":"### Skill Upgrade Mechanism","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"HenryGan138"},"content":"The `skillUpgrade` method in the `PlayerList` class is a key feature, allowing players to improve their skills based on game performance. The method checks the player\u0027s current skill and match count, upgrading their skill level if certain conditions are met.","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"HenryGan138"},"content":"he mechanism operates through a structured process, enhancing the gaming experience by offering a realistic approach to skill progression:","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"HenryGan138"},"content":"1. **Skill Level Assessment**: The system evaluates a player\u0027s current skill level alongside their performance metrics, such as match count and success rate.","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"HenryGan138"},"content":"2. **Determination of Skill Upgrade Eligibility**: Utilizing predefined criteria, the system determines if a player qualifies for a skill upgrade. These criteria may include metrics like a minimum number of matches played or specific performance thresholds.","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"HenryGan138"},"content":"3. **Application of Skill Upgrade**: Eligible players will have their skill attribute adjusted to a higher level. This upgrade might unlock new abilities, enhance stats, or offer other in-game advantages.","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"HenryGan138"},"content":"4. **Feedback to the User**: The system informs the user of the successful skill upgrade through UI messages or other feedback mechanisms, providing immediate recognition of their achievement.","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"HenryGan138"},"content":"![UML Class Diagram](../umlDiagram/updateSkill.png)","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"},{"lineNumber":95,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"runxinghuan"},"content":"## Implementation","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"runxinghuan"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"runxinghuan"},"content":"### Real penalty shootout setting","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"runxinghuan"},"content":"As we are making a penalty shootout game, we should make the procedure of a match in the game the same as that of a ","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"runxinghuan"},"content":"real penalty shootout. Here is the procedure of a real penalty shootout:","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"runxinghuan"},"content":"Teams take turns to kick from the penalty mark, until each has taken five kicks. However, if one side has scored more ","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"runxinghuan"},"content":"goals than the other could possibly reach with all of its remaining kicks, the shoot-out immediately ends, regardless ","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"runxinghuan"},"content":"of the number of kicks remaining; this basis is called \"best-of-five kicks\".","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"runxinghuan"},"content":"If after five rounds of kicks, the teams have scored an equal number of goals (or neither team has scored any goals), ","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"runxinghuan"},"content":"additional rounds of one kick each are used until one team scores and the other misses. This is known as sudden death.","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"runxinghuan"},"content":"The procedure is facilitated by `MatchStat`. It records current round and match numbers. ","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"runxinghuan"},"content":"The `updateStat(boolean isPlayer, boolean isGoal)` method converts the outcomes of player\u0027s commands into player score ","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"runxinghuan"},"content":"and Ai score after `penalty` or `save` commands. The `decideMatchEnd()` method decides whether a match ends based on the ","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"runxinghuan"},"content":"rules mentioned above. ","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"runxinghuan"},"content":"As we now only need to record the match stats of one player, the class is implemented as a utility class. (i.e. Using ","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"runxinghuan"},"content":"class level fields and methods.) We may change it to an instantiable class later when we need to record the match stats ","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"runxinghuan"},"content":"of multiple players. Here is the class diagram of the class:","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"runxinghuan"},"content":"![MatchStatClassDiagram-0.png](diagrams%2FMatchStatClassDiagram-0.png)","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"IncyBot"},"content":"## AI Class ","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"IncyBot"},"content":"### Overview","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"IncyBot"},"content":"The `Ai` class is responsible for generating a random direction for the computer player (AI) to shoot or save in the game. The difficulty level of the game determines the range of directions the AI can choose from.","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"IncyBot"},"content":"### Design","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"IncyBot"},"content":"The `Ai` class has the following components:","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"IncyBot"},"content":"1. `minDirection` and `maxDirection` static variables to store the minimum and maximum direction values based on the difficulty level.","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"IncyBot"},"content":"2. A constructor that takes a `DifficultyLevel` object as input and initializes the `minDirection` and `maxDirection` based on the difficulty level.","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"IncyBot"},"content":"3. A `getAiDirection()` static method that generates a random direction within the range of `minDirection` and `maxDirection`.","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"IncyBot"},"content":"4. Getter methods `getMinDirection()` and `getMaxDirection()` to retrieve the minimum and maximum direction values, respectively.","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"IncyBot"},"content":"### Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"IncyBot"},"content":"The `Ai` class is implemented as follows:","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"IncyBot"},"content":"```java","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"IncyBot"},"content":"public class Ai {","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"IncyBot"},"content":"    private static int minDirection;","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"IncyBot"},"content":"    private static int maxDirection;","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"IncyBot"},"content":"    public Ai(DifficultyLevel difficultyLevel) {","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"IncyBot"},"content":"        switch (difficultyLevel) {","lastModifiedDate":"2024-03-29"},{"lineNumber":156,"author":{"gitId":"IncyBot"},"content":"            case EASY:","lastModifiedDate":"2024-03-29"},{"lineNumber":157,"author":{"gitId":"IncyBot"},"content":"                minDirection \u003d 0;","lastModifiedDate":"2024-03-29"},{"lineNumber":158,"author":{"gitId":"IncyBot"},"content":"                maxDirection \u003d 2;","lastModifiedDate":"2024-03-29"},{"lineNumber":159,"author":{"gitId":"IncyBot"},"content":"                break;","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"IncyBot"},"content":"            case MEDIUM:","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"IncyBot"},"content":"                minDirection \u003d 0;","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"IncyBot"},"content":"                maxDirection \u003d 3;","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"IncyBot"},"content":"                break;","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"IncyBot"},"content":"            case HARD:","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"IncyBot"},"content":"                minDirection \u003d 0;","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"IncyBot"},"content":"                maxDirection \u003d 4;","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"IncyBot"},"content":"                break;","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"IncyBot"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"IncyBot"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"IncyBot"},"content":"    public static int getAiDirection() {","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"IncyBot"},"content":"        Random rand \u003d new Random();","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"IncyBot"},"content":"        int direction \u003d rand.nextInt(maxDirection - minDirection + 1) + minDirection;","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"IncyBot"},"content":"        assert direction \u003e\u003d minDirection \u0026\u0026 direction \u003c\u003d maxDirection : \"Illegal AI direction generated!\";","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"IncyBot"},"content":"        return direction;","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"IncyBot"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"IncyBot"},"content":"    public static int getMinDirection() {","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"IncyBot"},"content":"        return minDirection;","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"IncyBot"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"IncyBot"},"content":"    public static int getMaxDirection() {","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"IncyBot"},"content":"        return maxDirection;","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"IncyBot"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"IncyBot"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"IncyBot"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"IncyBot"},"content":"The constructor initializes the `minDirection` and `maxDirection` based on the `DifficultyLevel` parameter. The `getAiDirection()` method generates a random integer within the range of `minDirection` and `maxDirection` using the `Random` class from Java\u0027s `util` package.","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"IncyBot"},"content":"### Alternatives Considered","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"IncyBot"},"content":"An alternative design could be to have separate classes for different difficulty levels, each with its own implementation of the `getAiDirection()` method. However, this would lead to code duplication and make the codebase more difficult to maintain.","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"IncyBot"},"content":"## Penalty Class","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"IncyBot"},"content":"### Overview","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"IncyBot"},"content":"The `Penalty` class handles the penalty command in the game. It prompts the user to enter the direction to shoot the penalty and checks if the user\u0027s input is valid. It then compares the user\u0027s input with the AI\u0027s direction and determines whether a goal is scored or not.","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"IncyBot"},"content":"### Design","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":202,"author":{"gitId":"IncyBot"},"content":"The `Penalty` class has the following components:","lastModifiedDate":"2024-03-29"},{"lineNumber":203,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"IncyBot"},"content":"1. A `PENALTY_PROMPT` constant string to display the prompt for the user to enter the penalty direction.","lastModifiedDate":"2024-03-29"},{"lineNumber":205,"author":{"gitId":"IncyBot"},"content":"2. An `executePenalty()` method that takes an `Ai` object as input and executes the penalty command.","lastModifiedDate":"2024-03-29"},{"lineNumber":206,"author":{"gitId":"IncyBot"},"content":"3. A `getUserPenaltyDirection()` method that prompts the user to enter the penalty direction and returns the corresponding integer value.","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"IncyBot"},"content":"4. A `convertToShootDirection()` method that converts the user\u0027s input direction to an integer value, validating the input and handling invalid inputs.","lastModifiedDate":"2024-03-29"},{"lineNumber":208,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"IncyBot"},"content":"### Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"IncyBot"},"content":"The `Penalty` class is implemented as follows:","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":213,"author":{"gitId":"IncyBot"},"content":"```java","lastModifiedDate":"2024-03-29"},{"lineNumber":214,"author":{"gitId":"IncyBot"},"content":"public class Penalty {","lastModifiedDate":"2024-03-29"},{"lineNumber":215,"author":{"gitId":"IncyBot"},"content":"    private static final String PENALTY_PROMPT \u003d \"Enter the direction to shoot the penalty (0, 1, or 2): \";","lastModifiedDate":"2024-03-29"},{"lineNumber":216,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"IncyBot"},"content":"    public static void executePenalty(Ai ai) {","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"IncyBot"},"content":"        int userDirection \u003d getUserPenaltyDirection();","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"IncyBot"},"content":"        int aiDirection \u003d ai.getAiDirection();","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"IncyBot"},"content":"        boolean isGoal \u003d CommandList.goalCheck(userDirection, aiDirection);","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"IncyBot"},"content":"        Formatter.printGoalAfterShot(isGoal);","lastModifiedDate":"2024-03-29"},{"lineNumber":222,"author":{"gitId":"IncyBot"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":223,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":224,"author":{"gitId":"IncyBot"},"content":"    private static int getUserPenaltyDirection() {","lastModifiedDate":"2024-03-29"},{"lineNumber":225,"author":{"gitId":"IncyBot"},"content":"        System.out.print(PENALTY_PROMPT);","lastModifiedDate":"2024-03-29"},{"lineNumber":226,"author":{"gitId":"IncyBot"},"content":"        String directionString \u003d Ui.userInput;","lastModifiedDate":"2024-03-29"},{"lineNumber":227,"author":{"gitId":"IncyBot"},"content":"        int userDirection \u003d convertToShootDirection(directionString);","lastModifiedDate":"2024-03-29"},{"lineNumber":228,"author":{"gitId":"IncyBot"},"content":"        return userDirection;","lastModifiedDate":"2024-03-29"},{"lineNumber":229,"author":{"gitId":"IncyBot"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":230,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":231,"author":{"gitId":"IncyBot"},"content":"    public static int convertToShootDirection(String direction) {","lastModifiedDate":"2024-03-29"},{"lineNumber":232,"author":{"gitId":"IncyBot"},"content":"        int directionIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":233,"author":{"gitId":"IncyBot"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":234,"author":{"gitId":"IncyBot"},"content":"            directionIndex \u003d Integer.parseInt(direction);","lastModifiedDate":"2024-03-29"},{"lineNumber":235,"author":{"gitId":"IncyBot"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":236,"author":{"gitId":"IncyBot"},"content":"            Formatter.printErrorWrongArgumentType(\"PENALTY\", \"^[0-2]$\", 0);","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"IncyBot"},"content":"            return -1; // Invalid input","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"IncyBot"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":239,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":240,"author":{"gitId":"IncyBot"},"content":"        if (directionIndex \u003e\u003d Ai.getMinDirection() \u0026\u0026 directionIndex \u003c\u003d Ai.getMaxDirection()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":241,"author":{"gitId":"IncyBot"},"content":"            return directionIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":242,"author":{"gitId":"IncyBot"},"content":"        } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":243,"author":{"gitId":"IncyBot"},"content":"            Formatter.printErrorWrongArgumentType(\"PENALTY\", \"^[0-2]$\", 0);","lastModifiedDate":"2024-03-29"},{"lineNumber":244,"author":{"gitId":"IncyBot"},"content":"            return -1; // Invalid direction","lastModifiedDate":"2024-03-29"},{"lineNumber":245,"author":{"gitId":"IncyBot"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":246,"author":{"gitId":"IncyBot"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":247,"author":{"gitId":"IncyBot"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":248,"author":{"gitId":"IncyBot"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":249,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":250,"author":{"gitId":"IncyBot"},"content":"The `executePenalty()` method calls the `getUserPenaltyDirection()` method to get the user\u0027s input direction, gets the AI\u0027s direction using the `Ai` class, and then checks if a goal is scored using the `goalCheck()` method in the `CommandList` class. The `getUserPenaltyDirection()` method prompts the user to enter the direction and calls the `convertToShootDirection()` method to validate and convert the user\u0027s input.","lastModifiedDate":"2024-03-29"},{"lineNumber":251,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":252,"author":{"gitId":"IncyBot"},"content":"The `convertToShootDirection()` method first tries to parse the input string into an integer using `Integer.parseInt()`. If the parsing fails, it prints an error message using the `Formatter` class and returns -1 to indicate an invalid input. If the parsing succeeds, it checks if the direction is within the valid range based on the `minDirection` and `maxDirection` values from the `Ai` class. If the direction is valid, it returns the direction index; otherwise, it prints an error message and returns -1.","lastModifiedDate":"2024-03-29"},{"lineNumber":253,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":254,"author":{"gitId":"IncyBot"},"content":"### Alternatives Considered","lastModifiedDate":"2024-03-29"},{"lineNumber":255,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":256,"author":{"gitId":"IncyBot"},"content":"An alternative implementation could be to have separate methods for handling different types of input validation, such as checking if the input is a valid integer and checking if the input is within the valid range. This would make the code more modular and easier to maintain.","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":258,"author":{"gitId":"ymirmeddeb"},"content":"## Save Class","lastModifiedDate":"2024-03-29"},{"lineNumber":259,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":260,"author":{"gitId":"ymirmeddeb"},"content":"### Overview","lastModifiedDate":"2024-03-29"},{"lineNumber":261,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":262,"author":{"gitId":"ymirmeddeb"},"content":"The `Save` class handles the save command in the game. It prompts the user to enter the direction to save the penalty and checks if the user\u0027s input is valid. It then compares the user\u0027s input with the AI\u0027s direction and determines whether a goal is saved or not.","lastModifiedDate":"2024-03-29"},{"lineNumber":263,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":264,"author":{"gitId":"ymirmeddeb"},"content":"### Design","lastModifiedDate":"2024-03-29"},{"lineNumber":265,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":266,"author":{"gitId":"ymirmeddeb"},"content":"The `Save` class has the following components:","lastModifiedDate":"2024-03-29"},{"lineNumber":267,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":268,"author":{"gitId":"ymirmeddeb"},"content":"1. An `executeSave()` method that prompts the user for a direction, gets the AI\u0027s penalty kick direction, and then checks if the save is successful.","lastModifiedDate":"2024-03-29"},{"lineNumber":269,"author":{"gitId":"ymirmeddeb"},"content":"2. A `getUserSaveDirection()` method that reads the user\u0027s input and returns a corresponding integer value after validation.","lastModifiedDate":"2024-03-29"},{"lineNumber":270,"author":{"gitId":"ymirmeddeb"},"content":"3. Integration with the `ShootDirectionConverter` class to validate the user\u0027s input and ensure it\u0027s within the expected range.","lastModifiedDate":"2024-03-29"},{"lineNumber":271,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":272,"author":{"gitId":"ymirmeddeb"},"content":"### Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":273,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":274,"author":{"gitId":"ymirmeddeb"},"content":"Here is the implementation structure of the `Save` class:","lastModifiedDate":"2024-03-29"},{"lineNumber":275,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":276,"author":{"gitId":"ymirmeddeb"},"content":"```java","lastModifiedDate":"2024-03-29"},{"lineNumber":277,"author":{"gitId":"ymirmeddeb"},"content":"public class Save {","lastModifiedDate":"2024-03-29"},{"lineNumber":278,"author":{"gitId":"ymirmeddeb"},"content":"    ","lastModifiedDate":"2024-03-29"},{"lineNumber":279,"author":{"gitId":"ymirmeddeb"},"content":"  public static void executeSave() {","lastModifiedDate":"2024-03-29"},{"lineNumber":280,"author":{"gitId":"ymirmeddeb"},"content":"    int userSaveDirection \u003d getUserSaveDirection();","lastModifiedDate":"2024-03-29"},{"lineNumber":281,"author":{"gitId":"ymirmeddeb"},"content":"    int aiPenaltyDirection \u003d Ai.getAiDirection();","lastModifiedDate":"2024-03-29"},{"lineNumber":282,"author":{"gitId":"ymirmeddeb"},"content":"    boolean isGoalSaved \u003d userSaveDirection \u003d\u003d aiPenaltyDirection;","lastModifiedDate":"2024-03-29"},{"lineNumber":283,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":284,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":285,"author":{"gitId":"ymirmeddeb"},"content":"    Formatter.printSaveResult(isGoalSaved);","lastModifiedDate":"2024-03-29"},{"lineNumber":286,"author":{"gitId":"ymirmeddeb"},"content":"    Ui.roundCount++;","lastModifiedDate":"2024-03-29"},{"lineNumber":287,"author":{"gitId":"ymirmeddeb"},"content":"  }","lastModifiedDate":"2024-03-29"},{"lineNumber":288,"author":{"gitId":"ymirmeddeb"},"content":"  ","lastModifiedDate":"2024-03-29"},{"lineNumber":289,"author":{"gitId":"ymirmeddeb"},"content":"  private static int getUserSaveDirection() {","lastModifiedDate":"2024-03-29"},{"lineNumber":290,"author":{"gitId":"ymirmeddeb"},"content":"    int userDirection;","lastModifiedDate":"2024-03-29"},{"lineNumber":291,"author":{"gitId":"ymirmeddeb"},"content":"    do {","lastModifiedDate":"2024-03-29"},{"lineNumber":292,"author":{"gitId":"ymirmeddeb"},"content":"      System.out.print(\"Enter the direction to save the penalty (0, 1, or 2): \");","lastModifiedDate":"2024-03-29"},{"lineNumber":293,"author":{"gitId":"ymirmeddeb"},"content":"      String directionString \u003d Ui.IN.nextLine().trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":294,"author":{"gitId":"ymirmeddeb"},"content":"      userDirection \u003d ShootDirectionConverter.convertToShootDirection(directionString);","lastModifiedDate":"2024-03-29"},{"lineNumber":295,"author":{"gitId":"ymirmeddeb"},"content":"      if (userDirection \u003d\u003d -1) {","lastModifiedDate":"2024-03-29"},{"lineNumber":296,"author":{"gitId":"ymirmeddeb"},"content":"        System.out.println(\"Invalid direction! Please enter 0, 1, or 2.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":297,"author":{"gitId":"ymirmeddeb"},"content":"      }","lastModifiedDate":"2024-03-29"},{"lineNumber":298,"author":{"gitId":"ymirmeddeb"},"content":"    } while (userDirection \u003d\u003d -1);","lastModifiedDate":"2024-03-29"},{"lineNumber":299,"author":{"gitId":"ymirmeddeb"},"content":"    return userDirection;","lastModifiedDate":"2024-03-29"},{"lineNumber":300,"author":{"gitId":"ymirmeddeb"},"content":"  }","lastModifiedDate":"2024-03-29"},{"lineNumber":301,"author":{"gitId":"ymirmeddeb"},"content":"  ","lastModifiedDate":"2024-03-29"},{"lineNumber":302,"author":{"gitId":"ymirmeddeb"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":303,"author":{"gitId":"ymirmeddeb"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":304,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":305,"author":{"gitId":"ymirmeddeb"},"content":"The `executeSave()` method drives the process, starting by invoking `getUserSaveDirection()` to prompt the user for input. It then retrieves the AI\u0027s direction with `Ai.getAiDirection()`. A comparison is made, and the result of the attempted save is passed to the `Formatter` for output. The `roundCount` is incremented at the end of the method, signaling the progression of the game.","lastModifiedDate":"2024-03-29"},{"lineNumber":306,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":307,"author":{"gitId":"ymirmeddeb"},"content":"The `getUserSaveDirection()` method repeatedly prompts the user for input until a valid direction (0, 1, or 2) is entered. Input validation is offloaded to `ShootDirectionConverter.convertToShootDirection()`, which translates the string input into a numeric direction or returns -1 for invalid input.","lastModifiedDate":"2024-03-29"},{"lineNumber":308,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":309,"author":{"gitId":"ymirmeddeb"},"content":"### Alternatives Considered","lastModifiedDate":"2024-03-29"},{"lineNumber":310,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":311,"author":{"gitId":"ymirmeddeb"},"content":"The current implementation could be further modularized by separating input collection and input validation into distinct methods. This would potentially improve the readability and maintainability of the code by delineating clear responsibilities within the class structure. Additionally, using exceptions to handle invalid input could provide a cleaner mechanism for managing input errors and reduce the reliance on sentinel values like `-1`.","lastModifiedDate":"2024-03-29"},{"lineNumber":312,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":313,"author":{"gitId":"IncyBot"},"content":"## DifficultyLevel Enum","lastModifiedDate":"2024-03-29"},{"lineNumber":314,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":315,"author":{"gitId":"IncyBot"},"content":"### Overview","lastModifiedDate":"2024-03-29"},{"lineNumber":316,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":317,"author":{"gitId":"IncyBot"},"content":"The `DifficultyLevel` enum represents the difficulty levels of the game. It has three values: `EASY`, `MEDIUM`, and `HARD`.","lastModifiedDate":"2024-03-29"},{"lineNumber":318,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":319,"author":{"gitId":"IncyBot"},"content":"### Design","lastModifiedDate":"2024-03-29"},{"lineNumber":320,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":321,"author":{"gitId":"IncyBot"},"content":"The `DifficultyLevel` enum is a simple enumeration that defines the three difficulty levels of the game.","lastModifiedDate":"2024-03-29"},{"lineNumber":322,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":323,"author":{"gitId":"IncyBot"},"content":"### Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":324,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":325,"author":{"gitId":"IncyBot"},"content":"The `DifficultyLevel` enum is implemented as follows:","lastModifiedDate":"2024-03-29"},{"lineNumber":326,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":327,"author":{"gitId":"IncyBot"},"content":"```java","lastModifiedDate":"2024-03-29"},{"lineNumber":328,"author":{"gitId":"IncyBot"},"content":"public enum DifficultyLevel {","lastModifiedDate":"2024-03-29"},{"lineNumber":329,"author":{"gitId":"IncyBot"},"content":"    EASY,","lastModifiedDate":"2024-03-29"},{"lineNumber":330,"author":{"gitId":"IncyBot"},"content":"    MEDIUM,","lastModifiedDate":"2024-03-29"},{"lineNumber":331,"author":{"gitId":"IncyBot"},"content":"    HARD","lastModifiedDate":"2024-03-29"},{"lineNumber":332,"author":{"gitId":"IncyBot"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":333,"author":{"gitId":"IncyBot"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":334,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":335,"author":{"gitId":"IncyBot"},"content":"### Alternatives Considered","lastModifiedDate":"2024-03-29"},{"lineNumber":336,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":337,"author":{"gitId":"IncyBot"},"content":"An alternative to using an enum could be to use integer constants or string constants to represent the difficulty levels. However, enums provide type safety and better code readability, making them a preferred choice for representing a fixed set of values.","lastModifiedDate":"2024-03-29"},{"lineNumber":338,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":339,"author":{"gitId":"IncyBot"},"content":"## Class Diagrams","lastModifiedDate":"2024-03-29"},{"lineNumber":340,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":341,"author":{"gitId":"IncyBot"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":342,"author":{"gitId":"IncyBot"},"content":"+-------------+","lastModifiedDate":"2024-03-29"},{"lineNumber":343,"author":{"gitId":"IncyBot"},"content":"|DifficultyLevel|","lastModifiedDate":"2024-03-29"},{"lineNumber":344,"author":{"gitId":"IncyBot"},"content":"+-------------+","lastModifiedDate":"2024-03-29"},{"lineNumber":345,"author":{"gitId":"IncyBot"},"content":"| EASY        |","lastModifiedDate":"2024-03-29"},{"lineNumber":346,"author":{"gitId":"IncyBot"},"content":"| MEDIUM      |","lastModifiedDate":"2024-03-29"},{"lineNumber":347,"author":{"gitId":"IncyBot"},"content":"| HARD        |","lastModifiedDate":"2024-03-29"},{"lineNumber":348,"author":{"gitId":"IncyBot"},"content":"+-------------+","lastModifiedDate":"2024-03-29"},{"lineNumber":349,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":350,"author":{"gitId":"IncyBot"},"content":"+------------+","lastModifiedDate":"2024-03-29"},{"lineNumber":351,"author":{"gitId":"IncyBot"},"content":"|     Ai     |","lastModifiedDate":"2024-03-29"},{"lineNumber":352,"author":{"gitId":"IncyBot"},"content":"+------------+","lastModifiedDate":"2024-03-29"},{"lineNumber":353,"author":{"gitId":"IncyBot"},"content":"| -minDirection: int","lastModifiedDate":"2024-03-29"},{"lineNumber":354,"author":{"gitId":"IncyBot"},"content":"| -maxDirection: int","lastModifiedDate":"2024-03-29"},{"lineNumber":355,"author":{"gitId":"IncyBot"},"content":"+------------+","lastModifiedDate":"2024-03-29"},{"lineNumber":356,"author":{"gitId":"IncyBot"},"content":"| +Ai(difficultyLevel: DifficultyLevel)","lastModifiedDate":"2024-03-29"},{"lineNumber":357,"author":{"gitId":"IncyBot"},"content":"| +getAiDirection(): int","lastModifiedDate":"2024-03-29"},{"lineNumber":358,"author":{"gitId":"IncyBot"},"content":"| +getMinDirection(): int","lastModifiedDate":"2024-03-29"},{"lineNumber":359,"author":{"gitId":"IncyBot"},"content":"| +getMaxDirection(): int","lastModifiedDate":"2024-03-29"},{"lineNumber":360,"author":{"gitId":"IncyBot"},"content":"+------------+","lastModifiedDate":"2024-03-29"},{"lineNumber":361,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":362,"author":{"gitId":"IncyBot"},"content":"+----------------+","lastModifiedDate":"2024-03-29"},{"lineNumber":363,"author":{"gitId":"IncyBot"},"content":"|     Penalty    |","lastModifiedDate":"2024-03-29"},{"lineNumber":364,"author":{"gitId":"IncyBot"},"content":"+----------------+","lastModifiedDate":"2024-03-29"},{"lineNumber":365,"author":{"gitId":"IncyBot"},"content":"| -PENALTY_PROMPT: String","lastModifiedDate":"2024-03-29"},{"lineNumber":366,"author":{"gitId":"IncyBot"},"content":"+----------------+","lastModifiedDate":"2024-03-29"},{"lineNumber":367,"author":{"gitId":"IncyBot"},"content":"| +executePenalty(ai: Ai): void","lastModifiedDate":"2024-03-29"},{"lineNumber":368,"author":{"gitId":"IncyBot"},"content":"| -getUserPenaltyDirection(): int","lastModifiedDate":"2024-03-29"},{"lineNumber":369,"author":{"gitId":"IncyBot"},"content":"| +convertToShootDirection(direction: String): int","lastModifiedDate":"2024-03-29"},{"lineNumber":370,"author":{"gitId":"IncyBot"},"content":"+----------------+","lastModifiedDate":"2024-03-29"},{"lineNumber":371,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":372,"author":{"gitId":"IncyBot"},"content":"+----------------+","lastModifiedDate":"2024-03-29"},{"lineNumber":373,"author":{"gitId":"IncyBot"},"content":"|   CommandList  |","lastModifiedDate":"2024-03-29"},{"lineNumber":374,"author":{"gitId":"IncyBot"},"content":"+----------------+","lastModifiedDate":"2024-03-29"},{"lineNumber":375,"author":{"gitId":"IncyBot"},"content":"| +goalCheck(userInput: int, aiInput: int): boolean","lastModifiedDate":"2024-03-29"},{"lineNumber":376,"author":{"gitId":"IncyBot"},"content":"+----------------+","lastModifiedDate":"2024-03-29"},{"lineNumber":377,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":378,"author":{"gitId":"IncyBot"},"content":"+-------------+","lastModifiedDate":"2024-03-29"},{"lineNumber":379,"author":{"gitId":"IncyBot"},"content":"|  Formatter  |","lastModifiedDate":"2024-03-29"},{"lineNumber":380,"author":{"gitId":"IncyBot"},"content":"+-------------+","lastModifiedDate":"2024-03-29"},{"lineNumber":381,"author":{"gitId":"IncyBot"},"content":"| +printGoalAfterShot(goalScored: boolean): void","lastModifiedDate":"2024-03-29"},{"lineNumber":382,"author":{"gitId":"IncyBot"},"content":"| +printErrorWrongArgumentType(commandName: String, regex: String, argumentPosition: int): void","lastModifiedDate":"2024-03-29"},{"lineNumber":383,"author":{"gitId":"IncyBot"},"content":"+-------------+","lastModifiedDate":"2024-03-29"},{"lineNumber":384,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":385,"author":{"gitId":"IncyBot"},"content":"+--------+","lastModifiedDate":"2024-03-29"},{"lineNumber":386,"author":{"gitId":"IncyBot"},"content":"|   Ui   |","lastModifiedDate":"2024-03-29"},{"lineNumber":387,"author":{"gitId":"IncyBot"},"content":"+--------+","lastModifiedDate":"2024-03-29"},{"lineNumber":388,"author":{"gitId":"IncyBot"},"content":"| -userInput: String","lastModifiedDate":"2024-03-29"},{"lineNumber":389,"author":{"gitId":"IncyBot"},"content":"+--------+","lastModifiedDate":"2024-03-29"},{"lineNumber":390,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":391,"author":{"gitId":"IncyBot"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":392,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":393,"author":{"gitId":"IncyBot"},"content":"The `Ai` class depends on the `DifficultyLevel` enum to determine the range of directions for the AI. The `Penalty` class uses the `Ai` class to get the AI\u0027s direction and compares it with the user\u0027s input direction. The `CommandList` class provides the `goalCheck()` method to determine if a goal is scored based on the user\u0027s and AI\u0027s directions. The `Formatter` class is responsible for printing the goal result and error messages related to wrong argument types. The `Ui` class provides the user\u0027s input direction to the `Penalty` class.","lastModifiedDate":"2024-03-29"},{"lineNumber":394,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":395,"author":{"gitId":"IncyBot"},"content":"## Future Enhancements","lastModifiedDate":"2024-03-29"},{"lineNumber":396,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":397,"author":{"gitId":"IncyBot"},"content":"1. **Adaptive AI Difficulty**: Implement an adaptive AI difficulty system where the AI\u0027s behavior changes based on the player\u0027s performance. This could involve adjusting the range of directions or introducing other challenges for the AI.","lastModifiedDate":"2024-03-29"},{"lineNumber":398,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":399,"author":{"gitId":"IncyBot"},"content":"2. **Penalty Shootout Mode**: Implement a penalty shootout mode where the game is decided by a series of penalty kicks. This could involve additional rules and scoring mechanisms specific to penalty shootouts.","lastModifiedDate":"2024-03-29"},{"lineNumber":400,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":401,"author":{"gitId":"IncyBot"},"content":"3. **Custom Difficulty Levels**: Allow users to define custom difficulty levels by specifying the range of directions or other parameters that affect the AI\u0027s behavior.","lastModifiedDate":"2024-03-29"},{"lineNumber":402,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":403,"author":{"gitId":"IncyBot"},"content":"4. **Advanced AI Strategies**: Enhance the AI\u0027s decision-making capabilities by implementing more advanced strategies and algorithms. This could involve considering factors such as the player\u0027s previous shots, game statistics, or other relevant data.","lastModifiedDate":"2024-03-29"},{"lineNumber":404,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":405,"author":{"gitId":"IncyBot"},"content":"5. **Multiplayer Mode**: Implement a multiplayer mode where multiple players can participate in the game, either locally or over a network.","lastModifiedDate":"2024-03-29"},{"lineNumber":406,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"IncyBot":223,"runxinghuan":34,"HenryGan138":53,"ymirmeddeb":55,"-":41}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"runxinghuan"},"content":"# NUSFC 24","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"{Give product intro here}","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"runxinghuan":1,"-":7}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"runxinghuan"},"content":"NUSFC 24 is an association football-themed game app. Unlike the more famous games like EA Sports FC 24 and eFootball, ","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"runxinghuan"},"content":"NUSFC 24 is played via a Command Line Interface (CLI). The game does not simulate the main game of a football match. ","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"runxinghuan"},"content":"Rather, it simulates penalty shoot-out for football.","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"runxinghuan"},"content":"## Background Information","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"runxinghuan"},"content":"### Penalty Shoot-out","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"runxinghuan"},"content":"In a penalty shoot-out, each team takes turns shooting at goal from the penalty mark, with the goal defended only by the","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"runxinghuan"},"content":"opposing team\u0027s goalkeeper.","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"runxinghuan"},"content":"### Rules for Penalty Shoot-out","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"runxinghuan"},"content":"#### Best-of-five Kicks","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"runxinghuan"},"content":"Teams take turns to kick from the penalty mark, until each has taken five kicks. However, if one side has scored more ","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"runxinghuan"},"content":"goals than the other could possibly reach with all of its remaining kicks, the shoot-out immediately ends, regardless of","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"runxinghuan"},"content":"the number of kicks remaining.","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"runxinghuan"},"content":"For example, there are two teams team A and team B playing a penalty shoot-out. Both teams have taken three kicks. Team ","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"runxinghuan"},"content":"A has scored 3 goals, while team B has scored 0 goal. Now both teams are left with two kicks. As the goal difference ","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"runxinghuan"},"content":"between team A and team B (3) is larger than the number of kicks left for team B (2). The game ends immediately, with ","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"runxinghuan"},"content":"team A being the winner.","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"runxinghuan"},"content":"#### Sudden Death","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"runxinghuan"},"content":"If after five rounds of kicks, the teams have scored an equal number of goals (or neither team has scored any goals), ","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"runxinghuan"},"content":"additional rounds of one kick each are used until one team scores and the other misses.","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"runxinghuan"},"content":"## Quick Start","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"runxinghuan"},"content":"1. Ensure that you have Java 11 or above installed in your laptop.","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"runxinghuan"},"content":"2. Download the latest version of `NUSFC 24` from [here](https://github.com/AY2324S2-CS2113-F15-3/tp/releases/tag/v2.0).","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"runxinghuan"},"content":"3. Copy the file to the folder where you want to play the game.","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"runxinghuan"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar tp.jar` command to run","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"runxinghuan"},"content":"the application.","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"runxinghuan"},"content":"5. Type the command in the terminal and press Enter to execute it. e.g. typing `shoot 0` and pressing Enter will shoot a","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"runxinghuan"},"content":"penalty at direction 0 shown in the goal.\\","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"runxinghuan"},"content":"Some example commands you can try:","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"runxinghuan"},"content":"* `shoot 0`: Shoot a penalty at direction 0 shown in the goal.","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"runxinghuan"},"content":"* `save 0`: Make a save at direction 0 shown in the goal.","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"runxinghuan"},"content":"* `upgrade 2`: Upgrade your player to the medium skill level.","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"runxinghuan"},"content":"* `yes`: Restarts a match after a match ends.","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"runxinghuan"},"content":"* `no`: Does not restart a match after a match ends, and exits the game.","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"runxinghuan"},"content":"* `bye`: Exits the game.  ","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"runxinghuan"},"content":"6. Refer to the Features below for details of each command.","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"runxinghuan"},"content":"## Features","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"runxinghuan"},"content":"### Restarts a match after a match: `yes`","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"runxinghuan"},"content":"When one match ends, you will be asked whether to have a new match or not. Type `yes` for a new match.","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"runxinghuan"},"content":"Format: `yes`","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"runxinghuan"},"content":"### Does not restart a match after a match: `no`","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"runxinghuan"},"content":"When one match ends, you will be asked whether to have a new match or not. Type `no` for not having a new match, and ","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"runxinghuan"},"content":"exits the game directly.","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"runxinghuan"},"content":"Format: `no`","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"runxinghuan"},"content":"* Restarts a match after a match `yes`","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"runxinghuan"},"content":"* Does not restart a match after a match `no`","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"runxinghuan":49,"-":27}},{"path":"docs/diagrams/MatchStatClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"runxinghuan"},"content":"@startuml","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"runxinghuan"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"runxinghuan"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"runxinghuan"},"content":"class MatchStat {","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"runxinghuan"},"content":"- {static} matchCount: int","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"runxinghuan"},"content":"- {static} roundCount: int","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"runxinghuan"},"content":"- {static} playerScore: int","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"runxinghuan"},"content":"- {static} aiScore: int","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"runxinghuan"},"content":"- {static} isPlayerWin: boolean","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"runxinghuan"},"content":"- {static} isMatchEnd: boolean","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"runxinghuan"},"content":"+ {static} updateStat(isPlayer: boolean, isGoal: boolean)","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"runxinghuan"},"content":"+ {static} updateForNewMatch()","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"runxinghuan"},"content":"- {static} decideMatchEnd()","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"runxinghuan"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"runxinghuan"},"content":"@enduml","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"runxinghuan":19}},{"path":"src/main/java/seedu/duke/CommandList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hwc0419"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.ai.Ai;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"HenryGan138"},"content":"import seedu.duke.stats.MatchStat;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"hwc0419"},"content":"public enum CommandList {","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"runxinghuan"},"content":"    BYE, SHOOT, PENALTY, YES, NO, UPGRADE, EASY, MEDIUM, HARD, SAVE;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"hwc0419"},"content":"    //insert new user command name here","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"hwc0419"},"content":"    ;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"hwc0419"},"content":"     * Exits the program","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"hwc0419"},"content":"    public static void executeBye() {","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"hwc0419"},"content":"        Formatter.printGoodbyeMsg();","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"hwc0419"},"content":"        Ui.setIsRunning(false);","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"hwc0419"},"content":"    public static boolean goalCheck(int userInput, int aiInput) {","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"HenryGan138"},"content":"        assert userInput \u003e\u003d 0 \u0026\u0026 userInput \u003c\u003d 2 :","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"HenryGan138"},"content":"                \"Illegal userInput generated!\";","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"hwc0419"},"content":"        assert aiInput \u003e\u003d 0 \u0026\u0026 aiInput \u003c\u003d 2 :","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"hwc0419"},"content":"                \"Illegal aiInput generated!\";","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"hwc0419"},"content":"        return userInput !\u003d aiInput;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"IncyBot"},"content":"    public static void executePenalty(DifficultyLevel difficultyLevel) {","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"IncyBot"},"content":"        Ai ai \u003d new Ai(difficultyLevel);","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"IncyBot"},"content":"        Penalty.executePenalty(ai);","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"IncyBot"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"IncyBot"},"content":"  ","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"hwc0419"},"content":"    public static void executeShoot(String[] readArgumentTokens) {","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"hwc0419"},"content":"        String selectedDirection \u003d readArgumentTokens[0];","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"hwc0419"},"content":"        int selectedDirectionIndex \u003d Integer.parseInt(selectedDirection);","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"hwc0419"},"content":"        boolean isScoreGoal \u003d goalCheck(Ai.getAiDirection(), selectedDirectionIndex);","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"runxinghuan"},"content":"        MatchStat.updateStat(isScoreGoal); //Need to update after save command.","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"hwc0419"},"content":"        Formatter.printGoalAfterShot(isScoreGoal);","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"HenryGan138"},"content":"    public static void executeUpgrade(String[] level){","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"HenryGan138"},"content":"        String upgradeLevel \u003d level[0];","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"HenryGan138"},"content":"        int upgradeLevelIndex \u003d Integer.parseInt(upgradeLevel);","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"runxinghuan"},"content":"        PlayerList.l1.get(Ui.curPlayer).upgradePower(upgradeLevelIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"runxinghuan"},"content":"        PlayerList.l1.get(Ui.curPlayer).printSelfInfo();","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"IncyBot"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"ymirmeddeb"},"content":"    public static void executeSave(String[] readArgumentTokens) {","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"ymirmeddeb"},"content":"        String userSaveDirection \u003d readArgumentTokens[0];","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"ymirmeddeb"},"content":"        int userSaveDirectionIndex \u003d Integer.parseInt(userSaveDirection);","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"ymirmeddeb"},"content":"        int aiPenaltyDirection \u003d Ai.getAiDirection();","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"ymirmeddeb"},"content":"        boolean isGoalSaved \u003d userSaveDirectionIndex \u003d\u003d aiPenaltyDirection;","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"runxinghuan"},"content":"        boolean isGoal \u003d !isGoalSaved;","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"runxinghuan"},"content":"        MatchStat.updateStat(isGoal);","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"ymirmeddeb"},"content":"        Formatter.printSaveResult(isGoalSaved);","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"hwc0419"},"content":"    //insert new command here","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"hwc0419"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"hwc0419":34,"IncyBot":9,"runxinghuan":7,"HenryGan138":7,"ymirmeddeb":7}},{"path":"src/main/java/seedu/duke/DifficultyLevel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncyBot"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"IncyBot"},"content":"public enum DifficultyLevel {","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"IncyBot"},"content":"    EASY,","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"IncyBot"},"content":"    MEDIUM,","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"IncyBot"},"content":"    HARD","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"IncyBot"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"IncyBot":7}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"HenryGan138"},"content":"import seedu.duke.exception.ProcessInputException;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"HenryGan138"},"content":"import seedu.duke.player.MediumSkill;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"HenryGan138"},"content":"import seedu.duke.player.Player;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"HenryGan138"},"content":"import seedu.duke.stats.MatchStat;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"HenryGan138"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"HenryGan138"},"content":"        Formatter.printWelcomeMsg();","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"HenryGan138"},"content":"        Player playerThisRound \u003d createNewPlayer();","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"HenryGan138"},"content":"        //Assume there is single player, can only have one player in the game","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"HenryGan138"},"content":"        //After account login function done,","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"HenryGan138"},"content":"        //the PlayerThisRound will either return a new player, or a player existed in the PlayerList","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"HenryGan138"},"content":"        while (Ui.getIsRunning()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"HenryGan138"},"content":"            if (MatchStat.getIsMatchEnd()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"HenryGan138"},"content":"                Formatter.printMatchResult();","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"runxinghuan"},"content":"                PlayerList.skillUpgrade(Ui.curPlayer);","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"runxinghuan"},"content":"                playerThisRound \u003d PlayerList.l1.get(Ui.curPlayer);","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"runxinghuan"},"content":"            } else if (MatchStat.getIsPlayerTurn()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"HenryGan138"},"content":"                playerThisRound.printGoalBeforeShoot();","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"runxinghuan"},"content":"            } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"runxinghuan"},"content":"                playerThisRound.printGoalBeforeSave();","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"HenryGan138"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"HenryGan138"},"content":"            try {","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"HenryGan138"},"content":"                Ui.beginListening();","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"HenryGan138"},"content":"                Ui.processInput();","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"HenryGan138"},"content":"                Ui.executeCommand();","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"HenryGan138"},"content":"            } catch (ProcessInputException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"HenryGan138"},"content":"                Formatter.printErrorExecutionFail();","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"HenryGan138"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"HenryGan138"},"content":"    //Bruno is a sample player for demonstration, you can try any level player","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"HenryGan138"},"content":"    private static Player createNewPlayer() {","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"HenryGan138"},"content":"        PlayerList.l1.add(new MediumSkill(\"Bruno\",3));","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"runxinghuan"},"content":"        Player playerThisRound \u003d PlayerList.l1.get(Ui.curPlayer);","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"HenryGan138"},"content":"        playerThisRound.printSelfInfo();","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"HenryGan138"},"content":"        MatchStat.setMatchCount(playerThisRound.matchCount);","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"HenryGan138"},"content":"        return playerThisRound;","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"runxinghuan":6,"HenryGan138":34,"-":11}},{"path":"src/main/java/seedu/duke/Formatter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hwc0419"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"HenryGan138"},"content":"import seedu.duke.stats.MatchStat;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"ymirmeddeb"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"hwc0419"},"content":"public class Formatter {","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"ymirmeddeb"},"content":"    private static final Logger logger \u003d Logger.getLogger(Formatter.class.getName());","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"hwc0419"},"content":"     * Appends a newline to a given string and returns the resulting string","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"hwc0419"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"hwc0419"},"content":"     * @param str the given string","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"hwc0419"},"content":"     * @return A new string with a newline character appended to it","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"hwc0419"},"content":"    public static String appendNewLine(String str) {","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"hwc0419"},"content":"        return String.format(\"%s\\n\", str);","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"hwc0419"},"content":"    public static void printWrapper(String wrapWith) {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"hwc0419"},"content":"        System.out.print(\"\\t\");","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"hwc0419"},"content":"        for (int i \u003d 0; i \u003c 60; i++) {","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"hwc0419"},"content":"            System.out.print(wrapWith);","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"hwc0419"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"hwc0419"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"hwc0419"},"content":"     * Prints welcome message at start of program","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"hwc0419"},"content":"    public static void printWelcomeMsg() {","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"HenryGan138"},"content":"        printWrapper(\"-\");","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"\\t Welcome to NUSFC 24 \");","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"HenryGan138"},"content":"        printWrapper(\"-\");","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"hwc0419"},"content":"     * Prints goodbye message when program terminates","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"hwc0419"},"content":"    public static void printGoodbyeMsg() {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"HenryGan138"},"content":"        printWrapper(\"-\");","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"\\t See you next time on court!\");","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"HenryGan138"},"content":"        printWrapper(\"-\");","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"hwc0419"},"content":"     * Method to check if the shot resulted in a goal","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"hwc0419"},"content":"     * If shoot direction matches save direction, it\u0027s not a goal and the returned value is false.","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"HenryGan138"},"content":"    public static void printGoalBeforeShotforBeginner() {","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"HenryGan138"},"content":"        assert MatchStat.getRoundCount() \u003e 0 : \"Round count should be greater than zero.\";","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"HenryGan138"},"content":"        logger.info(\"Round \" + MatchStat.getRoundCount());","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"Match \" + MatchStat.getMatchCount());","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"Round \" + MatchStat.getRoundCount());","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"_______________________________\");","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"|         |         |         |\");","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"|         |         |         |\");","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"|    0    |    1    |    2    |\");","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"|         |         |         |\");","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"|         |         |         |\");","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"\\nSelect direction to shoot : [0-2]\");","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"HenryGan138"},"content":"    public static void printGoalBeforeShotforMedium() {","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"HenryGan138"},"content":"        assert MatchStat.getRoundCount() \u003e 0 : \"Round count should be greater than zero.\";","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"HenryGan138"},"content":"        logger.info(\"Round \" + MatchStat.getRoundCount());","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"Match \" + MatchStat.getMatchCount());","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"Round \" + MatchStat.getRoundCount());","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"_______________________________\");","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"|    0    |    1    |    2    |\");","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"|         |         |         |\");","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"|_________|_________|_________|\");","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"|         |         |         |\");","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"|    3    |    4    |    5    |\");","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"\\nSelect direction to shoot : [0-2] WILL COMPLETE IN V2.0b\");","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"HenryGan138"},"content":"    public static void printGoalBeforeShotforExpert() {","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"HenryGan138"},"content":"        assert MatchStat.getRoundCount() \u003e 0 : \"Round count should be greater than zero.\";","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"HenryGan138"},"content":"        logger.info(\"Round \" + MatchStat.getRoundCount());","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"Match \" + MatchStat.getMatchCount());","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"Round \" + MatchStat.getRoundCount());","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"_______________________________\");","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"|    0    |    1    |    2    |\");","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"|---------|---------|---------|\");","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"|    3    |    4    |    5    |\");","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"|---------|---------|---------|\");","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"|    6    |    7    |    8    |\");","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"\\nSelect direction to shoot : [0-2] WILL COMPLETE IN V2.0b\");","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"hwc0419"},"content":"    public static void printGoalAfterShot(boolean goalScored) {","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"hwc0419"},"content":"        if (goalScored) {","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"ymirmeddeb"},"content":"            logger.info(\"GOAL!!!!\");","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"_______________________________\");","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"| *    *  |  *  *   | *      *|\");","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"|    *    |       * |     *   |\");","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"|*   *    | *   *   |  *   *  |\");","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"|      *  |    *    |*      * |\");","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"HenryGan138"},"content":"            System.out.println(\"|   *     |*   *  * | *   *   |\");","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"GOAL!!!!\");","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"hwc0419"},"content":"        } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"ymirmeddeb"},"content":"            logger.info(\"No goal :((((\");","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"_______________________________\");","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"\\\\         \\\\         \\\\         \\\\\");","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\" \\\\         \\\\         \\\\         \\\\\");","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"  \\\\         \\\\         \\\\         \\\\\");","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"   \\\\         \\\\         \\\\         \\\\\");","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"HenryGan138"},"content":"            System.out.println(\"    \\\\         \\\\         \\\\         \\\\\");","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"hwc0419"},"content":"            System.out.println(\"no goal :((((\");","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"hwc0419"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"runxinghuan"},"content":"        showScore();","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"runxinghuan"},"content":"    private static void showScore() {","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"Your score: \" + MatchStat.getPlayerScore());","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"Opponent\u0027s score: \" + MatchStat.getAiScore());","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"runxinghuan"},"content":"    //@@author runxinghuan","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"runxinghuan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"runxinghuan"},"content":"     * Prints the result after a match ends.","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"runxinghuan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"runxinghuan"},"content":"    public static void printMatchResult() {","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"runxinghuan"},"content":"        if (MatchStat.getIsPlayerWin()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"runxinghuan"},"content":"            System.out.println(\"Nice! You won this match! Wanna a new match?\");","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"runxinghuan"},"content":"        } else {","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"runxinghuan"},"content":"            System.out.println(\"You lost this match. Wanna a new match?\");","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"runxinghuan"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"runxinghuan"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"runxinghuan"},"content":"     * Prints out the goal before \"save\" command when the player\u0027s saving ability is beginner.","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"runxinghuan"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"runxinghuan"},"content":"    public static void printGoalBeforeSaveForBeginner() {","lastModifiedDate":"2024-03-30"},{"lineNumber":139,"author":{"gitId":"runxinghuan"},"content":"        assert MatchStat.getRoundCount() \u003e 0 : \"Round count should be greater than zero.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"runxinghuan"},"content":"        logger.info(\"Round \" + MatchStat.getRoundCount());","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"Match \" + MatchStat.getMatchCount());","lastModifiedDate":"2024-03-30"},{"lineNumber":142,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"Round \" + MatchStat.getRoundCount());","lastModifiedDate":"2024-03-30"},{"lineNumber":143,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"_______________________________\");","lastModifiedDate":"2024-03-30"},{"lineNumber":144,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"|         |         |         |\");","lastModifiedDate":"2024-03-30"},{"lineNumber":145,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"|         |         |         |\");","lastModifiedDate":"2024-03-30"},{"lineNumber":146,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"|    0    |    1    |    2    |\");","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"|         |         |         |\");","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"|         |         |         |\");","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"\\nSelect direction to save : [0-2]\");","lastModifiedDate":"2024-03-30"},{"lineNumber":150,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":151,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"runxinghuan"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":153,"author":{"gitId":"runxinghuan"},"content":"     * Prints out the goal before \"save\" command when the player\u0027s saving ability is medium.","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"runxinghuan"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"runxinghuan"},"content":"    public static void printGoalBeforeSaveForMedium() {","lastModifiedDate":"2024-03-30"},{"lineNumber":156,"author":{"gitId":"runxinghuan"},"content":"        assert MatchStat.getRoundCount() \u003e 0 : \"Round count should be greater than zero.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":157,"author":{"gitId":"runxinghuan"},"content":"        logger.info(\"Round \" + MatchStat.getRoundCount());","lastModifiedDate":"2024-03-30"},{"lineNumber":158,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"Match \" + MatchStat.getMatchCount());","lastModifiedDate":"2024-03-30"},{"lineNumber":159,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"Round \" + MatchStat.getRoundCount());","lastModifiedDate":"2024-03-30"},{"lineNumber":160,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"_______________________________\");","lastModifiedDate":"2024-03-30"},{"lineNumber":161,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"|    0    |    1    |    2    |\");","lastModifiedDate":"2024-03-30"},{"lineNumber":162,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"|         |         |         |\");","lastModifiedDate":"2024-03-30"},{"lineNumber":163,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"|_________|_________|_________|\");","lastModifiedDate":"2024-03-30"},{"lineNumber":164,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"|         |         |         |\");","lastModifiedDate":"2024-03-30"},{"lineNumber":165,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"|    3    |    4    |    5    |\");","lastModifiedDate":"2024-03-30"},{"lineNumber":166,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"\\nSelect direction to save : [0-2] WILL COMPLETE IN V2.0b\");","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":168,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":169,"author":{"gitId":"runxinghuan"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":170,"author":{"gitId":"runxinghuan"},"content":"     * Prints out the goal before \"save\" command when the player\u0027s saving ability is expert.","lastModifiedDate":"2024-03-30"},{"lineNumber":171,"author":{"gitId":"runxinghuan"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":172,"author":{"gitId":"runxinghuan"},"content":"    public static void printGoalBeforeSaveForExpert() {","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"runxinghuan"},"content":"        assert MatchStat.getRoundCount() \u003e 0 : \"Round count should be greater than zero.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":174,"author":{"gitId":"runxinghuan"},"content":"        logger.info(\"Round \" + MatchStat.getRoundCount());","lastModifiedDate":"2024-03-30"},{"lineNumber":175,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"Match \" + MatchStat.getMatchCount());","lastModifiedDate":"2024-03-30"},{"lineNumber":176,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"Round \" + MatchStat.getRoundCount());","lastModifiedDate":"2024-03-30"},{"lineNumber":177,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"_______________________________\");","lastModifiedDate":"2024-03-30"},{"lineNumber":178,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"|    0    |    1    |    2    |\");","lastModifiedDate":"2024-03-30"},{"lineNumber":179,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"|---------|---------|---------|\");","lastModifiedDate":"2024-03-30"},{"lineNumber":180,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"|    3    |    4    |    5    |\");","lastModifiedDate":"2024-03-30"},{"lineNumber":181,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"|---------|---------|---------|\");","lastModifiedDate":"2024-03-30"},{"lineNumber":182,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"|    6    |    7    |    8    |\");","lastModifiedDate":"2024-03-30"},{"lineNumber":183,"author":{"gitId":"runxinghuan"},"content":"        System.out.println(\"\\nSelect direction to save : [0-2] WILL COMPLETE IN V2.0b\");","lastModifiedDate":"2024-03-30"},{"lineNumber":184,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":185,"author":{"gitId":"runxinghuan"},"content":"    //@@author","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"hwc0419"},"content":"    ","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"ymirmeddeb"},"content":"    public static void printSaveResult(boolean isGoalSaved) {","lastModifiedDate":"2024-03-26"},{"lineNumber":188,"author":{"gitId":"ymirmeddeb"},"content":"        if (isGoalSaved) {","lastModifiedDate":"2024-03-26"},{"lineNumber":189,"author":{"gitId":"ymirmeddeb"},"content":"            logger.info(\"Penalty saved!\");","lastModifiedDate":"2024-03-26"},{"lineNumber":190,"author":{"gitId":"ymirmeddeb"},"content":"            System.out.println(\"You saved the penalty!\");","lastModifiedDate":"2024-03-26"},{"lineNumber":191,"author":{"gitId":"ymirmeddeb"},"content":"        } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":192,"author":{"gitId":"ymirmeddeb"},"content":"            logger.info(\"Goal conceded :(\");","lastModifiedDate":"2024-03-26"},{"lineNumber":193,"author":{"gitId":"ymirmeddeb"},"content":"            System.out.println(\"You failed to save the penalty!\");","lastModifiedDate":"2024-03-26"},{"lineNumber":194,"author":{"gitId":"ymirmeddeb"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":195,"author":{"gitId":"runxinghuan"},"content":"        showScore();","lastModifiedDate":"2024-03-31"},{"lineNumber":196,"author":{"gitId":"ymirmeddeb"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":197,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":198,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"hwc0419"},"content":"     * Prints \"list is empty\" if tasks list is empty","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"hwc0419"},"content":"    public static void printListEmpty() {","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"\\t List is empty. Add tasks using commands \\\"todo\\\", \\\"deadline\\\", \\\"event\\\".\");","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"hwc0419"},"content":"     * Prints an error message indicating wrong command is entered","lastModifiedDate":"2024-03-20"},{"lineNumber":207,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":208,"author":{"gitId":"hwc0419"},"content":"    public static void printErrorWrongCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":209,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"\\t CommandParser: Command not found \");","lastModifiedDate":"2024-03-24"},{"lineNumber":210,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":211,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":212,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":213,"author":{"gitId":"hwc0419"},"content":"     * Prints an error message indicating command failed to execute","lastModifiedDate":"2024-03-23"},{"lineNumber":214,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":215,"author":{"gitId":"hwc0419"},"content":"    public static void printErrorExecutionFail() {","lastModifiedDate":"2024-03-20"},{"lineNumber":216,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"\\t Ui: Command could not be executed \");","lastModifiedDate":"2024-03-21"},{"lineNumber":217,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"\\t Try again\");","lastModifiedDate":"2024-03-20"},{"lineNumber":218,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":219,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":220,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":221,"author":{"gitId":"hwc0419"},"content":"     * Prints an error message indicating an unknown error has occured","lastModifiedDate":"2024-03-20"},{"lineNumber":222,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":223,"author":{"gitId":"hwc0419"},"content":"    public static void printErrorUnknown() {","lastModifiedDate":"2024-03-20"},{"lineNumber":224,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"\\t Ui: Unexpected error \");","lastModifiedDate":"2024-03-21"},{"lineNumber":225,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":226,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":227,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":228,"author":{"gitId":"hwc0419"},"content":"     * Prints an error message indicating there is at least one bad argument provided","lastModifiedDate":"2024-03-20"},{"lineNumber":229,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":230,"author":{"gitId":"hwc0419"},"content":"    public static void printErrorBadTokens() {","lastModifiedDate":"2024-03-20"},{"lineNumber":231,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"\\t Ui: Bad Token Error, please check your arguments\");","lastModifiedDate":"2024-03-24"},{"lineNumber":232,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":233,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":234,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":235,"author":{"gitId":"hwc0419"},"content":"     * Prints an error message stating the number of arguments given","lastModifiedDate":"2024-03-23"},{"lineNumber":236,"author":{"gitId":"hwc0419"},"content":"     * versus the number of arguments expected for given command","lastModifiedDate":"2024-03-23"},{"lineNumber":237,"author":{"gitId":"hwc0419"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":238,"author":{"gitId":"hwc0419"},"content":"     * @param correctArgumentCount the expected number of arguments for given command","lastModifiedDate":"2024-03-20"},{"lineNumber":239,"author":{"gitId":"hwc0419"},"content":"     * @param userArgumentCount    the given number of arguments read from user input","lastModifiedDate":"2024-03-20"},{"lineNumber":240,"author":{"gitId":"hwc0419"},"content":"     * @param userCommandName      the command name read from user input","lastModifiedDate":"2024-03-20"},{"lineNumber":241,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":242,"author":{"gitId":"hwc0419"},"content":"    public static void printErrorArgumentsMismatch(String userCommandName,","lastModifiedDate":"2024-03-23"},{"lineNumber":243,"author":{"gitId":"hwc0419"},"content":"                                                   int userArgumentCount, int correctArgumentCount) {","lastModifiedDate":"2024-03-23"},{"lineNumber":244,"author":{"gitId":"hwc0419"},"content":"        System.out.printf(\"\\t SyntaxAnalyser: Command %s contains too %s arguments. Given: %d - Expected: %d\\n\",","lastModifiedDate":"2024-03-20"},{"lineNumber":245,"author":{"gitId":"hwc0419"},"content":"                userCommandName,","lastModifiedDate":"2024-03-20"},{"lineNumber":246,"author":{"gitId":"hwc0419"},"content":"                userArgumentCount \u003c correctArgumentCount ? \"few\" : \"many\",","lastModifiedDate":"2024-03-20"},{"lineNumber":247,"author":{"gitId":"hwc0419"},"content":"                userArgumentCount, correctArgumentCount);","lastModifiedDate":"2024-03-20"},{"lineNumber":248,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":249,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":250,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":251,"author":{"gitId":"hwc0419"},"content":"     * Prints an error message indicating that the regex pattern failed to match at a given argument position","lastModifiedDate":"2024-03-23"},{"lineNumber":252,"author":{"gitId":"hwc0419"},"content":"     * for a given command name","lastModifiedDate":"2024-03-23"},{"lineNumber":253,"author":{"gitId":"hwc0419"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":254,"author":{"gitId":"hwc0419"},"content":"     * @param argumentPosition the index position of the argument which failed to match the correct type","lastModifiedDate":"2024-03-20"},{"lineNumber":255,"author":{"gitId":"hwc0419"},"content":"     * @param regex            the correct type for the argument","lastModifiedDate":"2024-03-20"},{"lineNumber":256,"author":{"gitId":"hwc0419"},"content":"     * @param commandName     the name of the given command","lastModifiedDate":"2024-03-23"},{"lineNumber":257,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":258,"author":{"gitId":"hwc0419"},"content":"    public static void printErrorWrongArgumentType(final String commandName, String regex, int argumentPosition) {","lastModifiedDate":"2024-03-23"},{"lineNumber":259,"author":{"gitId":"hwc0419"},"content":"        int userRanking \u003d argumentPosition + 1;","lastModifiedDate":"2024-03-20"},{"lineNumber":260,"author":{"gitId":"hwc0419"},"content":"        String rankingSuffix;","lastModifiedDate":"2024-03-20"},{"lineNumber":261,"author":{"gitId":"hwc0419"},"content":"        switch (userRanking) {","lastModifiedDate":"2024-03-20"},{"lineNumber":262,"author":{"gitId":"hwc0419"},"content":"        case 1:","lastModifiedDate":"2024-03-20"},{"lineNumber":263,"author":{"gitId":"hwc0419"},"content":"            rankingSuffix \u003d \"st\";","lastModifiedDate":"2024-03-20"},{"lineNumber":264,"author":{"gitId":"hwc0419"},"content":"            break;","lastModifiedDate":"2024-03-20"},{"lineNumber":265,"author":{"gitId":"hwc0419"},"content":"        case 2:","lastModifiedDate":"2024-03-20"},{"lineNumber":266,"author":{"gitId":"hwc0419"},"content":"            rankingSuffix \u003d \"nd\";","lastModifiedDate":"2024-03-20"},{"lineNumber":267,"author":{"gitId":"hwc0419"},"content":"            break;","lastModifiedDate":"2024-03-20"},{"lineNumber":268,"author":{"gitId":"hwc0419"},"content":"        case 3:","lastModifiedDate":"2024-03-20"},{"lineNumber":269,"author":{"gitId":"hwc0419"},"content":"            rankingSuffix \u003d \"rd\";","lastModifiedDate":"2024-03-20"},{"lineNumber":270,"author":{"gitId":"hwc0419"},"content":"            break;","lastModifiedDate":"2024-03-20"},{"lineNumber":271,"author":{"gitId":"hwc0419"},"content":"        default:","lastModifiedDate":"2024-03-20"},{"lineNumber":272,"author":{"gitId":"hwc0419"},"content":"            rankingSuffix \u003d \"th\";","lastModifiedDate":"2024-03-20"},{"lineNumber":273,"author":{"gitId":"hwc0419"},"content":"            break;","lastModifiedDate":"2024-03-20"},{"lineNumber":274,"author":{"gitId":"hwc0419"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":275,"author":{"gitId":"hwc0419"},"content":"        System.out.printf(\"\\t SyntaxAnalyser: %s expects the %d%s argument to be %s\\n\",","lastModifiedDate":"2024-03-20"},{"lineNumber":276,"author":{"gitId":"hwc0419"},"content":"                commandName, userRanking, rankingSuffix, regex);","lastModifiedDate":"2024-03-23"},{"lineNumber":277,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":278,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":279,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":280,"author":{"gitId":"hwc0419"},"content":"     * Prints an error message indicating the selected index is not in range","lastModifiedDate":"2024-03-20"},{"lineNumber":281,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":282,"author":{"gitId":"hwc0419"},"content":"    public static void printErrorIndexOutOfRange() {","lastModifiedDate":"2024-03-20"},{"lineNumber":283,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"\\t List: Selected index not in range. Try again.\");","lastModifiedDate":"2024-03-20"},{"lineNumber":284,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":285,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":286,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":287,"author":{"gitId":"hwc0419"},"content":"     * Prints an error message indicating the cache file is corrupted at a given line","lastModifiedDate":"2024-03-20"},{"lineNumber":288,"author":{"gitId":"hwc0419"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":289,"author":{"gitId":"hwc0419"},"content":"     * @param lineNum the line number which does not follow the file format of cache file","lastModifiedDate":"2024-03-20"},{"lineNumber":290,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":291,"author":{"gitId":"hwc0419"},"content":"    public static void printFileCorruptionError(int lineNum) {","lastModifiedDate":"2024-03-20"},{"lineNumber":292,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"Cache file is corrupted at line \" + lineNum);","lastModifiedDate":"2024-03-20"},{"lineNumber":293,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"Failed to load cache\");","lastModifiedDate":"2024-03-20"},{"lineNumber":294,"author":{"gitId":"hwc0419"},"content":"        System.out.println(\"Program will start with empty list\");","lastModifiedDate":"2024-03-20"},{"lineNumber":295,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":296,"author":{"gitId":"hwc0419"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":297,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"hwc0419":166,"runxinghuan":69,"HenryGan138":48,"ymirmeddeb":14}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hwc0419"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.exception.ArgumentMismatchException;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.exception.BadTokenException;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.exception.IllegalCommandException;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"hwc0419"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"hwc0419"},"content":"public class Parser {","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"hwc0419"},"content":"    private static final Logger logger \u003d Logger.getLogger(Parser.class.getName());","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"hwc0419"},"content":"    private String commandName;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"hwc0419"},"content":"    private String[] argumentTokens \u003d {};","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"hwc0419"},"content":"    public Parser(String userInput) throws IllegalCommandException, ArgumentMismatchException, BadTokenException {","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"hwc0419"},"content":"        //default case: User enters a valid command, the command expects no arguments","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"hwc0419"},"content":"        //nameArgstrPair is either size 1 or 2","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"hwc0419"},"content":"        final String[] nameArgstrPair \u003d parseIntoNameAndArgumentString(userInput);","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"hwc0419"},"content":"        assert nameArgstrPair.length \u003d\u003d 1 || nameArgstrPair.length \u003d\u003d 2;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"hwc0419"},"content":"        logger.info(\"Parsed command \" + nameArgstrPair[0] +","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"hwc0419"},"content":"                (nameArgstrPair.length \u003d\u003d 1 ? \" with no arguments\": \" with at least one argument\"));","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"hwc0419"},"content":"        final String userCommandName \u003d getUserCommandName(nameArgstrPair);","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"hwc0419"},"content":"        commandName \u003d userCommandName.toUpperCase();","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"hwc0419"},"content":"        final String userArgumentString;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"hwc0419"},"content":"        if (!SyntaxAnalyser.validateUserCommandName(userCommandName)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"hwc0419"},"content":"            commandName \u003d \"NOT_A_COMMAND\";","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"hwc0419"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"hwc0419"},"content":"        } else if (hasArgumentString(nameArgstrPair)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"hwc0419"},"content":"            userArgumentString \u003d getUserArgumentString(nameArgstrPair);","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"hwc0419"},"content":"            final String argSeparator \u003d \" /\";","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"hwc0419"},"content":"            argumentTokens \u003d parseIntoTokens(userArgumentString, argSeparator);","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"hwc0419"},"content":"            if (!isCorrectUserArgumentCount()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"hwc0419"},"content":"                throw new ArgumentMismatchException(commandName, argumentTokens.length);","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"hwc0419"},"content":"            } else if (!SyntaxAnalyser.validateTokens(commandName, argumentTokens)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"hwc0419"},"content":"                throw new BadTokenException();","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"hwc0419"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"hwc0419"},"content":"        } else if (!isCorrectUserArgumentCount()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"hwc0419"},"content":"            throw new ArgumentMismatchException(commandName, argumentTokens.length);","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"hwc0419"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"hwc0419"},"content":"    private static String getUserArgumentString(String[] nameArgstrPair) {","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"hwc0419"},"content":"        return nameArgstrPair[1];","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"hwc0419"},"content":"    private static String getUserCommandName(String[] nameArgstrPair) {","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"hwc0419"},"content":"        return nameArgstrPair[0];","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"hwc0419"},"content":"    private String[] parseIntoTokens(final String userArgumentString, final String separator) {","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"hwc0419"},"content":"        final int expectedArgumentCount \u003d SyntaxAnalyser.getArgumentCount(commandName);","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"hwc0419"},"content":"        return userArgumentString.split(separator, expectedArgumentCount);","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"hwc0419"},"content":"    private boolean isCorrectUserArgumentCount() {","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"hwc0419"},"content":"        int userArgumentCount \u003d argumentTokens.length;","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"hwc0419"},"content":"        int correctArgumentCount \u003d SyntaxAnalyser.getArgumentCount(commandName);","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"hwc0419"},"content":"        return correctArgumentCount \u003d\u003d userArgumentCount;","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"hwc0419"},"content":"    private boolean hasArgumentString(String[] nameArgstrPair) {","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"hwc0419"},"content":"        return nameArgstrPair.length \u003d\u003d 2;","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"hwc0419"},"content":"    public static String[] parseIntoNameAndArgumentString(String userInput) {","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"hwc0419"},"content":"        final String nameArgStrSeparator \u003d \" \";","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"hwc0419"},"content":"        return userInput.split(nameArgStrSeparator, 2);","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"hwc0419"},"content":"    public String getCommandName() {","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"hwc0419"},"content":"        return commandName;","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"hwc0419"},"content":"    public String[] getArgumentTokens() {","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"hwc0419"},"content":"        return argumentTokens;","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"hwc0419"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"hwc0419":80}},{"path":"src/main/java/seedu/duke/Penalty.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IncyBot"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"IncyBot"},"content":"import seedu.duke.ai.Ai;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"IncyBot"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"IncyBot"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"IncyBot"},"content":" * Handles the penalty command for the game.","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"IncyBot"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"IncyBot"},"content":"public class Penalty {","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"IncyBot"},"content":"    private static final String PENALTY_PROMPT \u003d \"Enter the direction to shoot the penalty (0, 1, or 2): \";","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"IncyBot"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"IncyBot"},"content":"     * Executes the penalty command.","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"IncyBot"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"IncyBot"},"content":"    public static void executePenalty(Ai ai) {","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"IncyBot"},"content":"        int userDirection \u003d getUserPenaltyDirection();","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"IncyBot"},"content":"        int aiDirection \u003d ai.getAiDirection();","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"IncyBot"},"content":"        boolean isGoal \u003d CommandList.goalCheck(userDirection, aiDirection);","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"IncyBot"},"content":"        Formatter.printGoalAfterShot(isGoal);","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"IncyBot"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"IncyBot"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"IncyBot"},"content":"     * Prompts the user to enter the penalty direction and returns the corresponding integer value.","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"IncyBot"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"IncyBot"},"content":"     * @return The user\u0027s penalty direction as an integer (0, 1, or 2).","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"IncyBot"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"IncyBot"},"content":"    private static int getUserPenaltyDirection() {","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"IncyBot"},"content":"        System.out.print(PENALTY_PROMPT);","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"IncyBot"},"content":"        String directionString \u003d Ui.userInput;","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"IncyBot"},"content":"        int userDirection \u003d convertToShootDirection(directionString);","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"IncyBot"},"content":"        return userDirection;","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"IncyBot"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"IncyBot"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"IncyBot"},"content":"     * Converts the user\u0027s input direction to an integer value.","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"IncyBot"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"IncyBot"},"content":"     * @param direction The user\u0027s input direction as a string.","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"IncyBot"},"content":"     * @return The user\u0027s input direction as an integer (0, 1, or 2), or -1 if the input is invalid.","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"IncyBot"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"IncyBot"},"content":"    public static int convertToShootDirection(String direction) {","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"IncyBot"},"content":"        int directionIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"IncyBot"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"IncyBot"},"content":"            directionIndex \u003d Integer.parseInt(direction);","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"IncyBot"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"IncyBot"},"content":"            Formatter.printErrorWrongArgumentType(\"PENALTY\", \"^[0-2]$\", 0);","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"IncyBot"},"content":"            return -1; // Invalid input","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"IncyBot"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"IncyBot"},"content":"        if (directionIndex \u003e\u003d Ai.getMinDirection() \u0026\u0026 directionIndex \u003c\u003d Ai.getMaxDirection()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"IncyBot"},"content":"            return directionIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"IncyBot"},"content":"        } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"IncyBot"},"content":"            Formatter.printErrorWrongArgumentType(\"PENALTY\", \"^[0-2]$\", 0);","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"IncyBot"},"content":"            return -1; // Invalid direction","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"IncyBot"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"IncyBot"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"IncyBot"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"IncyBot":56}},{"path":"src/main/java/seedu/duke/PlayerList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HenryGan138"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"HenryGan138"},"content":" * Provides functionality for managing a list of player objects,","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"HenryGan138"},"content":" * v2.0 add the ability to upgrade a player\u0027s skill based on their current skill level and match count.","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"HenryGan138"},"content":" *","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"HenryGan138"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"HenryGan138"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"HenryGan138"},"content":"import seedu.duke.player.ExpertSkill;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"HenryGan138"},"content":"import seedu.duke.player.MediumSkill;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"HenryGan138"},"content":"import seedu.duke.player.Player;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"HenryGan138"},"content":"import seedu.duke.stats.MatchStat;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"HenryGan138"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"HenryGan138"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"HenryGan138"},"content":"public class PlayerList {","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"HenryGan138"},"content":"    public static ArrayList\u003cPlayer\u003e l1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"HenryGan138"},"content":"    public static void skillUpgrade(int curPlayer){","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"HenryGan138"},"content":"        Player player \u003d l1.get(curPlayer);","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"HenryGan138"},"content":"        player.matchCount\u003d MatchStat.getMatchCount();","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"HenryGan138"},"content":"        if (player.getSkill()\u003d\u003d1){","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"HenryGan138"},"content":"            l1.add(new MediumSkill(player.name,player.matchCount));","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"HenryGan138"},"content":"            System.out.println(\"--------NUSFC24-------\");","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"HenryGan138"},"content":"            System.out.println(\"Congratulations! Your player\u0027s skill has updated to medium level.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"HenryGan138"},"content":"        }else if ((player.getSkill()\u003d\u003d2)\u0026\u0026(player.matchCount\u003e\u003d5)){","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"HenryGan138"},"content":"            l1.add(new ExpertSkill(player.name,player.matchCount));","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"HenryGan138"},"content":"            System.out.println(\"--------NUSFC24-------\");","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"HenryGan138"},"content":"            System.out.println(\"Congratulations! Your player\u0027s skill has updated to expert level.\");","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"HenryGan138"},"content":"        }else{","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"HenryGan138"},"content":"            return;","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"runxinghuan"},"content":"        Ui.curPlayer \u003d l1.size()-2;","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"HenryGan138"},"content":"        l1.remove(0);","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"runxinghuan"},"content":"        l1.get(Ui.curPlayer).printSelfInfo();","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"HenryGan138"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"runxinghuan":2,"HenryGan138":37}},{"path":"src/main/java/seedu/duke/Save.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ymirmeddeb"},"content":"/*","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"ymirmeddeb"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"ymirmeddeb"},"content":"import seedu.duke.ai.Ai;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"runxinghuan"},"content":"import seedu.duke.stats.MatchStat;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"ymirmeddeb"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"ymirmeddeb"},"content":"public class Save {","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"runxinghuan"},"content":"    public static void executeSave() {","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"runxinghuan"},"content":"        int userSaveDirection \u003d getUserSaveDirection();","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"runxinghuan"},"content":"        int aiPenaltyDirection \u003d Ai.getAiDirection();","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"runxinghuan"},"content":"        boolean isGoalSaved \u003d userSaveDirection \u003d\u003d aiPenaltyDirection;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"runxinghuan"},"content":"        Formatter.printSaveResult(isGoalSaved);","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"runxinghuan"},"content":"        MatchStat.updateStat(isGoalSaved);","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"runxinghuan"},"content":"    private static int getUserSaveDirection() {","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"ymirmeddeb"},"content":"        int userDirection \u003d -1;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"ymirmeddeb"},"content":"        while (userDirection \u003d\u003d -1) {","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"runxinghuan"},"content":"            System.out.print(\"Enter the direction to save the penalty (0, 1, or 2): \");","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"runxinghuan"},"content":"            String directionString \u003d Ui.IN.nextLine().trim();","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"ymirmeddeb"},"content":"            userDirection \u003d convertToShootDirection(directionString);","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"runxinghuan"},"content":"            if (userDirection \u003d\u003d -1) {","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"runxinghuan"},"content":"                System.out.println(\"Invalid direction! Please enter 0, 1, or 2.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"runxinghuan"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"ymirmeddeb"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"runxinghuan"},"content":"        return userDirection;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"ymirmeddeb"},"content":"    private static int convertToShootDirection(String direction) {","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"ymirmeddeb"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"ymirmeddeb"},"content":"            int directionIndex \u003d Integer.parseInt(direction);","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"ymirmeddeb"},"content":"            if (directionIndex \u003e\u003d 0 \u0026\u0026 directionIndex \u003c\u003d 2) {","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"ymirmeddeb"},"content":"                return directionIndex;","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"ymirmeddeb"},"content":"            } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"ymirmeddeb"},"content":"                return -1; // Invalid direction","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"ymirmeddeb"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"ymirmeddeb"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"ymirmeddeb"},"content":"            return -1; // Input was not an integer","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"ymirmeddeb"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"ymirmeddeb"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"ymirmeddeb"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"ymirmeddeb"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"ymirmeddeb"},"content":"*/","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"runxinghuan":17,"ymirmeddeb":28}},{"path":"src/main/java/seedu/duke/SyntaxAnalyser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hwc0419"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"hwc0419"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"hwc0419"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"hwc0419"},"content":"public class SyntaxAnalyser {","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"hwc0419"},"content":"    //check if argument token is an integer ranging from 0 to 2","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"hwc0419"},"content":"    private static final String VALID_INDEX_REGEX \u003d \"^[0-2]$\";","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"hwc0419"},"content":"    //check if argument token is any keyboard character","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"hwc0419"},"content":"    private static final String UNRESTRICTED_CHAR_LENGTH_REGEX \u003d \".+\";","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"hwc0419"},"content":"    private static final String[][] lutRegexSeq \u003d {","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"hwc0419"},"content":"            {},","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"hwc0419"},"content":"            {VALID_INDEX_REGEX},","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"IncyBot"},"content":"            {VALID_INDEX_REGEX}, // Added regex pattern for penalty command","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"runxinghuan"},"content":"            {},","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"runxinghuan"},"content":"            {},","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"runxinghuan"},"content":"            {},","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"runxinghuan"},"content":"            {},","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"runxinghuan"},"content":"            {},","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"runxinghuan"},"content":"            {},","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"ymirmeddeb"},"content":"            {VALID_INDEX_REGEX}","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"hwc0419"},"content":"            //insert new command syntax here","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"hwc0419"},"content":"    };","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"hwc0419"},"content":"     * Returns the argument count for a given command","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"hwc0419"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"hwc0419"},"content":"     * @param commandName the command name of given command","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"hwc0419"},"content":"     * @return The number of arguments for the command","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"hwc0419"},"content":"    public static int getArgumentCount(String commandName) {","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"hwc0419"},"content":"        return getRegexSeq(commandName).length;","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"hwc0419"},"content":"     * Returns the list of regex expressions for a given command","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"hwc0419"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"hwc0419"},"content":"     * @param commandName the command name of given command","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"hwc0419"},"content":"     * @return An array of regex strings used to match each parameter of a given input","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"hwc0419"},"content":"    public static String[] getRegexSeq(String commandName) {","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"hwc0419"},"content":"        return lutRegexSeq[CommandList.valueOf(commandName).ordinal()];","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"hwc0419"},"content":"     * Returns true if the user entered command is valid, false otherwise","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"hwc0419"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"hwc0419"},"content":"     * @param userCommandName the command name of user entered command","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"hwc0419"},"content":"     * @return True if user enters valid command","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"hwc0419"},"content":"    public static boolean validateUserCommandName(String userCommandName) {","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"hwc0419"},"content":"        for (CommandList c : CommandList.values()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"hwc0419"},"content":"            if (c.name().toLowerCase().equals(userCommandName)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"hwc0419"},"content":"                return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"hwc0419"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"hwc0419"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"hwc0419"},"content":"        return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"hwc0419"},"content":"     * Returns true if argument type of all arguments are correct, false otherwise","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"hwc0419"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"hwc0419"},"content":"     * @param commandName   the command name of given command","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"hwc0419"},"content":"     * @param argumentTokens the list of arguments parsed from user input","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"hwc0419"},"content":"     * @return True if all argument types are correct","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"hwc0419"},"content":"    public static boolean validateTokens(String commandName, String[] argumentTokens) {","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"hwc0419"},"content":"        String[] cmdNameRegexSeq \u003d getRegexSeq(commandName);","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"hwc0419"},"content":"        for (int i \u003d 0; i \u003c getArgumentCount(commandName); i++) {","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"hwc0419"},"content":"            Pattern pattern \u003d Pattern.compile(cmdNameRegexSeq[i]);","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"hwc0419"},"content":"            Matcher matcher \u003d pattern.matcher(argumentTokens[i]);","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"hwc0419"},"content":"            if (!matcher.find()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"hwc0419"},"content":"                Formatter.printErrorWrongArgumentType(commandName, cmdNameRegexSeq[i], i);","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"hwc0419"},"content":"                return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"hwc0419"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"hwc0419"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"hwc0419"},"content":"        return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"hwc0419"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"hwc0419":71,"IncyBot":1,"runxinghuan":7,"ymirmeddeb":1}},{"path":"src/main/java/seedu/duke/ai/Ai.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HenryGan138"},"content":"package seedu.duke.ai;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"IncyBot"},"content":"import seedu.duke.DifficultyLevel;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"runxinghuan"},"content":"import java.util.Random;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"runxinghuan"},"content":"public class Ai {","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"runxinghuan"},"content":"    private static int minDirection \u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"runxinghuan"},"content":"    private static int maxDirection \u003d 2;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"IncyBot"},"content":"    public Ai(DifficultyLevel difficultyLevel) {","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"IncyBot"},"content":"        switch (difficultyLevel) {","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"IncyBot"},"content":"            case EASY:","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"IncyBot"},"content":"                minDirection \u003d 0;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"IncyBot"},"content":"                maxDirection \u003d 2;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"IncyBot"},"content":"                break;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"IncyBot"},"content":"            case MEDIUM:","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"IncyBot"},"content":"                minDirection \u003d 0;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"IncyBot"},"content":"                maxDirection \u003d 3;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"IncyBot"},"content":"                break;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"IncyBot"},"content":"            case HARD:","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"IncyBot"},"content":"                minDirection \u003d 0;","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"IncyBot"},"content":"                maxDirection \u003d 4;","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"IncyBot"},"content":"                break;","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"IncyBot"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"hwc0419"},"content":"    public static int getAiDirection() {","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"runxinghuan"},"content":"        Random rand \u003d new Random();","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"IncyBot"},"content":"        int direction \u003d rand.nextInt(maxDirection - minDirection + 1) + minDirection;","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"IncyBot"},"content":"        assert direction \u003e\u003d minDirection \u0026\u0026 direction \u003c\u003d maxDirection : \"Illegal AI direction generated!\";","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"runxinghuan"},"content":"        return direction;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"IncyBot"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"runxinghuan"},"content":"    public static int getMinDirection() {","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"runxinghuan"},"content":"        return minDirection;","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"runxinghuan"},"content":"    public static int getMaxDirection() {","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"runxinghuan"},"content":"        return maxDirection;","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"runxinghuan"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"IncyBot":20,"hwc0419":1,"runxinghuan":21,"HenryGan138":1}},{"path":"src/main/java/seedu/duke/exception/ArgumentMismatchException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hwc0419"},"content":"package seedu.duke.exception;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"hwc0419"},"content":"public class ArgumentMismatchException extends Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"hwc0419"},"content":"    public String userCommandName;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"hwc0419"},"content":"    public int userArgumentCount;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"hwc0419"},"content":"    public ArgumentMismatchException(String userCommandName, int userArgumentCount) {","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"hwc0419"},"content":"        this.userCommandName \u003d userCommandName;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"hwc0419"},"content":"        this.userArgumentCount \u003d userArgumentCount;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"hwc0419"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"hwc0419":11}},{"path":"src/main/java/seedu/duke/exception/BadTokenException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hwc0419"},"content":"package seedu.duke.exception;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"hwc0419"},"content":"public class BadTokenException extends Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"hwc0419"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"hwc0419":5}},{"path":"src/main/java/seedu/duke/exception/IllegalCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hwc0419"},"content":"package seedu.duke.exception;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"hwc0419"},"content":"public class IllegalCommandException extends Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"hwc0419"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"hwc0419":4}},{"path":"src/main/java/seedu/duke/exception/ProcessInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hwc0419"},"content":"package seedu.duke.exception;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"hwc0419"},"content":"public class ProcessInputException extends Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"hwc0419"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"hwc0419":4}},{"path":"src/main/java/seedu/duke/player/BeginnerSkill.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HenryGan138"},"content":"package seedu.duke.player;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"HenryGan138"},"content":"import seedu.duke.Formatter;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"HenryGan138"},"content":"public class BeginnerSkill extends Player {","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"HenryGan138"},"content":"    private int power\u003d1;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"HenryGan138"},"content":"    private final int skill\u003d1;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"HenryGan138"},"content":"    public BeginnerSkill(String name, int matchCount) {","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"HenryGan138"},"content":"        super(name, matchCount);","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"HenryGan138"},"content":"    public void printSelfInfo() {","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"HenryGan138"},"content":"        super.printSelfInfo();","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"HenryGan138"},"content":"    protected void printPower(){","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"HenryGan138"},"content":"        System.out.print(\"Power:\");","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"HenryGan138"},"content":"        for (int i\u003d0; i\u003c3;i++){","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"HenryGan138"},"content":"            if (i\u003cpower){","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"HenryGan138"},"content":"                System.out.print(\" ###\");","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"HenryGan138"},"content":"            }else{","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"HenryGan138"},"content":"                System.out.print(\"    \");","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"HenryGan138"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"HenryGan138"},"content":"        if (power\u003d\u003d1){","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"HenryGan138"},"content":"            System.out.println(\" Level-Beginner\");","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"HenryGan138"},"content":"        }else if (power \u003d\u003d 2){","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"HenryGan138"},"content":"            System.out.println(\" Level-Medium\");","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"HenryGan138"},"content":"        }else{","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"HenryGan138"},"content":"            System.out.println(\" Level-Expert\");","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"HenryGan138"},"content":"    protected void printSkill(){","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"HenryGan138"},"content":"        System.out.print(\"Skill:\");","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"HenryGan138"},"content":"        for (int i\u003d0; i\u003c3;i++){","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"HenryGan138"},"content":"            if (i\u003cskill){","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"HenryGan138"},"content":"                System.out.print(\" ###\");","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"HenryGan138"},"content":"            }else{","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"HenryGan138"},"content":"                System.out.print(\"    \");","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"HenryGan138"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\" Level-Beginner\");","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"HenryGan138"},"content":"    public int getSkill() {","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"HenryGan138"},"content":"        return skill;","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"HenryGan138"},"content":"    public void printGoalBeforeShoot() {","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"HenryGan138"},"content":"        Formatter.printGoalBeforeShotforBeginner();","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"runxinghuan"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"runxinghuan"},"content":"    public void printGoalBeforeSave() {","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"runxinghuan"},"content":"        Formatter.printGoalBeforeSaveForBeginner();","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"HenryGan138"},"content":"    public void upgradePower(int level) {","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"HenryGan138"},"content":"        assert level\u003e\u003d0\u0026\u0026level\u003c\u003d2;","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"HenryGan138"},"content":"        this.power\u003dlevel+1;","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"HenryGan138"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"runxinghuan":5,"HenryGan138":65}},{"path":"src/main/java/seedu/duke/player/ExpertSkill.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HenryGan138"},"content":"package seedu.duke.player;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"HenryGan138"},"content":"import seedu.duke.Formatter;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"HenryGan138"},"content":"public class ExpertSkill extends Player {","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"HenryGan138"},"content":"    private int power \u003d 1;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"HenryGan138"},"content":"    private final int skill \u003d 3;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"HenryGan138"},"content":"    public ExpertSkill(String name, int matchCount) {","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"HenryGan138"},"content":"        super(name, matchCount);","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"HenryGan138"},"content":"    public void printSelfInfo() {","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"HenryGan138"},"content":"        super.printSelfInfo();","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"HenryGan138"},"content":"    protected void printPower() {","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"HenryGan138"},"content":"        System.out.print(\"Power:\");","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"HenryGan138"},"content":"        for (int i\u003d0; i\u003c3;i++){","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"HenryGan138"},"content":"            if (i\u003cpower){","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"HenryGan138"},"content":"                System.out.print(\" ###\");","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"HenryGan138"},"content":"            }else{","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"HenryGan138"},"content":"                System.out.print(\"    \");","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"HenryGan138"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"HenryGan138"},"content":"        if (power\u003d\u003d1){","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"HenryGan138"},"content":"            System.out.println(\" Level-Beginner\");","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"HenryGan138"},"content":"        }else if (power \u003d\u003d 2){","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"HenryGan138"},"content":"            System.out.println(\" Level-Medium\");","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"HenryGan138"},"content":"        }else{","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"HenryGan138"},"content":"            System.out.println(\" Level-Expert\");","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"HenryGan138"},"content":"    protected void printSkill(){","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"HenryGan138"},"content":"        System.out.print(\"Skill:\");","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"HenryGan138"},"content":"        for (int i\u003d0; i\u003c3;i++){","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"HenryGan138"},"content":"            if (i\u003cskill){","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"HenryGan138"},"content":"                System.out.print(\" ###\");","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"HenryGan138"},"content":"            }else{","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"HenryGan138"},"content":"                System.out.print(\"    \");","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"HenryGan138"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\" Level-Expert\");","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"HenryGan138"},"content":"    public int getSkill() {","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"HenryGan138"},"content":"        return skill;","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"HenryGan138"},"content":"    //For now, only finished visualization part, user can only choose 0,1,2","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"HenryGan138"},"content":"    //Will be completed in V2.0b","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"HenryGan138"},"content":"    public void printGoalBeforeShoot() {","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"HenryGan138"},"content":"        Formatter.printGoalBeforeShotforExpert();","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"runxinghuan"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"runxinghuan"},"content":"    public void printGoalBeforeSave() {","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"runxinghuan"},"content":"        Formatter.printGoalBeforeSaveForExpert();","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"HenryGan138"},"content":"    public void upgradePower(int level) {","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"HenryGan138"},"content":"        assert level\u003e\u003d0\u0026\u0026level\u003c\u003d2;","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"HenryGan138"},"content":"        this.power\u003dlevel+1;","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"HenryGan138"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"runxinghuan":5,"HenryGan138":67}},{"path":"src/main/java/seedu/duke/player/MediumSkill.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HenryGan138"},"content":"package seedu.duke.player;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"HenryGan138"},"content":"import seedu.duke.Formatter;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"HenryGan138"},"content":"public class MediumSkill extends Player {","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"HenryGan138"},"content":"    private int power \u003d 1;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"HenryGan138"},"content":"    private final int skill \u003d 2;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"HenryGan138"},"content":"    public MediumSkill(String name, int matchCount) {","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"HenryGan138"},"content":"        super(name, matchCount);","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"HenryGan138"},"content":"    public void printSelfInfo() {","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"HenryGan138"},"content":"        super.printSelfInfo();","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"HenryGan138"},"content":"    protected void printPower() {","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"HenryGan138"},"content":"        System.out.print(\"Power:\");","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"HenryGan138"},"content":"        for (int i\u003d0; i\u003c3;i++){","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"HenryGan138"},"content":"            if (i\u003cpower){","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"HenryGan138"},"content":"                System.out.print(\" ###\");","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"HenryGan138"},"content":"            }else{","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"HenryGan138"},"content":"                System.out.print(\"    \");","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"HenryGan138"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"HenryGan138"},"content":"        if (power\u003d\u003d1){","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"HenryGan138"},"content":"            System.out.println(\" Level-Beginner\");","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"HenryGan138"},"content":"        }else if (power \u003d\u003d 2){","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"HenryGan138"},"content":"            System.out.println(\" Level-Medium\");","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"HenryGan138"},"content":"        }else{","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"HenryGan138"},"content":"            System.out.println(\" Level-Expert\");","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"HenryGan138"},"content":"    public int getSkill() {","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"HenryGan138"},"content":"        return skill;","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"HenryGan138"},"content":"    protected void printSkill(){","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"HenryGan138"},"content":"        System.out.print(\"Skill:\");","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"HenryGan138"},"content":"        for (int i\u003d0; i\u003c3;i++){","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"HenryGan138"},"content":"            if (i\u003cskill){","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"HenryGan138"},"content":"                System.out.print(\" ###\");","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"HenryGan138"},"content":"            }else{","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"HenryGan138"},"content":"                System.out.print(\"    \");","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"HenryGan138"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\" Level-Medium\");","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"HenryGan138"},"content":"    //For now, only finished visualization part, user can only choose 0,1,2","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"HenryGan138"},"content":"    //Will be completed in V2.0b","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"HenryGan138"},"content":"    public void printGoalBeforeShoot() {","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"HenryGan138"},"content":"        Formatter.printGoalBeforeShotforMedium();","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"runxinghuan"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"runxinghuan"},"content":"    public void printGoalBeforeSave() {","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"runxinghuan"},"content":"        Formatter.printGoalBeforeSaveForMedium();","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"HenryGan138"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"HenryGan138"},"content":"    public void upgradePower(int level) {","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"HenryGan138"},"content":"        assert level\u003e\u003d0\u0026\u0026level\u003c\u003d2;","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"HenryGan138"},"content":"        this.power\u003dlevel+1;","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"HenryGan138"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"runxinghuan":5,"HenryGan138":67}},{"path":"src/main/java/seedu/duke/player/Player.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HenryGan138"},"content":"package seedu.duke.player;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"HenryGan138"},"content":"public class Player {","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"HenryGan138"},"content":"    public String name;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"HenryGan138"},"content":"    public int matchCount;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"HenryGan138"},"content":"    private int power;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"HenryGan138"},"content":"    private int skill;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"HenryGan138"},"content":"    public Player(String name, int matchCount) {","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"HenryGan138"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"HenryGan138"},"content":"        this.matchCount \u003d matchCount;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"HenryGan138"},"content":"    public void printSelfInfo(){","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"--------Player Info--------\");","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"Name: \"+this.name);","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"Number of match played: \"+this.matchCount);","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"HenryGan138"},"content":"        printPower();","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"HenryGan138"},"content":"        printSkill();","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"HenryGan138"},"content":"        System.out.println(\"---------------------------\");","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"HenryGan138"},"content":"    public int getSkill() { //For inheritance","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"HenryGan138"},"content":"        return skill;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"HenryGan138"},"content":"    protected void printPower(){} //For override","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"HenryGan138"},"content":"    protected void printSkill(){} //For override","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"HenryGan138"},"content":"    public void printGoalBeforeShoot(){} //For override","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"runxinghuan"},"content":"    public void printGoalBeforeSave(){} //For override","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"HenryGan138"},"content":"    public void upgradePower(int level){} //For override","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"HenryGan138"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"runxinghuan":3,"HenryGan138":32}},{"path":"src/main/java/seedu/duke/stats/MatchStat.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HenryGan138"},"content":"package seedu.duke.stats;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"runxinghuan"},"content":"//@@author runxinghuan","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"runxinghuan"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"runxinghuan"},"content":" * Records and update the stats of the match, and decides whether a match ends and the winner.","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"runxinghuan"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"runxinghuan"},"content":"public class MatchStat {","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"runxinghuan"},"content":"    private static int matchCount \u003d 1;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"runxinghuan"},"content":"    private static int roundCount \u003d 1;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"runxinghuan"},"content":"    private static int playerScore \u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"runxinghuan"},"content":"    private static int aiScore \u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"runxinghuan"},"content":"    private static boolean isPlayerWin \u003d false;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"runxinghuan"},"content":"    private static boolean isMatchEnd \u003d false;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"runxinghuan"},"content":"    private static boolean isPlayerTurn \u003d true;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"runxinghuan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"runxinghuan"},"content":"     * Updates playerScore, aiScore and roundCount after \"shoot\" and \"save\" commands.","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"runxinghuan"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"runxinghuan"},"content":"     * @param isGoal Whether he scores or not.","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"runxinghuan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"runxinghuan"},"content":"    public static void updateStat(boolean isGoal) {","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"runxinghuan"},"content":"        if (isPlayerTurn \u0026\u0026 isGoal) {","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"runxinghuan"},"content":"            playerScore +\u003d 1;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"runxinghuan"},"content":"        } else if (!isPlayerTurn \u0026\u0026 isGoal) {","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"runxinghuan"},"content":"            aiScore +\u003d 1;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"runxinghuan"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"runxinghuan"},"content":"        isPlayerTurn \u003d !isPlayerTurn;","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"runxinghuan"},"content":"        decideMatchEnd();","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"runxinghuan"},"content":"        assert playerScore + aiScore \u003c\u003d roundCount : \"Wrong computation of score.\";","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"runxinghuan"},"content":"        roundCount +\u003d 1;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"runxinghuan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"runxinghuan"},"content":"     * Reset the stats after a new match starts.","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"runxinghuan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"runxinghuan"},"content":"    public static void updateForNewMatch() {","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"runxinghuan"},"content":"        roundCount \u003d 1;","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"runxinghuan"},"content":"        playerScore \u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"runxinghuan"},"content":"        aiScore \u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"runxinghuan"},"content":"        matchCount +\u003d 1;","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"runxinghuan"},"content":"        isMatchEnd \u003d false;","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"runxinghuan"},"content":"        isPlayerTurn \u003d true;","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"runxinghuan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"runxinghuan"},"content":"     * Decides whether a match ends based on best-of-five kicks and sudden death rules.","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"runxinghuan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"runxinghuan"},"content":"    private static void decideMatchEnd() {","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"runxinghuan"},"content":"        int roundsLeftForOneSide \u003d (10 - roundCount) / 2;","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"runxinghuan"},"content":"        if (roundCount % 2 \u003d\u003d 1) {","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"runxinghuan"},"content":"            roundsLeftForOneSide +\u003d 1;","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"runxinghuan"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"runxinghuan"},"content":"        if (roundCount \u003c 10 \u0026\u0026 playerScore \u003e aiScore) {","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"runxinghuan"},"content":"            int scoreDifference \u003d playerScore - aiScore;","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"runxinghuan"},"content":"            if (scoreDifference \u003e roundsLeftForOneSide) {","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"runxinghuan"},"content":"                isMatchEnd \u003d true;","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"runxinghuan"},"content":"                isPlayerWin \u003d true;","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"runxinghuan"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"runxinghuan"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"runxinghuan"},"content":"        if (roundCount \u003c 10 \u0026\u0026 playerScore \u003c aiScore) {","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"runxinghuan"},"content":"            int scoreDifference \u003d aiScore - playerScore;","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"runxinghuan"},"content":"            if (scoreDifference \u003e roundsLeftForOneSide) {","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"runxinghuan"},"content":"                isMatchEnd \u003d true;","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"runxinghuan"},"content":"                isPlayerWin \u003d false;","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"runxinghuan"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"runxinghuan"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"runxinghuan"},"content":"        if (roundCount \u003e\u003d 10 \u0026\u0026 isCompleteRound() \u0026\u0026 playerScore !\u003d aiScore) {","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"runxinghuan"},"content":"            isMatchEnd \u003d true;","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"runxinghuan"},"content":"            isPlayerWin \u003d playerScore \u003e aiScore;","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"runxinghuan"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"runxinghuan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"runxinghuan"},"content":"     * Decides whether both sides have finished shooting in a round.","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"runxinghuan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"runxinghuan"},"content":"    private static boolean isCompleteRound() {","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"runxinghuan"},"content":"        return roundCount % 2 \u003d\u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"runxinghuan"},"content":"    public static boolean getIsPlayerWin() {","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"runxinghuan"},"content":"        return isPlayerWin;","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"runxinghuan"},"content":"    public static int getMatchCount() {","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"runxinghuan"},"content":"        return matchCount;","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"runxinghuan"},"content":"    public static int getRoundCount() {","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"runxinghuan"},"content":"        return roundCount;","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"runxinghuan"},"content":"    public static boolean getIsMatchEnd() {","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"runxinghuan"},"content":"        return isMatchEnd;","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"runxinghuan"},"content":"    public static int getPlayerScore() {","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"runxinghuan"},"content":"        return playerScore;","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"runxinghuan"},"content":"    public static int getAiScore() {","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"runxinghuan"},"content":"        return aiScore;","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"runxinghuan"},"content":"    public static void setMatchCount(int matchCount) {","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"runxinghuan"},"content":"        MatchStat.matchCount \u003d matchCount + 1;","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"runxinghuan"},"content":"    public static boolean getIsPlayerTurn() {","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"runxinghuan"},"content":"        return isPlayerTurn;","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"runxinghuan"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"runxinghuan":114,"HenryGan138":2}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"runxinghuan"},"content":"package seedu.duke.ui;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"IncyBot"},"content":"import seedu.duke.*;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"HenryGan138"},"content":"import seedu.duke.stats.MatchStat;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.exception.ProcessInputException;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.exception.ArgumentMismatchException;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.exception.BadTokenException;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"hwc0419"},"content":"import seedu.duke.exception.IllegalCommandException;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"HenryGan138"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"HenryGan138"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"HenryGan138"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"HenryGan138"},"content":"public class Ui {","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"hwc0419"},"content":"    public static final Scanner IN \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"runxinghuan"},"content":"    public static int curPlayer \u003d 0; // The player in current game return by account login.","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"hwc0419"},"content":"    private static boolean isRunning \u003d true;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"IncyBot"},"content":"    public static String userInput;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"hwc0419"},"content":"    private static Parser userCommandReader;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"IncyBot"},"content":"    private static DifficultyLevel difficultyLevel \u003d DifficultyLevel.EASY;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"HenryGan138"},"content":"    private static final Logger logger \u003d Logger.getLogger(\"Foo\");","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"hwc0419"},"content":"     * Reads user input and stores it","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"hwc0419"},"content":"    public static void beginListening() {","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"HenryGan138"},"content":"        logger.log(Level.INFO, \"going to start processing user input\");","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"hwc0419"},"content":"        userInput \u003d IN.nextLine();","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"hwc0419"},"content":"     * Parses read input into its parameters","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"hwc0419"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"hwc0419"},"content":"     * @throws ProcessInputException If command read from input is invalid","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"hwc0419"},"content":"    public static void processInput() throws ProcessInputException {","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"hwc0419"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"hwc0419"},"content":"            userCommandReader \u003d new Parser(userInput);","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"hwc0419"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"hwc0419"},"content":"            Formatter.printErrorWrongCommand();","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"HenryGan138"},"content":"            logger.log(Level.WARNING, \"wrong command error\");","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"hwc0419"},"content":"            throw new ProcessInputException();","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"hwc0419"},"content":"        } catch (ArgumentMismatchException e1) {","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"hwc0419"},"content":"            int userArgumentCount \u003d e1.userArgumentCount;","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"hwc0419"},"content":"            int correctArgumentCount \u003d SyntaxAnalyser.getArgumentCount(e1.userCommandName);","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"hwc0419"},"content":"            Formatter.printErrorArgumentsMismatch(e1.userCommandName, userArgumentCount, correctArgumentCount);","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"HenryGan138"},"content":"            logger.log(Level.WARNING, \"wrong user input format error\");","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"hwc0419"},"content":"            throw new ProcessInputException();","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"hwc0419"},"content":"        } catch (BadTokenException e2) {","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"hwc0419"},"content":"            Formatter.printErrorBadTokens();","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"hwc0419"},"content":"            throw new ProcessInputException();","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"HenryGan138"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"hwc0419"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"hwc0419"},"content":"     * Runs command based on parsed input","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"hwc0419"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"hwc0419"},"content":"    public static void executeCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"hwc0419"},"content":"        String readUserCommand \u003d userCommandReader.getCommandName();","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"hwc0419"},"content":"        String[] readArgumentTokens \u003d userCommandReader.getArgumentTokens();","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"hwc0419"},"content":"        CommandList selectedCommand \u003d CommandList.valueOf(readUserCommand);","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"runxinghuan"},"content":"        if (MatchStat.getIsMatchEnd()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"runxinghuan"},"content":"            switch (selectedCommand) {","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"runxinghuan"},"content":"            case YES:","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"runxinghuan"},"content":"                MatchStat.updateForNewMatch();","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"runxinghuan"},"content":"                return;","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"runxinghuan"},"content":"            case NO:","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"runxinghuan"},"content":"                CommandList.executeBye();","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"runxinghuan"},"content":"                return;","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"runxinghuan"},"content":"            default:","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"runxinghuan"},"content":"                Formatter.printErrorUnknown();","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"runxinghuan"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"runxinghuan"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"runxinghuan"},"content":"        if (MatchStat.getIsPlayerTurn() \u0026\u0026 selectedCommand \u003d\u003d CommandList.SAVE) {","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"runxinghuan"},"content":"            Formatter.printErrorUnknown();","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"runxinghuan"},"content":"            return;","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"runxinghuan"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"runxinghuan"},"content":"        if (!MatchStat.getIsPlayerTurn() \u0026\u0026 selectedCommand \u003d\u003d CommandList.SHOOT) {","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"runxinghuan"},"content":"            Formatter.printErrorUnknown();","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"runxinghuan"},"content":"            return;","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"runxinghuan"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"hwc0419"},"content":"        switch (selectedCommand) {","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"hwc0419"},"content":"        case BYE:","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"hwc0419"},"content":"            CommandList.executeBye();","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"hwc0419"},"content":"            break;","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"hwc0419"},"content":"        case SHOOT:","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"hwc0419"},"content":"            CommandList.executeShoot(readArgumentTokens);","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"hwc0419"},"content":"            break;","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"IncyBot"},"content":"        case PENALTY:","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"IncyBot"},"content":"            CommandList.executePenalty(difficultyLevel);","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"IncyBot"},"content":"            break;","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"IncyBot"},"content":"        case EASY:","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"IncyBot"},"content":"            difficultyLevel \u003d DifficultyLevel.EASY;","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"IncyBot"},"content":"            System.out.println(\"Difficulty level set to EASY\");","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"IncyBot"},"content":"            break;","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"IncyBot"},"content":"        case MEDIUM:","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"IncyBot"},"content":"            difficultyLevel \u003d DifficultyLevel.MEDIUM;","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"IncyBot"},"content":"            System.out.println(\"Difficulty level set to MEDIUM\");","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"IncyBot"},"content":"            break;","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"IncyBot"},"content":"        case HARD:","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"IncyBot"},"content":"            difficultyLevel \u003d DifficultyLevel.HARD;","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"IncyBot"},"content":"            System.out.println(\"Difficulty level set to HARD\");","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"IncyBot"},"content":"            break;","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"HenryGan138"},"content":"        case UPGRADE:","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"HenryGan138"},"content":"            CommandList.executeUpgrade(readArgumentTokens);","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"IncyBot"},"content":"            break;","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"runxinghuan"},"content":"        case SAVE:","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"ymirmeddeb"},"content":"            CommandList.executeSave(readArgumentTokens);","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"runxinghuan"},"content":"            break;","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"hwc0419"},"content":"        //insert new executable command here","lastModifiedDate":"2024-03-23"},{"lineNumber":117,"author":{"gitId":"hwc0419"},"content":"        default:","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"hwc0419"},"content":"            Formatter.printErrorUnknown();","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"hwc0419"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"HenryGan138"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":121,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"hwc0419"},"content":"    public static void setIsRunning(boolean runState) {","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"hwc0419"},"content":"        isRunning \u003d runState;","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"hwc0419"},"content":"    public static boolean getIsRunning() {","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"hwc0419"},"content":"        return isRunning;","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"HenryGan138"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"hwc0419":64,"IncyBot":19,"runxinghuan":28,"HenryGan138":17,"ymirmeddeb":1}},{"path":"src/test/java/seedu/duke/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hwc0419"},"content":"package seedu.duke;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"hwc0419"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"hwc0419"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"hwc0419"},"content":"import static seedu.duke.Parser.parseIntoNameAndArgumentString;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"hwc0419"},"content":"public class ParserTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"hwc0419"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"hwc0419"},"content":"    public void testParseIntoNameAndArgumentString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"hwc0419"},"content":"        String userInput0 \u003d \"bye\";","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"hwc0419"},"content":"        String userInput1 \u003d \"shoot\";","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"hwc0419"},"content":"        String userInput2 \u003d \"shoot 1\";","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"hwc0419"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"hwc0419"},"content":"        assertEquals(1, parseIntoNameAndArgumentString(userInput0).length);","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"hwc0419"},"content":"        assertEquals(1, parseIntoNameAndArgumentString(userInput1).length);","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"hwc0419"},"content":"        assertEquals(2, parseIntoNameAndArgumentString(userInput2).length);","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"hwc0419"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"hwc0419"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"hwc0419":19}},{"path":"src/test/java/seedu/duke/ai/AiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"runxinghuan"},"content":"package seedu.duke.ai;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"runxinghuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"runxinghuan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"runxinghuan"},"content":"import static seedu.duke.DifficultyLevel.EASY;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"runxinghuan"},"content":"public class AiTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"runxinghuan"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"runxinghuan"},"content":"    public void directionIsLegal() {","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"runxinghuan"},"content":"        Ai ai \u003d new Ai(EASY);","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"runxinghuan"},"content":"        int value \u003d ai.getAiDirection();","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"runxinghuan"},"content":"        this.assertRange(0, 2, value);","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"runxinghuan"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"runxinghuan"},"content":"    public void assertRange(int expectedMin, int expectedMax, int actual) {","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"runxinghuan"},"content":"        assertTrue(actual \u003e\u003d expectedMin \u0026\u0026 actual \u003c\u003d expectedMax);","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"runxinghuan"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"runxinghuan"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"runxinghuan":18}},{"path":"umlDiagram/player.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HenryGan138"},"content":"@startuml FootballPenaltyShooterGameClassDiagram","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"HenryGan138"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"HenryGan138"},"content":"class Player {","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"HenryGan138"},"content":"    - name : String","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"HenryGan138"},"content":"    - matchCount : int","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"HenryGan138"},"content":"    - power : int","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"HenryGan138"},"content":"    - skill : int","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"HenryGan138"},"content":"    + Player(name : String, matchCount : int)","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"HenryGan138"},"content":"    + printSelfInfo() : void","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"HenryGan138"},"content":"    - printPower() : void","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"HenryGan138"},"content":"    - printSkill() : void","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"HenryGan138"},"content":"    + getSkill() : int","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"HenryGan138"},"content":"    + printGoalBeforeShoot() : void","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"HenryGan138"},"content":"    + upgradePower(level : int) : void","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"HenryGan138"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"HenryGan138"},"content":"class MediumSkill {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"HenryGan138"},"content":"    - power : int \u003d 1","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"HenryGan138"},"content":"    - final skill : int \u003d 2","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"HenryGan138"},"content":"    + MediumSkill(name : String, matchCount : int)","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"HenryGan138"},"content":"    + printSelfInfo() : void","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"HenryGan138"},"content":"    + printPower() : void","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"HenryGan138"},"content":"    + getSkill() : int","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"HenryGan138"},"content":"    + printSkill() : void","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"HenryGan138"},"content":"    + printGoalBeforeShoot() : void","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"HenryGan138"},"content":"    + upgradePower(level : int) : void","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"HenryGan138"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"HenryGan138"},"content":"class BeginnerSkill {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"HenryGan138"},"content":"    - power : int \u003d 1","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"HenryGan138"},"content":"    - final skill : int \u003d 1","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"HenryGan138"},"content":"    + MediumSkill(name : String, matchCount : int)","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"HenryGan138"},"content":"    + printSelfInfo() : void","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"HenryGan138"},"content":"    + printPower() : void","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"HenryGan138"},"content":"    + getSkill() : int","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"HenryGan138"},"content":"    + printSkill() : void","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"HenryGan138"},"content":"    + printGoalBeforeShoot() : void","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"HenryGan138"},"content":"    + upgradePower(level : int) : void","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"HenryGan138"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"HenryGan138"},"content":"class ExpertSkill {","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"HenryGan138"},"content":"    - power : int \u003d 1","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"HenryGan138"},"content":"    - final skill : int \u003d 3","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"HenryGan138"},"content":"    + MediumSkill(name : String, matchCount : int)","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"HenryGan138"},"content":"    + printSelfInfo() : void","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"HenryGan138"},"content":"    + printPower() : void","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"HenryGan138"},"content":"    + getSkill() : int","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"HenryGan138"},"content":"    + printSkill() : void","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"HenryGan138"},"content":"    + printGoalBeforeShoot() : void","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"HenryGan138"},"content":"    + upgradePower(level : int) : void","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"HenryGan138"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"HenryGan138"},"content":"class PlayerList {","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"HenryGan138"},"content":"    + {static} l1 : ArrayList\u003cPlayer\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"HenryGan138"},"content":"    + {static} skillUpgrade(curPlayer : int) : void","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"HenryGan138"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"HenryGan138"},"content":"Player \u003c|-- MediumSkill","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"HenryGan138"},"content":"Player \u003c|-- BeginnerSkill","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"HenryGan138"},"content":"Player \u003c|-- ExpertSkill","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"HenryGan138"},"content":"PlayerList \"1\" -- \"*\" Player : manages \u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"HenryGan138"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"HenryGan138":66}},{"path":"umlDiagram/updateSkill.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HenryGan138"},"content":"@startuml skillUpgradeSequence","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"HenryGan138"},"content":"actor User","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"HenryGan138"},"content":"entity \"Ui\" as UI","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"HenryGan138"},"content":"control \"PlayerList\" as PL","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"HenryGan138"},"content":"entity \"Player\" as P","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"HenryGan138"},"content":"entity \"MediumSkill\" as MS","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"HenryGan138"},"content":"entity \"ExpertSkill\" as ES","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"HenryGan138"},"content":"database \"MatchStat\" as MSDB","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"HenryGan138"},"content":"User -\u003e PL : skillUpgrade(curPlayer)","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"HenryGan138"},"content":"PL -\u003e PL : get(curPlayer)","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"HenryGan138"},"content":"PL -\u003e P : matchCount \u003d getMatchCount()","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"HenryGan138"},"content":"PL -\u003e P : getSkill()","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"HenryGan138"},"content":"alt skill \u003d\u003d 1","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"HenryGan138"},"content":"    PL -\u003e MS : new(name, matchCount)","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"HenryGan138"},"content":"    PL -\u003e PL : add(MediumSkill)","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"HenryGan138"},"content":"    PL -\u003e UI : print(\"Skill updated to medium level.\")","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"HenryGan138"},"content":"else skill \u003d\u003d 2 and matchCount \u003e\u003d 5","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"HenryGan138"},"content":"    PL -\u003e ES : new(name, matchCount)","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"HenryGan138"},"content":"    PL -\u003e PL : add(ExpertSkill)","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"HenryGan138"},"content":"    PL -\u003e UI : print(\"Skill updated to expert level.\")","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"HenryGan138"},"content":"else","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"HenryGan138"},"content":"    PL -\u003e UI : return","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"HenryGan138"},"content":"end","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"HenryGan138"},"content":"PL -\u003e PL : curplayer \u003d l1.size()-2","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"HenryGan138"},"content":"PL -\u003e PL : remove(0)","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"HenryGan138"},"content":"PL -\u003e P : printSelfInfo()","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"HenryGan138"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"HenryGan138"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"HenryGan138":32}}]
